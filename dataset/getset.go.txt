function name is Bools { [storage]}
{BasicLit -> FieldList [h]}
{StarExpr [Header Bools]}
{FieldList -> FieldList [bool]}
{BlockStmt -> ReturnStmt -> SliceExpr -> StarExpr -> CallExpr -> StarExpr [bool]}
{CallExpr -> SelectorExpr [unsafe Pointer]}
{SelectorExpr [h Raw]}
{CallExpr -> SelectorExpr [h TypedLen bType]}
{CallExpr -> SelectorExpr [h TypedLen bType]}


function name is SetB {FieldList [h]}
{StarExpr [Header SetB]}
{FieldList [i int x bool]}
{BlockStmt -> AssignStmt -> IndexExpr -> CallExpr -> SelectorExpr [h Bools i x]}


function name is GetB {FieldList [h]}
{StarExpr [Header GetB]}
{FieldList [i int]}
{FieldList [bool]}
{BlockStmt -> ReturnStmt -> IndexExpr -> CallExpr -> SelectorExpr [h Bools i]}


function name is Ints {FieldList [h]}
{StarExpr [Header Ints]}
{FieldList -> FieldList [int]}
{BlockStmt -> ReturnStmt -> SliceExpr -> StarExpr -> CallExpr -> StarExpr [int]}
{CallExpr -> SelectorExpr [unsafe Pointer]}
{SelectorExpr [h Raw]}
{CallExpr -> SelectorExpr [h TypedLen iType]}
{CallExpr -> SelectorExpr [h TypedLen iType]}


function name is SetI {FieldList [h]}
{StarExpr [Header SetI]}
{FieldList [i int x int]}
{BlockStmt -> AssignStmt -> IndexExpr -> CallExpr -> SelectorExpr [h Ints i x]}


function name is GetI {FieldList [h]}
{StarExpr [Header GetI]}
{FieldList [i int]}
{FieldList [int]}
{BlockStmt -> ReturnStmt -> IndexExpr -> CallExpr -> SelectorExpr [h Ints i]}


function name is Int8s {FieldList [h]}
{StarExpr [Header Int8s]}
{FieldList -> FieldList [int8]}
{BlockStmt -> ReturnStmt -> SliceExpr -> StarExpr -> CallExpr -> StarExpr [int8]}
{CallExpr -> SelectorExpr [unsafe Pointer]}
{SelectorExpr [h Raw]}
{CallExpr -> SelectorExpr [h TypedLen i8Type]}
{CallExpr -> SelectorExpr [h TypedLen i8Type]}


function name is SetI8 {FieldList [h]}
{StarExpr [Header SetI8]}
{FieldList [i int x int8]}
{BlockStmt -> AssignStmt -> IndexExpr -> CallExpr -> SelectorExpr [h Int8s i x]}


function name is GetI8 {FieldList [h]}
{StarExpr [Header GetI8]}
{FieldList [i int]}
{FieldList [int8]}
{BlockStmt -> ReturnStmt -> IndexExpr -> CallExpr -> SelectorExpr [h Int8s i]}


function name is Int16s {FieldList [h]}
{StarExpr [Header Int16s]}
{FieldList -> FieldList [int16]}
{BlockStmt -> ReturnStmt -> SliceExpr -> StarExpr -> CallExpr -> StarExpr [int16]}
{CallExpr -> SelectorExpr [unsafe Pointer]}
{SelectorExpr [h Raw]}
{CallExpr -> SelectorExpr [h TypedLen i16Type]}
{CallExpr -> SelectorExpr [h TypedLen i16Type]}


function name is SetI16 {FieldList [h]}
{StarExpr [Header SetI16]}
{FieldList [i int x int16]}
{BlockStmt -> AssignStmt -> IndexExpr -> CallExpr -> SelectorExpr [h Int16s i x]}


function name is GetI16 {FieldList [h]}
{StarExpr [Header GetI16]}
{FieldList [i int]}
{FieldList [int16]}
{BlockStmt -> ReturnStmt -> IndexExpr -> CallExpr -> SelectorExpr [h Int16s i]}


function name is Int32s {FieldList [h]}
{StarExpr [Header Int32s]}
{FieldList -> FieldList [int32]}
{BlockStmt -> ReturnStmt -> SliceExpr -> StarExpr -> CallExpr -> StarExpr [int32]}
{CallExpr -> SelectorExpr [unsafe Pointer]}
{SelectorExpr [h Raw]}
{CallExpr -> SelectorExpr [h TypedLen i32Type]}
{CallExpr -> SelectorExpr [h TypedLen i32Type]}


function name is SetI32 {FieldList [h]}
{StarExpr [Header SetI32]}
{FieldList [i int x int32]}
{BlockStmt -> AssignStmt -> IndexExpr -> CallExpr -> SelectorExpr [h Int32s i x]}


function name is GetI32 {FieldList [h]}
{StarExpr [Header GetI32]}
{FieldList [i int]}
{FieldList [int32]}
{BlockStmt -> ReturnStmt -> IndexExpr -> CallExpr -> SelectorExpr [h Int32s i]}


function name is Int64s {FieldList [h]}
{StarExpr [Header Int64s]}
{FieldList -> FieldList [int64]}
{BlockStmt -> ReturnStmt -> SliceExpr -> StarExpr -> CallExpr -> StarExpr [int64]}
{CallExpr -> SelectorExpr [unsafe Pointer]}
{SelectorExpr [h Raw]}
{CallExpr -> SelectorExpr [h TypedLen i64Type]}
{CallExpr -> SelectorExpr [h TypedLen i64Type]}


function name is SetI64 {FieldList [h]}
{StarExpr [Header SetI64]}
{FieldList [i int x int64]}
{BlockStmt -> AssignStmt -> IndexExpr -> CallExpr -> SelectorExpr [h Int64s i x]}


function name is GetI64 {FieldList [h]}
{StarExpr [Header GetI64]}
{FieldList [i int]}
{FieldList [int64]}
{BlockStmt -> ReturnStmt -> IndexExpr -> CallExpr -> SelectorExpr [h Int64s i]}


function name is Uints {FieldList [h]}
{StarExpr [Header Uints]}
{FieldList -> FieldList [uint]}
{BlockStmt -> ReturnStmt -> SliceExpr -> StarExpr -> CallExpr -> StarExpr [uint]}
{CallExpr -> SelectorExpr [unsafe Pointer]}
{SelectorExpr [h Raw]}
{CallExpr -> SelectorExpr [h TypedLen uType]}
{CallExpr -> SelectorExpr [h TypedLen uType]}


function name is SetU {FieldList [h]}
{StarExpr [Header SetU]}
{FieldList [i int x uint]}
{BlockStmt -> AssignStmt -> IndexExpr -> CallExpr -> SelectorExpr [h Uints i x]}


function name is GetU {FieldList [h]}
{StarExpr [Header GetU]}
{FieldList [i int]}
{FieldList [uint]}
{BlockStmt -> ReturnStmt -> IndexExpr -> CallExpr -> SelectorExpr [h Uints i]}


function name is Uint8s {FieldList [h]}
{StarExpr [Header Uint8s]}
{FieldList -> FieldList [uint8]}
{BlockStmt -> ReturnStmt -> SliceExpr -> StarExpr -> CallExpr -> StarExpr [uint8]}
{CallExpr -> SelectorExpr [unsafe Pointer]}
{SelectorExpr [h Raw]}
{CallExpr -> SelectorExpr [h TypedLen u8Type]}
{CallExpr -> SelectorExpr [h TypedLen u8Type]}


function name is SetU8 {FieldList [h]}
{StarExpr [Header SetU8]}
{FieldList [i int x uint8]}
{BlockStmt -> AssignStmt -> IndexExpr -> CallExpr -> SelectorExpr [h Uint8s i x]}


function name is GetU8 {FieldList [h]}
{StarExpr [Header GetU8]}
{FieldList [i int]}
{FieldList [uint8]}
{BlockStmt -> ReturnStmt -> IndexExpr -> CallExpr -> SelectorExpr [h Uint8s i]}


function name is Uint16s {FieldList [h]}
{StarExpr [Header Uint16s]}
{FieldList -> FieldList [uint16]}
{BlockStmt -> ReturnStmt -> SliceExpr -> StarExpr -> CallExpr -> StarExpr [uint16]}
{CallExpr -> SelectorExpr [unsafe Pointer]}
{SelectorExpr [h Raw]}
{CallExpr -> SelectorExpr [h TypedLen u16Type]}
{CallExpr -> SelectorExpr [h TypedLen u16Type]}


function name is SetU16 {FieldList [h]}
{StarExpr [Header SetU16]}
{FieldList [i int x uint16]}
{BlockStmt -> AssignStmt -> IndexExpr -> CallExpr -> SelectorExpr [h Uint16s i x]}


function name is GetU16 {FieldList [h]}
{StarExpr [Header GetU16]}
{FieldList [i int]}
{FieldList [uint16]}
{BlockStmt -> ReturnStmt -> IndexExpr -> CallExpr -> SelectorExpr [h Uint16s i]}


function name is Uint32s {FieldList [h]}
{StarExpr [Header Uint32s]}
{FieldList -> FieldList [uint32]}
{BlockStmt -> ReturnStmt -> SliceExpr -> StarExpr -> CallExpr -> StarExpr [uint32]}
{CallExpr -> SelectorExpr [unsafe Pointer]}
{SelectorExpr [h Raw]}
{CallExpr -> SelectorExpr [h TypedLen u32Type]}
{CallExpr -> SelectorExpr [h TypedLen u32Type]}


function name is SetU32 {FieldList [h]}
{StarExpr [Header SetU32]}
{FieldList [i int x uint32]}
{BlockStmt -> AssignStmt -> IndexExpr -> CallExpr -> SelectorExpr [h Uint32s i x]}


function name is GetU32 {FieldList [h]}
{StarExpr [Header GetU32]}
{FieldList [i int]}
{FieldList [uint32]}
{BlockStmt -> ReturnStmt -> IndexExpr -> CallExpr -> SelectorExpr [h Uint32s i]}


function name is Uint64s {FieldList [h]}
{StarExpr [Header Uint64s]}
{FieldList -> FieldList [uint64]}
{BlockStmt -> ReturnStmt -> SliceExpr -> StarExpr -> CallExpr -> StarExpr [uint64]}
{CallExpr -> SelectorExpr [unsafe Pointer]}
{SelectorExpr [h Raw]}
{CallExpr -> SelectorExpr [h TypedLen u64Type]}
{CallExpr -> SelectorExpr [h TypedLen u64Type]}


function name is SetU64 {FieldList [h]}
{StarExpr [Header SetU64]}
{FieldList [i int x uint64]}
{BlockStmt -> AssignStmt -> IndexExpr -> CallExpr -> SelectorExpr [h Uint64s i x]}


function name is GetU64 {FieldList [h]}
{StarExpr [Header GetU64]}
{FieldList [i int]}
{FieldList [uint64]}
{BlockStmt -> ReturnStmt -> IndexExpr -> CallExpr -> SelectorExpr [h Uint64s i]}


function name is Uintptrs {FieldList [h]}
{StarExpr [Header Uintptrs]}
{FieldList -> FieldList [uintptr]}
{BlockStmt -> ReturnStmt -> SliceExpr -> StarExpr -> CallExpr -> StarExpr [uintptr]}
{CallExpr -> SelectorExpr [unsafe Pointer]}
{SelectorExpr [h Raw]}
{CallExpr -> SelectorExpr [h TypedLen uintptrType]}
{CallExpr -> SelectorExpr [h TypedLen uintptrType]}


function name is SetUintptr {FieldList [h]}
{StarExpr [Header SetUintptr]}
{FieldList [i int x uintptr]}
{BlockStmt -> AssignStmt -> IndexExpr -> CallExpr -> SelectorExpr [h Uintptrs i x]}


function name is GetUintptr {FieldList [h]}
{StarExpr [Header GetUintptr]}
{FieldList [i int]}
{FieldList [uintptr]}
{BlockStmt -> ReturnStmt -> IndexExpr -> CallExpr -> SelectorExpr [h Uintptrs i]}


function name is Float32s {FieldList [h]}
{StarExpr [Header Float32s]}
{FieldList -> FieldList [float32]}
{BlockStmt -> ReturnStmt -> SliceExpr -> StarExpr -> CallExpr -> StarExpr [float32]}
{CallExpr -> SelectorExpr [unsafe Pointer]}
{SelectorExpr [h Raw]}
{CallExpr -> SelectorExpr [h TypedLen f32Type]}
{CallExpr -> SelectorExpr [h TypedLen f32Type]}


function name is SetF32 {FieldList [h]}
{StarExpr [Header SetF32]}
{FieldList [i int x float32]}
{BlockStmt -> AssignStmt -> IndexExpr -> CallExpr -> SelectorExpr [h Float32s i x]}


function name is GetF32 {FieldList [h]}
{StarExpr [Header GetF32]}
{FieldList [i int]}
{FieldList [float32]}
{BlockStmt -> ReturnStmt -> IndexExpr -> CallExpr -> SelectorExpr [h Float32s i]}


function name is Float64s {FieldList [h]}
{StarExpr [Header Float64s]}
{FieldList -> FieldList [float64]}
{BlockStmt -> ReturnStmt -> SliceExpr -> StarExpr -> CallExpr -> StarExpr [float64]}
{CallExpr -> SelectorExpr [unsafe Pointer]}
{SelectorExpr [h Raw]}
{CallExpr -> SelectorExpr [h TypedLen f64Type]}
{CallExpr -> SelectorExpr [h TypedLen f64Type]}


function name is SetF64 {FieldList [h]}
{StarExpr [Header SetF64]}
{FieldList [i int x float64]}
{BlockStmt -> AssignStmt -> IndexExpr -> CallExpr -> SelectorExpr [h Float64s i x]}


function name is GetF64 {FieldList [h]}
{StarExpr [Header GetF64]}
{FieldList [i int]}
{FieldList [float64]}
{BlockStmt -> ReturnStmt -> IndexExpr -> CallExpr -> SelectorExpr [h Float64s i]}


function name is Complex64s {FieldList [h]}
{StarExpr [Header Complex64s]}
{FieldList -> FieldList [complex64]}
{BlockStmt -> ReturnStmt -> SliceExpr -> StarExpr -> CallExpr -> StarExpr [complex64]}
{CallExpr -> SelectorExpr [unsafe Pointer]}
{SelectorExpr [h Raw]}
{CallExpr -> SelectorExpr [h TypedLen c64Type]}
{CallExpr -> SelectorExpr [h TypedLen c64Type]}


function name is SetC64 {FieldList [h]}
{StarExpr [Header SetC64]}
{FieldList [i int x complex64]}
{BlockStmt -> AssignStmt -> IndexExpr -> CallExpr -> SelectorExpr [h Complex64s i x]}


function name is GetC64 {FieldList [h]}
{StarExpr [Header GetC64]}
{FieldList [i int]}
{FieldList [complex64]}
{BlockStmt -> ReturnStmt -> IndexExpr -> CallExpr -> SelectorExpr [h Complex64s i]}


function name is Complex128s {FieldList [h]}
{StarExpr [Header Complex128s]}
{FieldList -> FieldList [complex128]}
{BlockStmt -> ReturnStmt -> SliceExpr -> StarExpr -> CallExpr -> StarExpr [complex128]}
{CallExpr -> SelectorExpr [unsafe Pointer]}
{SelectorExpr [h Raw]}
{CallExpr -> SelectorExpr [h TypedLen c128Type]}
{CallExpr -> SelectorExpr [h TypedLen c128Type]}


function name is SetC128 {FieldList [h]}
{StarExpr [Header SetC128]}
{FieldList [i int x complex128]}
{BlockStmt -> AssignStmt -> IndexExpr -> CallExpr -> SelectorExpr [h Complex128s i x]}


function name is GetC128 {FieldList [h]}
{StarExpr [Header GetC128]}
{FieldList [i int]}
{FieldList [complex128]}
{BlockStmt -> ReturnStmt -> IndexExpr -> CallExpr -> SelectorExpr [h Complex128s i]}


function name is Strings {FieldList [h]}
{StarExpr [Header Strings]}
{FieldList -> FieldList [string]}
{BlockStmt -> ReturnStmt -> SliceExpr -> StarExpr -> CallExpr -> StarExpr [string]}
{CallExpr -> SelectorExpr [unsafe Pointer]}
{SelectorExpr [h Raw]}
{CallExpr -> SelectorExpr [h TypedLen strType]}
{CallExpr -> SelectorExpr [h TypedLen strType]}


function name is SetStr {FieldList [h]}
{StarExpr [Header SetStr]}
{FieldList [i int x string]}
{BlockStmt -> AssignStmt -> IndexExpr -> CallExpr -> SelectorExpr [h Strings i x]}


function name is GetStr {FieldList [h]}
{StarExpr [Header GetStr]}
{FieldList [i int]}
{FieldList [string]}
{BlockStmt -> ReturnStmt -> IndexExpr -> CallExpr -> SelectorExpr [h Strings i]}


function name is UnsafePointers {FieldList [h]}
{StarExpr [Header UnsafePointers]}
{FieldList -> FieldList -> SelectorExpr [unsafe Pointer]}
{BlockStmt -> ReturnStmt -> SliceExpr -> StarExpr -> CallExpr -> StarExpr -> SelectorExpr [unsafe Pointer]}
{CallExpr -> SelectorExpr [unsafe Pointer]}
{SelectorExpr [h Raw]}
{CallExpr -> SelectorExpr [h TypedLen unsafePointerType]}
{CallExpr -> SelectorExpr [h TypedLen unsafePointerType]}


function name is SetUnsafePointer {FieldList [h]}
{StarExpr [Header SetUnsafePointer]}
{FieldList [i int x]}
{SelectorExpr [unsafe Pointer]}
{BlockStmt -> AssignStmt -> IndexExpr -> CallExpr -> SelectorExpr [h UnsafePointers i x]}


function name is GetUnsafePointer {FieldList [h]}
{StarExpr [Header GetUnsafePointer]}
{FieldList [i int]}
{FieldList -> SelectorExpr [unsafe Pointer]}
{BlockStmt -> ReturnStmt -> IndexExpr -> CallExpr -> SelectorExpr [h UnsafePointers i]}


