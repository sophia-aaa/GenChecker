function name is ReduceFirst { [execution]}
{BasicLit -> BasicLit -> BasicLit -> BasicLit -> FieldList [e E ReduceFirst]}
{FieldList [t]}
{SelectorExpr [reflect Type data]}
{StarExpr -> SelectorExpr [storage Header retVal]}
{StarExpr -> SelectorExpr [storage Header split int size int fn]}
{InterfaceType -> FieldList -> FieldList [err error]}
{BlockStmt -> SwitchStmt [t]}
{BlockStmt -> CaseClause [Bool]}
{AssignStmt [dt]}
{CallExpr -> SelectorExpr [data Bools]}
{AssignStmt [rt]}
{CallExpr -> SelectorExpr [retVal Bools]}
{AssignStmt [f fn]}
{BlockStmt -> CaseClause -> FieldList [bool bool]}
{CallExpr [reduceFirstB dt rt split size f]}
{CaseClause -> FieldList [bool bool]}
{FieldList [bool]}
{CallExpr [genericReduceFirstB dt rt split size f]}
{CaseClause -> ReturnStmt -> CallExpr -> SelectorExpr [errors Errorf reductionErrMsg fn]}
{ReturnStmt [nil]}
{CaseClause [Int]}
{AssignStmt [dt]}
{CallExpr -> SelectorExpr [data Ints]}
{AssignStmt [rt]}
{CallExpr -> SelectorExpr [retVal Ints]}
{AssignStmt [f fn]}
{BlockStmt -> CaseClause -> FieldList [int int]}
{CallExpr [reduceFirstI dt rt split size f]}
{CaseClause -> FieldList [int int]}
{FieldList [int]}
{CallExpr [genericReduceFirstI dt rt split size f]}
{CaseClause -> ReturnStmt -> CallExpr -> SelectorExpr [errors Errorf reductionErrMsg fn]}
{ReturnStmt [nil]}
{CaseClause [Int8]}
{AssignStmt [dt]}
{CallExpr -> SelectorExpr [data Int8s]}
{AssignStmt [rt]}
{CallExpr -> SelectorExpr [retVal Int8s]}
{AssignStmt [f fn]}
{BlockStmt -> CaseClause -> FieldList [int8 int8]}
{CallExpr [reduceFirstI8 dt rt split size f]}
{CaseClause -> FieldList [int8 int8]}
{FieldList [int8]}
{CallExpr [genericReduceFirstI8 dt rt split size f]}
{CaseClause -> ReturnStmt -> CallExpr -> SelectorExpr [errors Errorf reductionErrMsg fn]}
{ReturnStmt [nil]}
{CaseClause [Int16]}
{AssignStmt [dt]}
{CallExpr -> SelectorExpr [data Int16s]}
{AssignStmt [rt]}
{CallExpr -> SelectorExpr [retVal Int16s]}
{AssignStmt [f fn]}
{BlockStmt -> CaseClause -> FieldList [int16 int16]}
{CallExpr [reduceFirstI16 dt rt split size f]}
{CaseClause -> FieldList [int16 int16]}
{FieldList [int16]}
{CallExpr [genericReduceFirstI16 dt rt split size f]}
{CaseClause -> ReturnStmt -> CallExpr -> SelectorExpr [errors Errorf reductionErrMsg fn]}
{ReturnStmt [nil]}
{CaseClause [Int32]}
{AssignStmt [dt]}
{CallExpr -> SelectorExpr [data Int32s]}
{AssignStmt [rt]}
{CallExpr -> SelectorExpr [retVal Int32s]}
{AssignStmt [f fn]}
{BlockStmt -> CaseClause -> FieldList [int32 int32]}
{CallExpr [reduceFirstI32 dt rt split size f]}
{CaseClause -> FieldList [int32 int32]}
{FieldList [int32]}
{CallExpr [genericReduceFirstI32 dt rt split size f]}
{CaseClause -> ReturnStmt -> CallExpr -> SelectorExpr [errors Errorf reductionErrMsg fn]}
{ReturnStmt [nil]}
{CaseClause [Int64]}
{AssignStmt [dt]}
{CallExpr -> SelectorExpr [data Int64s]}
{AssignStmt [rt]}
{CallExpr -> SelectorExpr [retVal Int64s]}
{AssignStmt [f fn]}
{BlockStmt -> CaseClause -> FieldList [int64 int64]}
{CallExpr [reduceFirstI64 dt rt split size f]}
{CaseClause -> FieldList [int64 int64]}
{FieldList [int64]}
{CallExpr [genericReduceFirstI64 dt rt split size f]}
{CaseClause -> ReturnStmt -> CallExpr -> SelectorExpr [errors Errorf reductionErrMsg fn]}
{ReturnStmt [nil]}
{CaseClause [Uint]}
{AssignStmt [dt]}
{CallExpr -> SelectorExpr [data Uints]}
{AssignStmt [rt]}
{CallExpr -> SelectorExpr [retVal Uints]}
{AssignStmt [f fn]}
{BlockStmt -> CaseClause -> FieldList [uint uint]}
{CallExpr [reduceFirstU dt rt split size f]}
{CaseClause -> FieldList [uint uint]}
{FieldList [uint]}
{CallExpr [genericReduceFirstU dt rt split size f]}
{CaseClause -> ReturnStmt -> CallExpr -> SelectorExpr [errors Errorf reductionErrMsg fn]}
{ReturnStmt [nil]}
{CaseClause [Uint8]}
{AssignStmt [dt]}
{CallExpr -> SelectorExpr [data Uint8s]}
{AssignStmt [rt]}
{CallExpr -> SelectorExpr [retVal Uint8s]}
{AssignStmt [f fn]}
{BlockStmt -> CaseClause -> FieldList [uint8 uint8]}
{CallExpr [reduceFirstU8 dt rt split size f]}
{CaseClause -> FieldList [uint8 uint8]}
{FieldList [uint8]}
{CallExpr [genericReduceFirstU8 dt rt split size f]}
{CaseClause -> ReturnStmt -> CallExpr -> SelectorExpr [errors Errorf reductionErrMsg fn]}
{ReturnStmt [nil]}
{CaseClause [Uint16]}
{AssignStmt [dt]}
{CallExpr -> SelectorExpr [data Uint16s]}
{AssignStmt [rt]}
{CallExpr -> SelectorExpr [retVal Uint16s]}
{AssignStmt [f fn]}
{BlockStmt -> CaseClause -> FieldList [uint16 uint16]}
{CallExpr [reduceFirstU16 dt rt split size f]}
{CaseClause -> FieldList [uint16 uint16]}
{FieldList [uint16]}
{CallExpr [genericReduceFirstU16 dt rt split size f]}
{CaseClause -> ReturnStmt -> CallExpr -> SelectorExpr [errors Errorf reductionErrMsg fn]}
{ReturnStmt [nil]}
{CaseClause [Uint32]}
{AssignStmt [dt]}
{CallExpr -> SelectorExpr [data Uint32s]}
{AssignStmt [rt]}
{CallExpr -> SelectorExpr [retVal Uint32s]}
{AssignStmt [f fn]}
{BlockStmt -> CaseClause -> FieldList [uint32 uint32]}
{CallExpr [reduceFirstU32 dt rt split size f]}
{CaseClause -> FieldList [uint32 uint32]}
{FieldList [uint32]}
{CallExpr [genericReduceFirstU32 dt rt split size f]}
{CaseClause -> ReturnStmt -> CallExpr -> SelectorExpr [errors Errorf reductionErrMsg fn]}
{ReturnStmt [nil]}
{CaseClause [Uint64]}
{AssignStmt [dt]}
{CallExpr -> SelectorExpr [data Uint64s]}
{AssignStmt [rt]}
{CallExpr -> SelectorExpr [retVal Uint64s]}
{AssignStmt [f fn]}
{BlockStmt -> CaseClause -> FieldList [uint64 uint64]}
{CallExpr [reduceFirstU64 dt rt split size f]}
{CaseClause -> FieldList [uint64 uint64]}
{FieldList [uint64]}
{CallExpr [genericReduceFirstU64 dt rt split size f]}
{CaseClause -> ReturnStmt -> CallExpr -> SelectorExpr [errors Errorf reductionErrMsg fn]}
{ReturnStmt [nil]}
{CaseClause [Uintptr]}
{AssignStmt [dt]}
{CallExpr -> SelectorExpr [data Uintptrs]}
{AssignStmt [rt]}
{CallExpr -> SelectorExpr [retVal Uintptrs]}
{AssignStmt [f fn]}
{BlockStmt -> CaseClause -> FieldList [uintptr uintptr]}
{CallExpr [reduceFirstUintptr dt rt split size f]}
{CaseClause -> FieldList [uintptr uintptr]}
{FieldList [uintptr]}
{CallExpr [genericReduceFirstUintptr dt rt split size f]}
{CaseClause -> ReturnStmt -> CallExpr -> SelectorExpr [errors Errorf reductionErrMsg fn]}
{ReturnStmt [nil]}
{CaseClause [Float32]}
{AssignStmt [dt]}
{CallExpr -> SelectorExpr [data Float32s]}
{AssignStmt [rt]}
{CallExpr -> SelectorExpr [retVal Float32s]}
{AssignStmt [f fn]}
{BlockStmt -> CaseClause -> FieldList [float32 float32]}
{CallExpr [reduceFirstF32 dt rt split size f]}
{CaseClause -> FieldList [float32 float32]}
{FieldList [float32]}
{CallExpr [genericReduceFirstF32 dt rt split size f]}
{CaseClause -> ReturnStmt -> CallExpr -> SelectorExpr [errors Errorf reductionErrMsg fn]}
{ReturnStmt [nil]}
{CaseClause [Float64]}
{AssignStmt [dt]}
{CallExpr -> SelectorExpr [data Float64s]}
{AssignStmt [rt]}
{CallExpr -> SelectorExpr [retVal Float64s]}
{AssignStmt [f fn]}
{BlockStmt -> CaseClause -> FieldList [float64 float64]}
{CallExpr [reduceFirstF64 dt rt split size f]}
{CaseClause -> FieldList [float64 float64]}
{FieldList [float64]}
{CallExpr [genericReduceFirstF64 dt rt split size f]}
{CaseClause -> ReturnStmt -> CallExpr -> SelectorExpr [errors Errorf reductionErrMsg fn]}
{ReturnStmt [nil]}
{CaseClause [Complex64]}
{AssignStmt [dt]}
{CallExpr -> SelectorExpr [data Complex64s]}
{AssignStmt [rt]}
{CallExpr -> SelectorExpr [retVal Complex64s]}
{AssignStmt [f fn]}
{BlockStmt -> CaseClause -> FieldList [complex64 complex64]}
{CallExpr [reduceFirstC64 dt rt split size f]}
{CaseClause -> FieldList [complex64 complex64]}
{FieldList [complex64]}
{CallExpr [genericReduceFirstC64 dt rt split size f]}
{CaseClause -> ReturnStmt -> CallExpr -> SelectorExpr [errors Errorf reductionErrMsg fn]}
{ReturnStmt [nil]}
{CaseClause [Complex128]}
{AssignStmt [dt]}
{CallExpr -> SelectorExpr [data Complex128s]}
{AssignStmt [rt]}
{CallExpr -> SelectorExpr [retVal Complex128s]}
{AssignStmt [f fn]}
{BlockStmt -> CaseClause -> FieldList [complex128 complex128]}
{CallExpr [reduceFirstC128 dt rt split size f]}
{CaseClause -> FieldList [complex128 complex128]}
{FieldList [complex128]}
{CallExpr [genericReduceFirstC128 dt rt split size f]}
{CaseClause -> ReturnStmt -> CallExpr -> SelectorExpr [errors Errorf reductionErrMsg fn]}
{ReturnStmt [nil]}
{CaseClause [String]}
{AssignStmt [dt]}
{CallExpr -> SelectorExpr [data Strings]}
{AssignStmt [rt]}
{CallExpr -> SelectorExpr [retVal Strings]}
{AssignStmt [f fn]}
{BlockStmt -> CaseClause -> FieldList [string string]}
{CallExpr [reduceFirstStr dt rt split size f]}
{CaseClause -> FieldList [string string]}
{FieldList [string]}
{CallExpr [genericReduceFirstStr dt rt split size f]}
{CaseClause -> ReturnStmt -> CallExpr -> SelectorExpr [errors Errorf reductionErrMsg fn]}
{ReturnStmt [nil]}
{CaseClause [UnsafePointer]}
{AssignStmt [dt]}
{CallExpr -> SelectorExpr [data UnsafePointers]}
{AssignStmt [rt]}
{CallExpr -> SelectorExpr [retVal UnsafePointers]}
{AssignStmt [f fn]}
{BlockStmt -> CaseClause -> FieldList -> SelectorExpr [unsafe Pointer]}
{SelectorExpr [unsafe Pointer]}
{CallExpr [reduceFirstUnsafePointer dt rt split size f]}
{CaseClause -> FieldList -> SelectorExpr [unsafe Pointer]}
{SelectorExpr [unsafe Pointer]}
{FieldList -> SelectorExpr [unsafe Pointer]}
{CallExpr [genericReduceFirstUnsafePointer dt rt split size f]}
{CaseClause -> ReturnStmt -> CallExpr -> SelectorExpr [errors Errorf reductionErrMsg fn]}
{ReturnStmt [nil]}
{CaseClause -> ReturnStmt -> CallExpr -> SelectorExpr [errors Errorf]}
{BasicLit [t]}


function name is ReduceLast {FieldList [e E ReduceLast]}
{FieldList [t]}
{SelectorExpr [reflect Type data]}
{StarExpr -> SelectorExpr [storage Header retVal]}
{StarExpr -> SelectorExpr [storage Header dimSize int defaultValue]}
{InterfaceType -> FieldList [fn]}
{InterfaceType -> FieldList -> FieldList [err error]}
{BlockStmt -> DeclStmt [ok bool]}
{SwitchStmt [t]}
{BlockStmt -> CaseClause [Bool]}
{DeclStmt [def bool]}
{AssignStmt [def ok defaultValue bool ok]}
{BlockStmt -> ReturnStmt -> CallExpr -> SelectorExpr [errors Errorf defaultValueErrMsg def defaultValue defaultValue]}
{AssignStmt [dt]}
{CallExpr -> SelectorExpr [data Bools]}
{AssignStmt [rt]}
{CallExpr -> SelectorExpr [retVal Bools]}
{AssignStmt [f fn]}
{BlockStmt -> CaseClause -> FieldList [bool]}
{FieldList [bool]}
{CallExpr [reduceLastB dt rt dimSize def f]}
{CaseClause -> FieldList [bool bool]}
{FieldList [bool]}
{CallExpr [genericReduceLastB dt rt dimSize def f]}
{CaseClause -> ReturnStmt -> CallExpr -> SelectorExpr [errors Errorf reductionErrMsg fn]}
{ReturnStmt [nil]}
{CaseClause [Int]}
{DeclStmt [def int]}
{AssignStmt [def ok defaultValue int ok]}
{BlockStmt -> ReturnStmt -> CallExpr -> SelectorExpr [errors Errorf defaultValueErrMsg def defaultValue defaultValue]}
{AssignStmt [dt]}
{CallExpr -> SelectorExpr [data Ints]}
{AssignStmt [rt]}
{CallExpr -> SelectorExpr [retVal Ints]}
{AssignStmt [f fn]}
{BlockStmt -> CaseClause -> FieldList [int]}
{FieldList [int]}
{CallExpr [reduceLastI dt rt dimSize def f]}
{CaseClause -> FieldList [int int]}
{FieldList [int]}
{CallExpr [genericReduceLastI dt rt dimSize def f]}
{CaseClause -> ReturnStmt -> CallExpr -> SelectorExpr [errors Errorf reductionErrMsg fn]}
{ReturnStmt [nil]}
{CaseClause [Int8]}
{DeclStmt [def int8]}
{AssignStmt [def ok defaultValue int8 ok]}
{BlockStmt -> ReturnStmt -> CallExpr -> SelectorExpr [errors Errorf defaultValueErrMsg def defaultValue defaultValue]}
{AssignStmt [dt]}
{CallExpr -> SelectorExpr [data Int8s]}
{AssignStmt [rt]}
{CallExpr -> SelectorExpr [retVal Int8s]}
{AssignStmt [f fn]}
{BlockStmt -> CaseClause -> FieldList [int8]}
{FieldList [int8]}
{CallExpr [reduceLastI8 dt rt dimSize def f]}
{CaseClause -> FieldList [int8 int8]}
{FieldList [int8]}
{CallExpr [genericReduceLastI8 dt rt dimSize def f]}
{CaseClause -> ReturnStmt -> CallExpr -> SelectorExpr [errors Errorf reductionErrMsg fn]}
{ReturnStmt [nil]}
{CaseClause [Int16]}
{DeclStmt [def int16]}
{AssignStmt [def ok defaultValue int16 ok]}
{BlockStmt -> ReturnStmt -> CallExpr -> SelectorExpr [errors Errorf defaultValueErrMsg def defaultValue defaultValue]}
{AssignStmt [dt]}
{CallExpr -> SelectorExpr [data Int16s]}
{AssignStmt [rt]}
{CallExpr -> SelectorExpr [retVal Int16s]}
{AssignStmt [f fn]}
{BlockStmt -> CaseClause -> FieldList [int16]}
{FieldList [int16]}
{CallExpr [reduceLastI16 dt rt dimSize def f]}
{CaseClause -> FieldList [int16 int16]}
{FieldList [int16]}
{CallExpr [genericReduceLastI16 dt rt dimSize def f]}
{CaseClause -> ReturnStmt -> CallExpr -> SelectorExpr [errors Errorf reductionErrMsg fn]}
{ReturnStmt [nil]}
{CaseClause [Int32]}
{DeclStmt [def int32]}
{AssignStmt [def ok defaultValue int32 ok]}
{BlockStmt -> ReturnStmt -> CallExpr -> SelectorExpr [errors Errorf defaultValueErrMsg def defaultValue defaultValue]}
{AssignStmt [dt]}
{CallExpr -> SelectorExpr [data Int32s]}
{AssignStmt [rt]}
{CallExpr -> SelectorExpr [retVal Int32s]}
{AssignStmt [f fn]}
{BlockStmt -> CaseClause -> FieldList [int32]}
{FieldList [int32]}
{CallExpr [reduceLastI32 dt rt dimSize def f]}
{CaseClause -> FieldList [int32 int32]}
{FieldList [int32]}
{CallExpr [genericReduceLastI32 dt rt dimSize def f]}
{CaseClause -> ReturnStmt -> CallExpr -> SelectorExpr [errors Errorf reductionErrMsg fn]}
{ReturnStmt [nil]}
{CaseClause [Int64]}
{DeclStmt [def int64]}
{AssignStmt [def ok defaultValue int64 ok]}
{BlockStmt -> ReturnStmt -> CallExpr -> SelectorExpr [errors Errorf defaultValueErrMsg def defaultValue defaultValue]}
{AssignStmt [dt]}
{CallExpr -> SelectorExpr [data Int64s]}
{AssignStmt [rt]}
{CallExpr -> SelectorExpr [retVal Int64s]}
{AssignStmt [f fn]}
{BlockStmt -> CaseClause -> FieldList [int64]}
{FieldList [int64]}
{CallExpr [reduceLastI64 dt rt dimSize def f]}
{CaseClause -> FieldList [int64 int64]}
{FieldList [int64]}
{CallExpr [genericReduceLastI64 dt rt dimSize def f]}
{CaseClause -> ReturnStmt -> CallExpr -> SelectorExpr [errors Errorf reductionErrMsg fn]}
{ReturnStmt [nil]}
{CaseClause [Uint]}
{DeclStmt [def uint]}
{AssignStmt [def ok defaultValue uint ok]}
{BlockStmt -> ReturnStmt -> CallExpr -> SelectorExpr [errors Errorf defaultValueErrMsg def defaultValue defaultValue]}
{AssignStmt [dt]}
{CallExpr -> SelectorExpr [data Uints]}
{AssignStmt [rt]}
{CallExpr -> SelectorExpr [retVal Uints]}
{AssignStmt [f fn]}
{BlockStmt -> CaseClause -> FieldList [uint]}
{FieldList [uint]}
{CallExpr [reduceLastU dt rt dimSize def f]}
{CaseClause -> FieldList [uint uint]}
{FieldList [uint]}
{CallExpr [genericReduceLastU dt rt dimSize def f]}
{CaseClause -> ReturnStmt -> CallExpr -> SelectorExpr [errors Errorf reductionErrMsg fn]}
{ReturnStmt [nil]}
{CaseClause [Uint8]}
{DeclStmt [def uint8]}
{AssignStmt [def ok defaultValue uint8 ok]}
{BlockStmt -> ReturnStmt -> CallExpr -> SelectorExpr [errors Errorf defaultValueErrMsg def defaultValue defaultValue]}
{AssignStmt [dt]}
{CallExpr -> SelectorExpr [data Uint8s]}
{AssignStmt [rt]}
{CallExpr -> SelectorExpr [retVal Uint8s]}
{AssignStmt [f fn]}
{BlockStmt -> CaseClause -> FieldList [uint8]}
{FieldList [uint8]}
{CallExpr [reduceLastU8 dt rt dimSize def f]}
{CaseClause -> FieldList [uint8 uint8]}
{FieldList [uint8]}
{CallExpr [genericReduceLastU8 dt rt dimSize def f]}
{CaseClause -> ReturnStmt -> CallExpr -> SelectorExpr [errors Errorf reductionErrMsg fn]}
{ReturnStmt [nil]}
{CaseClause [Uint16]}
{DeclStmt [def uint16]}
{AssignStmt [def ok defaultValue uint16 ok]}
{BlockStmt -> ReturnStmt -> CallExpr -> SelectorExpr [errors Errorf defaultValueErrMsg def defaultValue defaultValue]}
{AssignStmt [dt]}
{CallExpr -> SelectorExpr [data Uint16s]}
{AssignStmt [rt]}
{CallExpr -> SelectorExpr [retVal Uint16s]}
{AssignStmt [f fn]}
{BlockStmt -> CaseClause -> FieldList [uint16]}
{FieldList [uint16]}
{CallExpr [reduceLastU16 dt rt dimSize def f]}
{CaseClause -> FieldList [uint16 uint16]}
{FieldList [uint16]}
{CallExpr [genericReduceLastU16 dt rt dimSize def f]}
{CaseClause -> ReturnStmt -> CallExpr -> SelectorExpr [errors Errorf reductionErrMsg fn]}
{ReturnStmt [nil]}
{CaseClause [Uint32]}
{DeclStmt [def uint32]}
{AssignStmt [def ok defaultValue uint32 ok]}
{BlockStmt -> ReturnStmt -> CallExpr -> SelectorExpr [errors Errorf defaultValueErrMsg def defaultValue defaultValue]}
{AssignStmt [dt]}
{CallExpr -> SelectorExpr [data Uint32s]}
{AssignStmt [rt]}
{CallExpr -> SelectorExpr [retVal Uint32s]}
{AssignStmt [f fn]}
{BlockStmt -> CaseClause -> FieldList [uint32]}
{FieldList [uint32]}
{CallExpr [reduceLastU32 dt rt dimSize def f]}
{CaseClause -> FieldList [uint32 uint32]}
{FieldList [uint32]}
{CallExpr [genericReduceLastU32 dt rt dimSize def f]}
{CaseClause -> ReturnStmt -> CallExpr -> SelectorExpr [errors Errorf reductionErrMsg fn]}
{ReturnStmt [nil]}
{CaseClause [Uint64]}
{DeclStmt [def uint64]}
{AssignStmt [def ok defaultValue uint64 ok]}
{BlockStmt -> ReturnStmt -> CallExpr -> SelectorExpr [errors Errorf defaultValueErrMsg def defaultValue defaultValue]}
{AssignStmt [dt]}
{CallExpr -> SelectorExpr [data Uint64s]}
{AssignStmt [rt]}
{CallExpr -> SelectorExpr [retVal Uint64s]}
{AssignStmt [f fn]}
{BlockStmt -> CaseClause -> FieldList [uint64]}
{FieldList [uint64]}
{CallExpr [reduceLastU64 dt rt dimSize def f]}
{CaseClause -> FieldList [uint64 uint64]}
{FieldList [uint64]}
{CallExpr [genericReduceLastU64 dt rt dimSize def f]}
{CaseClause -> ReturnStmt -> CallExpr -> SelectorExpr [errors Errorf reductionErrMsg fn]}
{ReturnStmt [nil]}
{CaseClause [Uintptr]}
{DeclStmt [def uintptr]}
{AssignStmt [def ok defaultValue uintptr ok]}
{BlockStmt -> ReturnStmt -> CallExpr -> SelectorExpr [errors Errorf defaultValueErrMsg def defaultValue defaultValue]}
{AssignStmt [dt]}
{CallExpr -> SelectorExpr [data Uintptrs]}
{AssignStmt [rt]}
{CallExpr -> SelectorExpr [retVal Uintptrs]}
{AssignStmt [f fn]}
{BlockStmt -> CaseClause -> FieldList [uintptr]}
{FieldList [uintptr]}
{CallExpr [reduceLastUintptr dt rt dimSize def f]}
{CaseClause -> FieldList [uintptr uintptr]}
{FieldList [uintptr]}
{CallExpr [genericReduceLastUintptr dt rt dimSize def f]}
{CaseClause -> ReturnStmt -> CallExpr -> SelectorExpr [errors Errorf reductionErrMsg fn]}
{ReturnStmt [nil]}
{CaseClause [Float32]}
{DeclStmt [def float32]}
{AssignStmt [def ok defaultValue float32 ok]}
{BlockStmt -> ReturnStmt -> CallExpr -> SelectorExpr [errors Errorf defaultValueErrMsg def defaultValue defaultValue]}
{AssignStmt [dt]}
{CallExpr -> SelectorExpr [data Float32s]}
{AssignStmt [rt]}
{CallExpr -> SelectorExpr [retVal Float32s]}
{AssignStmt [f fn]}
{BlockStmt -> CaseClause -> FieldList [float32]}
{FieldList [float32]}
{CallExpr [reduceLastF32 dt rt dimSize def f]}
{CaseClause -> FieldList [float32 float32]}
{FieldList [float32]}
{CallExpr [genericReduceLastF32 dt rt dimSize def f]}
{CaseClause -> ReturnStmt -> CallExpr -> SelectorExpr [errors Errorf reductionErrMsg fn]}
{ReturnStmt [nil]}
{CaseClause [Float64]}
{DeclStmt [def float64]}
{AssignStmt [def ok defaultValue float64 ok]}
{BlockStmt -> ReturnStmt -> CallExpr -> SelectorExpr [errors Errorf defaultValueErrMsg def defaultValue defaultValue]}
{AssignStmt [dt]}
{CallExpr -> SelectorExpr [data Float64s]}
{AssignStmt [rt]}
{CallExpr -> SelectorExpr [retVal Float64s]}
{AssignStmt [f fn]}
{BlockStmt -> CaseClause -> FieldList [float64]}
{FieldList [float64]}
{CallExpr [reduceLastF64 dt rt dimSize def f]}
{CaseClause -> FieldList [float64 float64]}
{FieldList [float64]}
{CallExpr [genericReduceLastF64 dt rt dimSize def f]}
{CaseClause -> ReturnStmt -> CallExpr -> SelectorExpr [errors Errorf reductionErrMsg fn]}
{ReturnStmt [nil]}
{CaseClause [Complex64]}
{DeclStmt [def complex64]}
{AssignStmt [def ok defaultValue complex64 ok]}
{BlockStmt -> ReturnStmt -> CallExpr -> SelectorExpr [errors Errorf defaultValueErrMsg def defaultValue defaultValue]}
{AssignStmt [dt]}
{CallExpr -> SelectorExpr [data Complex64s]}
{AssignStmt [rt]}
{CallExpr -> SelectorExpr [retVal Complex64s]}
{AssignStmt [f fn]}
{BlockStmt -> CaseClause -> FieldList [complex64]}
{FieldList [complex64]}
{CallExpr [reduceLastC64 dt rt dimSize def f]}
{CaseClause -> FieldList [complex64 complex64]}
{FieldList [complex64]}
{CallExpr [genericReduceLastC64 dt rt dimSize def f]}
{CaseClause -> ReturnStmt -> CallExpr -> SelectorExpr [errors Errorf reductionErrMsg fn]}
{ReturnStmt [nil]}
{CaseClause [Complex128]}
{DeclStmt [def complex128]}
{AssignStmt [def ok defaultValue complex128 ok]}
{BlockStmt -> ReturnStmt -> CallExpr -> SelectorExpr [errors Errorf defaultValueErrMsg def defaultValue defaultValue]}
{AssignStmt [dt]}
{CallExpr -> SelectorExpr [data Complex128s]}
{AssignStmt [rt]}
{CallExpr -> SelectorExpr [retVal Complex128s]}
{AssignStmt [f fn]}
{BlockStmt -> CaseClause -> FieldList [complex128]}
{FieldList [complex128]}
{CallExpr [reduceLastC128 dt rt dimSize def f]}
{CaseClause -> FieldList [complex128 complex128]}
{FieldList [complex128]}
{CallExpr [genericReduceLastC128 dt rt dimSize def f]}
{CaseClause -> ReturnStmt -> CallExpr -> SelectorExpr [errors Errorf reductionErrMsg fn]}
{ReturnStmt [nil]}
{CaseClause [String]}
{DeclStmt [def string]}
{AssignStmt [def ok defaultValue string ok]}
{BlockStmt -> ReturnStmt -> CallExpr -> SelectorExpr [errors Errorf defaultValueErrMsg def defaultValue defaultValue]}
{AssignStmt [dt]}
{CallExpr -> SelectorExpr [data Strings]}
{AssignStmt [rt]}
{CallExpr -> SelectorExpr [retVal Strings]}
{AssignStmt [f fn]}
{BlockStmt -> CaseClause -> FieldList [string]}
{FieldList [string]}
{CallExpr [reduceLastStr dt rt dimSize def f]}
{CaseClause -> FieldList [string string]}
{FieldList [string]}
{CallExpr [genericReduceLastStr dt rt dimSize def f]}
{CaseClause -> ReturnStmt -> CallExpr -> SelectorExpr [errors Errorf reductionErrMsg fn]}
{ReturnStmt [nil]}
{CaseClause [UnsafePointer]}
{DeclStmt [def]}
{SelectorExpr [unsafe Pointer]}
{AssignStmt [def ok defaultValue]}
{SelectorExpr [unsafe Pointer ok]}
{BlockStmt -> ReturnStmt -> CallExpr -> SelectorExpr [errors Errorf defaultValueErrMsg def defaultValue defaultValue]}
{AssignStmt [dt]}
{CallExpr -> SelectorExpr [data UnsafePointers]}
{AssignStmt [rt]}
{CallExpr -> SelectorExpr [retVal UnsafePointers]}
{AssignStmt [f fn]}
{BlockStmt -> CaseClause -> FieldList -> SelectorExpr [unsafe Pointer]}
{FieldList -> SelectorExpr [unsafe Pointer]}
{CallExpr [reduceLastUnsafePointer dt rt dimSize def f]}
{CaseClause -> FieldList -> SelectorExpr [unsafe Pointer]}
{SelectorExpr [unsafe Pointer]}
{FieldList -> SelectorExpr [unsafe Pointer]}
{CallExpr [genericReduceLastUnsafePointer dt rt dimSize def f]}
{CaseClause -> ReturnStmt -> CallExpr -> SelectorExpr [errors Errorf reductionErrMsg fn]}
{ReturnStmt [nil]}
{CaseClause -> ReturnStmt -> CallExpr -> SelectorExpr [errors Errorf]}
{BasicLit [t]}


function name is ReduceDefault {FieldList [e E ReduceDefault]}
{FieldList [t]}
{SelectorExpr [reflect Type data]}
{StarExpr -> SelectorExpr [storage Header retVal]}
{StarExpr -> SelectorExpr [storage Header dim0 int dimSize int outerStride int stride int expected int fn]}
{InterfaceType -> FieldList -> FieldList [err error]}
{BlockStmt -> DeclStmt [ok bool]}
{SwitchStmt [t]}
{BlockStmt -> CaseClause [Bool]}
{DeclStmt [f]}
{FieldList [bool bool]}
{FieldList [bool]}
{AssignStmt [f ok fn]}
{FieldList [bool bool]}
{FieldList [bool ok]}
{BlockStmt -> ReturnStmt -> CallExpr -> SelectorExpr [errors Errorf reductionErrMsg fn]}
{AssignStmt [dt]}
{CallExpr -> SelectorExpr [data Bools]}
{AssignStmt [rt]}
{CallExpr -> SelectorExpr [retVal Bools]}
{CallExpr [reduceDefaultB dt rt dim0 dimSize outerStride stride expected f]}
{ReturnStmt [nil]}
{CaseClause [Int]}
{DeclStmt [f]}
{FieldList [int int]}
{FieldList [int]}
{AssignStmt [f ok fn]}
{FieldList [int int]}
{FieldList [int ok]}
{BlockStmt -> ReturnStmt -> CallExpr -> SelectorExpr [errors Errorf reductionErrMsg fn]}
{AssignStmt [dt]}
{CallExpr -> SelectorExpr [data Ints]}
{AssignStmt [rt]}
{CallExpr -> SelectorExpr [retVal Ints]}
{CallExpr [reduceDefaultI dt rt dim0 dimSize outerStride stride expected f]}
{ReturnStmt [nil]}
{CaseClause [Int8]}
{DeclStmt [f]}
{FieldList [int8 int8]}
{FieldList [int8]}
{AssignStmt [f ok fn]}
{FieldList [int8 int8]}
{FieldList [int8 ok]}
{BlockStmt -> ReturnStmt -> CallExpr -> SelectorExpr [errors Errorf reductionErrMsg fn]}
{AssignStmt [dt]}
{CallExpr -> SelectorExpr [data Int8s]}
{AssignStmt [rt]}
{CallExpr -> SelectorExpr [retVal Int8s]}
{CallExpr [reduceDefaultI8 dt rt dim0 dimSize outerStride stride expected f]}
{ReturnStmt [nil]}
{CaseClause [Int16]}
{DeclStmt [f]}
{FieldList [int16 int16]}
{FieldList [int16]}
{AssignStmt [f ok fn]}
{FieldList [int16 int16]}
{FieldList [int16 ok]}
{BlockStmt -> ReturnStmt -> CallExpr -> SelectorExpr [errors Errorf reductionErrMsg fn]}
{AssignStmt [dt]}
{CallExpr -> SelectorExpr [data Int16s]}
{AssignStmt [rt]}
{CallExpr -> SelectorExpr [retVal Int16s]}
{CallExpr [reduceDefaultI16 dt rt dim0 dimSize outerStride stride expected f]}
{ReturnStmt [nil]}
{CaseClause [Int32]}
{DeclStmt [f]}
{FieldList [int32 int32]}
{FieldList [int32]}
{AssignStmt [f ok fn]}
{FieldList [int32 int32]}
{FieldList [int32 ok]}
{BlockStmt -> ReturnStmt -> CallExpr -> SelectorExpr [errors Errorf reductionErrMsg fn]}
{AssignStmt [dt]}
{CallExpr -> SelectorExpr [data Int32s]}
{AssignStmt [rt]}
{CallExpr -> SelectorExpr [retVal Int32s]}
{CallExpr [reduceDefaultI32 dt rt dim0 dimSize outerStride stride expected f]}
{ReturnStmt [nil]}
{CaseClause [Int64]}
{DeclStmt [f]}
{FieldList [int64 int64]}
{FieldList [int64]}
{AssignStmt [f ok fn]}
{FieldList [int64 int64]}
{FieldList [int64 ok]}
{BlockStmt -> ReturnStmt -> CallExpr -> SelectorExpr [errors Errorf reductionErrMsg fn]}
{AssignStmt [dt]}
{CallExpr -> SelectorExpr [data Int64s]}
{AssignStmt [rt]}
{CallExpr -> SelectorExpr [retVal Int64s]}
{CallExpr [reduceDefaultI64 dt rt dim0 dimSize outerStride stride expected f]}
{ReturnStmt [nil]}
{CaseClause [Uint]}
{DeclStmt [f]}
{FieldList [uint uint]}
{FieldList [uint]}
{AssignStmt [f ok fn]}
{FieldList [uint uint]}
{FieldList [uint ok]}
{BlockStmt -> ReturnStmt -> CallExpr -> SelectorExpr [errors Errorf reductionErrMsg fn]}
{AssignStmt [dt]}
{CallExpr -> SelectorExpr [data Uints]}
{AssignStmt [rt]}
{CallExpr -> SelectorExpr [retVal Uints]}
{CallExpr [reduceDefaultU dt rt dim0 dimSize outerStride stride expected f]}
{ReturnStmt [nil]}
{CaseClause [Uint8]}
{DeclStmt [f]}
{FieldList [uint8 uint8]}
{FieldList [uint8]}
{AssignStmt [f ok fn]}
{FieldList [uint8 uint8]}
{FieldList [uint8 ok]}
{BlockStmt -> ReturnStmt -> CallExpr -> SelectorExpr [errors Errorf reductionErrMsg fn]}
{AssignStmt [dt]}
{CallExpr -> SelectorExpr [data Uint8s]}
{AssignStmt [rt]}
{CallExpr -> SelectorExpr [retVal Uint8s]}
{CallExpr [reduceDefaultU8 dt rt dim0 dimSize outerStride stride expected f]}
{ReturnStmt [nil]}
{CaseClause [Uint16]}
{DeclStmt [f]}
{FieldList [uint16 uint16]}
{FieldList [uint16]}
{AssignStmt [f ok fn]}
{FieldList [uint16 uint16]}
{FieldList [uint16 ok]}
{BlockStmt -> ReturnStmt -> CallExpr -> SelectorExpr [errors Errorf reductionErrMsg fn]}
{AssignStmt [dt]}
{CallExpr -> SelectorExpr [data Uint16s]}
{AssignStmt [rt]}
{CallExpr -> SelectorExpr [retVal Uint16s]}
{CallExpr [reduceDefaultU16 dt rt dim0 dimSize outerStride stride expected f]}
{ReturnStmt [nil]}
{CaseClause [Uint32]}
{DeclStmt [f]}
{FieldList [uint32 uint32]}
{FieldList [uint32]}
{AssignStmt [f ok fn]}
{FieldList [uint32 uint32]}
{FieldList [uint32 ok]}
{BlockStmt -> ReturnStmt -> CallExpr -> SelectorExpr [errors Errorf reductionErrMsg fn]}
{AssignStmt [dt]}
{CallExpr -> SelectorExpr [data Uint32s]}
{AssignStmt [rt]}
{CallExpr -> SelectorExpr [retVal Uint32s]}
{CallExpr [reduceDefaultU32 dt rt dim0 dimSize outerStride stride expected f]}
{ReturnStmt [nil]}
{CaseClause [Uint64]}
{DeclStmt [f]}
{FieldList [uint64 uint64]}
{FieldList [uint64]}
{AssignStmt [f ok fn]}
{FieldList [uint64 uint64]}
{FieldList [uint64 ok]}
{BlockStmt -> ReturnStmt -> CallExpr -> SelectorExpr [errors Errorf reductionErrMsg fn]}
{AssignStmt [dt]}
{CallExpr -> SelectorExpr [data Uint64s]}
{AssignStmt [rt]}
{CallExpr -> SelectorExpr [retVal Uint64s]}
{CallExpr [reduceDefaultU64 dt rt dim0 dimSize outerStride stride expected f]}
{ReturnStmt [nil]}
{CaseClause [Uintptr]}
{DeclStmt [f]}
{FieldList [uintptr uintptr]}
{FieldList [uintptr]}
{AssignStmt [f ok fn]}
{FieldList [uintptr uintptr]}
{FieldList [uintptr ok]}
{BlockStmt -> ReturnStmt -> CallExpr -> SelectorExpr [errors Errorf reductionErrMsg fn]}
{AssignStmt [dt]}
{CallExpr -> SelectorExpr [data Uintptrs]}
{AssignStmt [rt]}
{CallExpr -> SelectorExpr [retVal Uintptrs]}
{CallExpr [reduceDefaultUintptr dt rt dim0 dimSize outerStride stride expected f]}
{ReturnStmt [nil]}
{CaseClause [Float32]}
{DeclStmt [f]}
{FieldList [float32 float32]}
{FieldList [float32]}
{AssignStmt [f ok fn]}
{FieldList [float32 float32]}
{FieldList [float32 ok]}
{BlockStmt -> ReturnStmt -> CallExpr -> SelectorExpr [errors Errorf reductionErrMsg fn]}
{AssignStmt [dt]}
{CallExpr -> SelectorExpr [data Float32s]}
{AssignStmt [rt]}
{CallExpr -> SelectorExpr [retVal Float32s]}
{CallExpr [reduceDefaultF32 dt rt dim0 dimSize outerStride stride expected f]}
{ReturnStmt [nil]}
{CaseClause [Float64]}
{DeclStmt [f]}
{FieldList [float64 float64]}
{FieldList [float64]}
{AssignStmt [f ok fn]}
{FieldList [float64 float64]}
{FieldList [float64 ok]}
{BlockStmt -> ReturnStmt -> CallExpr -> SelectorExpr [errors Errorf reductionErrMsg fn]}
{AssignStmt [dt]}
{CallExpr -> SelectorExpr [data Float64s]}
{AssignStmt [rt]}
{CallExpr -> SelectorExpr [retVal Float64s]}
{CallExpr [reduceDefaultF64 dt rt dim0 dimSize outerStride stride expected f]}
{ReturnStmt [nil]}
{CaseClause [Complex64]}
{DeclStmt [f]}
{FieldList [complex64 complex64]}
{FieldList [complex64]}
{AssignStmt [f ok fn]}
{FieldList [complex64 complex64]}
{FieldList [complex64 ok]}
{BlockStmt -> ReturnStmt -> CallExpr -> SelectorExpr [errors Errorf reductionErrMsg fn]}
{AssignStmt [dt]}
{CallExpr -> SelectorExpr [data Complex64s]}
{AssignStmt [rt]}
{CallExpr -> SelectorExpr [retVal Complex64s]}
{CallExpr [reduceDefaultC64 dt rt dim0 dimSize outerStride stride expected f]}
{ReturnStmt [nil]}
{CaseClause [Complex128]}
{DeclStmt [f]}
{FieldList [complex128 complex128]}
{FieldList [complex128]}
{AssignStmt [f ok fn]}
{FieldList [complex128 complex128]}
{FieldList [complex128 ok]}
{BlockStmt -> ReturnStmt -> CallExpr -> SelectorExpr [errors Errorf reductionErrMsg fn]}
{AssignStmt [dt]}
{CallExpr -> SelectorExpr [data Complex128s]}
{AssignStmt [rt]}
{CallExpr -> SelectorExpr [retVal Complex128s]}
{CallExpr [reduceDefaultC128 dt rt dim0 dimSize outerStride stride expected f]}
{ReturnStmt [nil]}
{CaseClause [String]}
{DeclStmt [f]}
{FieldList [string string]}
{FieldList [string]}
{AssignStmt [f ok fn]}
{FieldList [string string]}
{FieldList [string ok]}
{BlockStmt -> ReturnStmt -> CallExpr -> SelectorExpr [errors Errorf reductionErrMsg fn]}
{AssignStmt [dt]}
{CallExpr -> SelectorExpr [data Strings]}
{AssignStmt [rt]}
{CallExpr -> SelectorExpr [retVal Strings]}
{CallExpr [reduceDefaultStr dt rt dim0 dimSize outerStride stride expected f]}
{ReturnStmt [nil]}
{CaseClause [UnsafePointer]}
{DeclStmt [f]}
{FieldList -> SelectorExpr [unsafe Pointer]}
{SelectorExpr [unsafe Pointer]}
{FieldList -> SelectorExpr [unsafe Pointer]}
{AssignStmt [f ok fn]}
{FieldList -> SelectorExpr [unsafe Pointer]}
{SelectorExpr [unsafe Pointer]}
{FieldList -> SelectorExpr [unsafe Pointer ok]}
{BlockStmt -> ReturnStmt -> CallExpr -> SelectorExpr [errors Errorf reductionErrMsg fn]}
{AssignStmt [dt]}
{CallExpr -> SelectorExpr [data UnsafePointers]}
{AssignStmt [rt]}
{CallExpr -> SelectorExpr [retVal UnsafePointers]}
{CallExpr [reduceDefaultUnsafePointer dt rt dim0 dimSize outerStride stride expected f]}
{ReturnStmt [nil]}
{CaseClause -> ReturnStmt -> CallExpr -> SelectorExpr [errors Errorf]}
{BasicLit [t]}


function name is Reduce {FieldList [e E Reduce]}
{FieldList [t]}
{SelectorExpr [reflect Type a]}
{StarExpr -> SelectorExpr [storage Header defaultValue]}
{InterfaceType -> FieldList [fn]}
{InterfaceType -> FieldList -> FieldList [retVal]}
{InterfaceType -> FieldList [err error]}
{BlockStmt -> DeclStmt [ok bool]}
{SwitchStmt [t]}
{BlockStmt -> CaseClause [Bool]}
{DeclStmt [f]}
{FieldList [bool bool]}
{FieldList [bool]}
{DeclStmt [def bool]}
{AssignStmt [f ok fn]}
{FieldList [bool bool]}
{FieldList [bool ok]}
{BlockStmt -> ReturnStmt [nil]}
{CallExpr -> SelectorExpr [errors Errorf reductionErrMsg fn]}
{AssignStmt [def ok defaultValue bool ok]}
{BlockStmt -> ReturnStmt [nil]}
{CallExpr -> SelectorExpr [errors Errorf defaultValueErrMsg def defaultValue defaultValue]}
{AssignStmt [retVal]}
{CallExpr [ReduceB f def]}
{CallExpr -> SelectorExpr [a Bools]}
{ReturnStmt -> CaseClause [Int]}
{DeclStmt [f]}
{FieldList [int int]}
{FieldList [int]}
{DeclStmt [def int]}
{AssignStmt [f ok fn]}
{FieldList [int int]}
{FieldList [int ok]}
{BlockStmt -> ReturnStmt [nil]}
{CallExpr -> SelectorExpr [errors Errorf reductionErrMsg fn]}
{AssignStmt [def ok defaultValue int ok]}
{BlockStmt -> ReturnStmt [nil]}
{CallExpr -> SelectorExpr [errors Errorf defaultValueErrMsg def defaultValue defaultValue]}
{AssignStmt [retVal]}
{CallExpr [ReduceI f def]}
{CallExpr -> SelectorExpr [a Ints]}
{ReturnStmt -> CaseClause [Int8]}
{DeclStmt [f]}
{FieldList [int8 int8]}
{FieldList [int8]}
{DeclStmt [def int8]}
{AssignStmt [f ok fn]}
{FieldList [int8 int8]}
{FieldList [int8 ok]}
{BlockStmt -> ReturnStmt [nil]}
{CallExpr -> SelectorExpr [errors Errorf reductionErrMsg fn]}
{AssignStmt [def ok defaultValue int8 ok]}
{BlockStmt -> ReturnStmt [nil]}
{CallExpr -> SelectorExpr [errors Errorf defaultValueErrMsg def defaultValue defaultValue]}
{AssignStmt [retVal]}
{CallExpr [ReduceI8 f def]}
{CallExpr -> SelectorExpr [a Int8s]}
{ReturnStmt -> CaseClause [Int16]}
{DeclStmt [f]}
{FieldList [int16 int16]}
{FieldList [int16]}
{DeclStmt [def int16]}
{AssignStmt [f ok fn]}
{FieldList [int16 int16]}
{FieldList [int16 ok]}
{BlockStmt -> ReturnStmt [nil]}
{CallExpr -> SelectorExpr [errors Errorf reductionErrMsg fn]}
{AssignStmt [def ok defaultValue int16 ok]}
{BlockStmt -> ReturnStmt [nil]}
{CallExpr -> SelectorExpr [errors Errorf defaultValueErrMsg def defaultValue defaultValue]}
{AssignStmt [retVal]}
{CallExpr [ReduceI16 f def]}
{CallExpr -> SelectorExpr [a Int16s]}
{ReturnStmt -> CaseClause [Int32]}
{DeclStmt [f]}
{FieldList [int32 int32]}
{FieldList [int32]}
{DeclStmt [def int32]}
{AssignStmt [f ok fn]}
{FieldList [int32 int32]}
{FieldList [int32 ok]}
{BlockStmt -> ReturnStmt [nil]}
{CallExpr -> SelectorExpr [errors Errorf reductionErrMsg fn]}
{AssignStmt [def ok defaultValue int32 ok]}
{BlockStmt -> ReturnStmt [nil]}
{CallExpr -> SelectorExpr [errors Errorf defaultValueErrMsg def defaultValue defaultValue]}
{AssignStmt [retVal]}
{CallExpr [ReduceI32 f def]}
{CallExpr -> SelectorExpr [a Int32s]}
{ReturnStmt -> CaseClause [Int64]}
{DeclStmt [f]}
{FieldList [int64 int64]}
{FieldList [int64]}
{DeclStmt [def int64]}
{AssignStmt [f ok fn]}
{FieldList [int64 int64]}
{FieldList [int64 ok]}
{BlockStmt -> ReturnStmt [nil]}
{CallExpr -> SelectorExpr [errors Errorf reductionErrMsg fn]}
{AssignStmt [def ok defaultValue int64 ok]}
{BlockStmt -> ReturnStmt [nil]}
{CallExpr -> SelectorExpr [errors Errorf defaultValueErrMsg def defaultValue defaultValue]}
{AssignStmt [retVal]}
{CallExpr [ReduceI64 f def]}
{CallExpr -> SelectorExpr [a Int64s]}
{ReturnStmt -> CaseClause [Uint]}
{DeclStmt [f]}
{FieldList [uint uint]}
{FieldList [uint]}
{DeclStmt [def uint]}
{AssignStmt [f ok fn]}
{FieldList [uint uint]}
{FieldList [uint ok]}
{BlockStmt -> ReturnStmt [nil]}
{CallExpr -> SelectorExpr [errors Errorf reductionErrMsg fn]}
{AssignStmt [def ok defaultValue uint ok]}
{BlockStmt -> ReturnStmt [nil]}
{CallExpr -> SelectorExpr [errors Errorf defaultValueErrMsg def defaultValue defaultValue]}
{AssignStmt [retVal]}
{CallExpr [ReduceU f def]}
{CallExpr -> SelectorExpr [a Uints]}
{ReturnStmt -> CaseClause [Uint8]}
{DeclStmt [f]}
{FieldList [uint8 uint8]}
{FieldList [uint8]}
{DeclStmt [def uint8]}
{AssignStmt [f ok fn]}
{FieldList [uint8 uint8]}
{FieldList [uint8 ok]}
{BlockStmt -> ReturnStmt [nil]}
{CallExpr -> SelectorExpr [errors Errorf reductionErrMsg fn]}
{AssignStmt [def ok defaultValue uint8 ok]}
{BlockStmt -> ReturnStmt [nil]}
{CallExpr -> SelectorExpr [errors Errorf defaultValueErrMsg def defaultValue defaultValue]}
{AssignStmt [retVal]}
{CallExpr [ReduceU8 f def]}
{CallExpr -> SelectorExpr [a Uint8s]}
{ReturnStmt -> CaseClause [Uint16]}
{DeclStmt [f]}
{FieldList [uint16 uint16]}
{FieldList [uint16]}
{DeclStmt [def uint16]}
{AssignStmt [f ok fn]}
{FieldList [uint16 uint16]}
{FieldList [uint16 ok]}
{BlockStmt -> ReturnStmt [nil]}
{CallExpr -> SelectorExpr [errors Errorf reductionErrMsg fn]}
{AssignStmt [def ok defaultValue uint16 ok]}
{BlockStmt -> ReturnStmt [nil]}
{CallExpr -> SelectorExpr [errors Errorf defaultValueErrMsg def defaultValue defaultValue]}
{AssignStmt [retVal]}
{CallExpr [ReduceU16 f def]}
{CallExpr -> SelectorExpr [a Uint16s]}
{ReturnStmt -> CaseClause [Uint32]}
{DeclStmt [f]}
{FieldList [uint32 uint32]}
{FieldList [uint32]}
{DeclStmt [def uint32]}
{AssignStmt [f ok fn]}
{FieldList [uint32 uint32]}
{FieldList [uint32 ok]}
{BlockStmt -> ReturnStmt [nil]}
{CallExpr -> SelectorExpr [errors Errorf reductionErrMsg fn]}
{AssignStmt [def ok defaultValue uint32 ok]}
{BlockStmt -> ReturnStmt [nil]}
{CallExpr -> SelectorExpr [errors Errorf defaultValueErrMsg def defaultValue defaultValue]}
{AssignStmt [retVal]}
{CallExpr [ReduceU32 f def]}
{CallExpr -> SelectorExpr [a Uint32s]}
{ReturnStmt -> CaseClause [Uint64]}
{DeclStmt [f]}
{FieldList [uint64 uint64]}
{FieldList [uint64]}
{DeclStmt [def uint64]}
{AssignStmt [f ok fn]}
{FieldList [uint64 uint64]}
{FieldList [uint64 ok]}
{BlockStmt -> ReturnStmt [nil]}
{CallExpr -> SelectorExpr [errors Errorf reductionErrMsg fn]}
{AssignStmt [def ok defaultValue uint64 ok]}
{BlockStmt -> ReturnStmt [nil]}
{CallExpr -> SelectorExpr [errors Errorf defaultValueErrMsg def defaultValue defaultValue]}
{AssignStmt [retVal]}
{CallExpr [ReduceU64 f def]}
{CallExpr -> SelectorExpr [a Uint64s]}
{ReturnStmt -> CaseClause [Uintptr]}
{DeclStmt [f]}
{FieldList [uintptr uintptr]}
{FieldList [uintptr]}
{DeclStmt [def uintptr]}
{AssignStmt [f ok fn]}
{FieldList [uintptr uintptr]}
{FieldList [uintptr ok]}
{BlockStmt -> ReturnStmt [nil]}
{CallExpr -> SelectorExpr [errors Errorf reductionErrMsg fn]}
{AssignStmt [def ok defaultValue uintptr ok]}
{BlockStmt -> ReturnStmt [nil]}
{CallExpr -> SelectorExpr [errors Errorf defaultValueErrMsg def defaultValue defaultValue]}
{AssignStmt [retVal]}
{CallExpr [ReduceUintptr f def]}
{CallExpr -> SelectorExpr [a Uintptrs]}
{ReturnStmt -> CaseClause [Float32]}
{DeclStmt [f]}
{FieldList [float32 float32]}
{FieldList [float32]}
{DeclStmt [def float32]}
{AssignStmt [f ok fn]}
{FieldList [float32 float32]}
{FieldList [float32 ok]}
{BlockStmt -> ReturnStmt [nil]}
{CallExpr -> SelectorExpr [errors Errorf reductionErrMsg fn]}
{AssignStmt [def ok defaultValue float32 ok]}
{BlockStmt -> ReturnStmt [nil]}
{CallExpr -> SelectorExpr [errors Errorf defaultValueErrMsg def defaultValue defaultValue]}
{AssignStmt [retVal]}
{CallExpr [ReduceF32 f def]}
{CallExpr -> SelectorExpr [a Float32s]}
{ReturnStmt -> CaseClause [Float64]}
{DeclStmt [f]}
{FieldList [float64 float64]}
{FieldList [float64]}
{DeclStmt [def float64]}
{AssignStmt [f ok fn]}
{FieldList [float64 float64]}
{FieldList [float64 ok]}
{BlockStmt -> ReturnStmt [nil]}
{CallExpr -> SelectorExpr [errors Errorf reductionErrMsg fn]}
{AssignStmt [def ok defaultValue float64 ok]}
{BlockStmt -> ReturnStmt [nil]}
{CallExpr -> SelectorExpr [errors Errorf defaultValueErrMsg def defaultValue defaultValue]}
{AssignStmt [retVal]}
{CallExpr [ReduceF64 f def]}
{CallExpr -> SelectorExpr [a Float64s]}
{ReturnStmt -> CaseClause [Complex64]}
{DeclStmt [f]}
{FieldList [complex64 complex64]}
{FieldList [complex64]}
{DeclStmt [def complex64]}
{AssignStmt [f ok fn]}
{FieldList [complex64 complex64]}
{FieldList [complex64 ok]}
{BlockStmt -> ReturnStmt [nil]}
{CallExpr -> SelectorExpr [errors Errorf reductionErrMsg fn]}
{AssignStmt [def ok defaultValue complex64 ok]}
{BlockStmt -> ReturnStmt [nil]}
{CallExpr -> SelectorExpr [errors Errorf defaultValueErrMsg def defaultValue defaultValue]}
{AssignStmt [retVal]}
{CallExpr [ReduceC64 f def]}
{CallExpr -> SelectorExpr [a Complex64s]}
{ReturnStmt -> CaseClause [Complex128]}
{DeclStmt [f]}
{FieldList [complex128 complex128]}
{FieldList [complex128]}
{DeclStmt [def complex128]}
{AssignStmt [f ok fn]}
{FieldList [complex128 complex128]}
{FieldList [complex128 ok]}
{BlockStmt -> ReturnStmt [nil]}
{CallExpr -> SelectorExpr [errors Errorf reductionErrMsg fn]}
{AssignStmt [def ok defaultValue complex128 ok]}
{BlockStmt -> ReturnStmt [nil]}
{CallExpr -> SelectorExpr [errors Errorf defaultValueErrMsg def defaultValue defaultValue]}
{AssignStmt [retVal]}
{CallExpr [ReduceC128 f def]}
{CallExpr -> SelectorExpr [a Complex128s]}
{ReturnStmt -> CaseClause [String]}
{DeclStmt [f]}
{FieldList [string string]}
{FieldList [string]}
{DeclStmt [def string]}
{AssignStmt [f ok fn]}
{FieldList [string string]}
{FieldList [string ok]}
{BlockStmt -> ReturnStmt [nil]}
{CallExpr -> SelectorExpr [errors Errorf reductionErrMsg fn]}
{AssignStmt [def ok defaultValue string ok]}
{BlockStmt -> ReturnStmt [nil]}
{CallExpr -> SelectorExpr [errors Errorf defaultValueErrMsg def defaultValue defaultValue]}
{AssignStmt [retVal]}
{CallExpr [ReduceStr f def]}
{CallExpr -> SelectorExpr [a Strings]}
{ReturnStmt -> CaseClause [UnsafePointer]}
{DeclStmt [f]}
{FieldList -> SelectorExpr [unsafe Pointer]}
{SelectorExpr [unsafe Pointer]}
{FieldList -> SelectorExpr [unsafe Pointer]}
{DeclStmt [def]}
{SelectorExpr [unsafe Pointer]}
{AssignStmt [f ok fn]}
{FieldList -> SelectorExpr [unsafe Pointer]}
{SelectorExpr [unsafe Pointer]}
{FieldList -> SelectorExpr [unsafe Pointer ok]}
{BlockStmt -> ReturnStmt [nil]}
{CallExpr -> SelectorExpr [errors Errorf reductionErrMsg fn]}
{AssignStmt [def ok defaultValue]}
{SelectorExpr [unsafe Pointer ok]}
{BlockStmt -> ReturnStmt [nil]}
{CallExpr -> SelectorExpr [errors Errorf defaultValueErrMsg def defaultValue defaultValue]}
{AssignStmt [retVal]}
{CallExpr [ReduceUnsafePointer f def]}
{CallExpr -> SelectorExpr [a UnsafePointers]}
{ReturnStmt -> CaseClause -> ReturnStmt [nil]}
{CallExpr -> SelectorExpr [errors Errorf]}
{BasicLit [t]}


