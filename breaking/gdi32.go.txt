{*ast.File [win]}
{*ast.GenDecl -> *ast.ImportSpec [STRING "syscall"]}
{*ast.ImportSpec [STRING "unsafe"]}
{*ast.ImportSpec [STRING "golang.org/x/sys/windows"]}
{*ast.GenDecl -> *ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DRIVERVERSION INT 0]}
{*ast.ValueSpec [TECHNOLOGY INT 2]}
{*ast.ValueSpec [HORZSIZE INT 4]}
{*ast.ValueSpec [VERTSIZE INT 6]}
{*ast.ValueSpec [HORZRES INT 8]}
{*ast.ValueSpec [VERTRES INT 10]}
{*ast.ValueSpec [LOGPIXELSX INT 88]}
{*ast.ValueSpec [LOGPIXELSY INT 90]}
{*ast.ValueSpec [BITSPIXEL INT 12]}
{*ast.ValueSpec [PLANES INT 14]}
{*ast.ValueSpec [NUMBRUSHES INT 16]}
{*ast.ValueSpec [NUMPENS INT 18]}
{*ast.ValueSpec [NUMFONTS INT 22]}
{*ast.ValueSpec [NUMCOLORS INT 24]}
{*ast.ValueSpec [NUMMARKERS INT 20]}
{*ast.ValueSpec [ASPECTX INT 40]}
{*ast.ValueSpec [ASPECTY INT 42]}
{*ast.ValueSpec [ASPECTXY INT 44]}
{*ast.ValueSpec [PDEVICESIZE INT 26]}
{*ast.ValueSpec [CLIPCAPS INT 36]}
{*ast.ValueSpec [SIZEPALETTE INT 104]}
{*ast.ValueSpec [NUMRESERVED INT 106]}
{*ast.ValueSpec [COLORRES INT 108]}
{*ast.ValueSpec [PHYSICALWIDTH INT 110]}
{*ast.ValueSpec [PHYSICALHEIGHT INT 111]}
{*ast.ValueSpec [PHYSICALOFFSETX INT 112]}
{*ast.ValueSpec [PHYSICALOFFSETY INT 113]}
{*ast.ValueSpec [SCALINGFACTORX INT 114]}
{*ast.ValueSpec [SCALINGFACTORY INT 115]}
{*ast.ValueSpec [VREFRESH INT 116]}
{*ast.ValueSpec [DESKTOPHORZRES INT 118]}
{*ast.ValueSpec [DESKTOPVERTRES INT 117]}
{*ast.ValueSpec [BLTALIGNMENT INT 119]}
{*ast.ValueSpec [SHADEBLENDCAPS INT 120]}
{*ast.ValueSpec [COLORMGMTCAPS INT 121]}
{*ast.ValueSpec [RASTERCAPS INT 38]}
{*ast.ValueSpec [CURVECAPS INT 28]}
{*ast.ValueSpec [LINECAPS INT 30]}
{*ast.ValueSpec [POLYGONALCAPS INT 32]}
{*ast.ValueSpec [TEXTCAPS INT 34]}
{*ast.GenDecl -> *ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DT_PLOTTER INT 0]}
{*ast.ValueSpec [DT_RASDISPLAY INT 1]}
{*ast.ValueSpec [DT_RASPRINTER INT 2]}
{*ast.ValueSpec [DT_RASCAMERA INT 3]}
{*ast.ValueSpec [DT_CHARSTREAM INT 4]}
{*ast.ValueSpec [DT_METAFILE INT 5]}
{*ast.ValueSpec [DT_DISPFILE INT 6]}
{*ast.GenDecl -> *ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [SB_NONE INT 0x00]}
{*ast.ValueSpec [SB_CONST_ALPHA INT 0x01]}
{*ast.ValueSpec [SB_PIXEL_ALPHA INT 0x02]}
{*ast.ValueSpec [SB_PREMULT_ALPHA INT 0x04]}
{*ast.ValueSpec [SB_GRAD_RECT INT 0x10]}
{*ast.ValueSpec [SB_GRAD_TRI INT 0x20]}
{*ast.GenDecl -> *ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [CM_NONE INT 0x00]}
{*ast.ValueSpec [CM_DEVICE_ICM INT 0x01]}
{*ast.ValueSpec [CM_GAMMA_RAMP INT 0x02]}
{*ast.ValueSpec [CM_CMYK_COLOR INT 0x04]}
{*ast.GenDecl -> *ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [RC_BANDING INT 2]}
{*ast.ValueSpec [RC_BITBLT INT 1]}
{*ast.ValueSpec [RC_BITMAP64 INT 8]}
{*ast.ValueSpec [RC_DI_BITMAP INT 128]}
{*ast.ValueSpec [RC_DIBTODEV INT 512]}
{*ast.ValueSpec [RC_FLOODFILL INT 4096]}
{*ast.ValueSpec [RC_GDI20_OUTPUT INT 16]}
{*ast.ValueSpec [RC_PALETTE INT 256]}
{*ast.ValueSpec [RC_SCALING INT 4]}
{*ast.ValueSpec [RC_STRETCHBLT INT 2048]}
{*ast.ValueSpec [RC_STRETCHDIB INT 8192]}
{*ast.ValueSpec [RC_DEVBITS INT 0x8000]}
{*ast.ValueSpec [RC_OP_DX_OUTPUT INT 0x4000]}
{*ast.GenDecl -> *ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [CC_NONE INT 0]}
{*ast.ValueSpec [CC_CIRCLES INT 1]}
{*ast.ValueSpec [CC_PIE INT 2]}
{*ast.ValueSpec [CC_CHORD INT 4]}
{*ast.ValueSpec [CC_ELLIPSES INT 8]}
{*ast.ValueSpec [CC_WIDE INT 16]}
{*ast.ValueSpec [CC_STYLED INT 32]}
{*ast.ValueSpec [CC_WIDESTYLED INT 64]}
{*ast.ValueSpec [CC_INTERIORS INT 128]}
{*ast.ValueSpec [CC_ROUNDRECT INT 256]}
{*ast.GenDecl -> *ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [LC_NONE INT 0]}
{*ast.ValueSpec [LC_POLYLINE INT 2]}
{*ast.ValueSpec [LC_MARKER INT 4]}
{*ast.ValueSpec [LC_POLYMARKER INT 8]}
{*ast.ValueSpec [LC_WIDE INT 16]}
{*ast.ValueSpec [LC_STYLED INT 32]}
{*ast.ValueSpec [LC_WIDESTYLED INT 64]}
{*ast.ValueSpec [LC_INTERIORS INT 128]}
{*ast.GenDecl -> *ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [PC_NONE INT 0]}
{*ast.ValueSpec [PC_POLYGON INT 1]}
{*ast.ValueSpec [PC_POLYPOLYGON INT 256]}
{*ast.ValueSpec [PC_PATHS INT 512]}
{*ast.ValueSpec [PC_RECTANGLE INT 2]}
{*ast.ValueSpec [PC_WINDPOLYGON INT 4]}
{*ast.ValueSpec [PC_SCANLINE INT 8]}
{*ast.ValueSpec [PC_TRAPEZOID INT 4]}
{*ast.ValueSpec [PC_WIDE INT 16]}
{*ast.ValueSpec [PC_STYLED INT 32]}
{*ast.ValueSpec [PC_WIDESTYLED INT 64]}
{*ast.ValueSpec [PC_INTERIORS INT 128]}
{*ast.GenDecl -> *ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [TC_OP_CHARACTER INT 1]}
{*ast.ValueSpec [TC_OP_STROKE INT 2]}
{*ast.ValueSpec [TC_CP_STROKE INT 4]}
{*ast.ValueSpec [TC_CR_90 INT 8]}
{*ast.ValueSpec [TC_CR_ANY INT 16]}
{*ast.ValueSpec [TC_SF_X_YINDEP INT 32]}
{*ast.ValueSpec [TC_SA_DOUBLE INT 64]}
{*ast.ValueSpec [TC_SA_INTEGER INT 128]}
{*ast.ValueSpec [TC_SA_CONTIN INT 256]}
{*ast.ValueSpec [TC_EA_DOUBLE INT 512]}
{*ast.ValueSpec [TC_IA_ABLE INT 1024]}
{*ast.ValueSpec [TC_UA_ABLE INT 2048]}
{*ast.ValueSpec [TC_SO_ABLE INT 4096]}
{*ast.ValueSpec [TC_RA_ABLE INT 8192]}
{*ast.ValueSpec [TC_VA_ABLE INT 16384]}
{*ast.ValueSpec [TC_RESERVED INT 32768]}
{*ast.ValueSpec [TC_SCROLLBLT INT 65536]}
{*ast.GenDecl -> *ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [BS_SOLID INT 0]}
{*ast.ValueSpec [BS_NULL INT 1]}
{*ast.ValueSpec [BS_HOLLOW BS_NULL]}
{*ast.ValueSpec [BS_HATCHED INT 2]}
{*ast.ValueSpec [BS_PATTERN INT 3]}
{*ast.ValueSpec [BS_INDEXED INT 4]}
{*ast.ValueSpec [BS_DIBPATTERN INT 5]}
{*ast.ValueSpec [BS_DIBPATTERNPT INT 6]}
{*ast.ValueSpec [BS_PATTERN8X8 INT 7]}
{*ast.ValueSpec [BS_DIBPATTERN8X8 INT 8]}
{*ast.ValueSpec [BS_MONOPATTERN INT 9]}
{*ast.GenDecl -> *ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [HS_HORIZONTAL INT 0]}
{*ast.ValueSpec [HS_VERTICAL INT 1]}
{*ast.ValueSpec [HS_FDIAGONAL INT 2]}
{*ast.ValueSpec [HS_BDIAGONAL INT 3]}
{*ast.ValueSpec [HS_CROSS INT 4]}
{*ast.ValueSpec [HS_DIAGCROSS INT 5]}
{*ast.GenDecl -> *ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [PS_COSMETIC INT 0x00000000]}
{*ast.ValueSpec [PS_GEOMETRIC INT 0x00010000]}
{*ast.ValueSpec [PS_TYPE_MASK INT 0x000F0000]}
{*ast.GenDecl -> *ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [PS_SOLID INT 0]}
{*ast.ValueSpec [PS_DASH INT 1]}
{*ast.ValueSpec [PS_DOT INT 2]}
{*ast.ValueSpec [PS_DASHDOT INT 3]}
{*ast.ValueSpec [PS_DASHDOTDOT INT 4]}
{*ast.ValueSpec [PS_NULL INT 5]}
{*ast.ValueSpec [PS_INSIDEFRAME INT 6]}
{*ast.ValueSpec [PS_USERSTYLE INT 7]}
{*ast.ValueSpec [PS_ALTERNATE INT 8]}
{*ast.ValueSpec [PS_STYLE_MASK INT 0x0000000F]}
{*ast.GenDecl -> *ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [PS_ENDCAP_ROUND INT 0x00000000]}
{*ast.ValueSpec [PS_ENDCAP_SQUARE INT 0x00000100]}
{*ast.ValueSpec [PS_ENDCAP_FLAT INT 0x00000200]}
{*ast.ValueSpec [PS_ENDCAP_MASK INT 0x00000F00]}
{*ast.GenDecl -> *ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [PS_JOIN_ROUND INT 0x00000000]}
{*ast.ValueSpec [PS_JOIN_BEVEL INT 0x00001000]}
{*ast.ValueSpec [PS_JOIN_MITER INT 0x00002000]}
{*ast.ValueSpec [PS_JOIN_MASK INT 0x0000F000]}
{*ast.GenDecl -> *ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [PRF_NONCLIENT INT 0x00000002]}
{*ast.ValueSpec [PRF_CLIENT INT 0x00000004]}
{*ast.ValueSpec [PRF_ERASEBKGND INT 0x00000008]}
{*ast.ValueSpec [PRF_CHILDREN INT 0x00000010]}
{*ast.ValueSpec [PRF_OWNED INT 0x00000020]}
{*ast.GenDecl -> *ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [WHITE_BRUSH INT 0]}
{*ast.ValueSpec [LTGRAY_BRUSH INT 1]}
{*ast.ValueSpec [GRAY_BRUSH INT 2]}
{*ast.ValueSpec [DKGRAY_BRUSH INT 3]}
{*ast.ValueSpec [BLACK_BRUSH INT 4]}
{*ast.ValueSpec [NULL_BRUSH INT 5]}
{*ast.ValueSpec [HOLLOW_BRUSH NULL_BRUSH]}
{*ast.ValueSpec [WHITE_PEN INT 6]}
{*ast.ValueSpec [BLACK_PEN INT 7]}
{*ast.ValueSpec [NULL_PEN INT 8]}
{*ast.ValueSpec [OEM_FIXED_FONT INT 10]}
{*ast.ValueSpec [ANSI_FIXED_FONT INT 11]}
{*ast.ValueSpec [ANSI_VAR_FONT INT 12]}
{*ast.ValueSpec [SYSTEM_FONT INT 13]}
{*ast.ValueSpec [DEVICE_DEFAULT_FONT INT 14]}
{*ast.ValueSpec [DEFAULT_PALETTE INT 15]}
{*ast.ValueSpec [SYSTEM_FIXED_FONT INT 16]}
{*ast.ValueSpec [DEFAULT_GUI_FONT INT 17]}
{*ast.ValueSpec [DC_BRUSH INT 18]}
{*ast.ValueSpec [DC_PEN INT 19]}
{*ast.GenDecl -> *ast.ValueSpec [LF_FACESIZE INT 32]}
{*ast.GenDecl -> *ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [FW_DONTCARE INT 0]}
{*ast.ValueSpec [FW_THIN INT 100]}
{*ast.ValueSpec [FW_EXTRALIGHT INT 200]}
{*ast.ValueSpec [FW_ULTRALIGHT FW_EXTRALIGHT]}
{*ast.ValueSpec [FW_LIGHT INT 300]}
{*ast.ValueSpec [FW_NORMAL INT 400]}
{*ast.ValueSpec [FW_REGULAR INT 400]}
{*ast.ValueSpec [FW_MEDIUM INT 500]}
{*ast.ValueSpec [FW_SEMIBOLD INT 600]}
{*ast.ValueSpec [FW_DEMIBOLD FW_SEMIBOLD]}
{*ast.ValueSpec [FW_BOLD INT 700]}
{*ast.ValueSpec [FW_EXTRABOLD INT 800]}
{*ast.ValueSpec [FW_ULTRABOLD FW_EXTRABOLD]}
{*ast.ValueSpec [FW_HEAVY INT 900]}
{*ast.ValueSpec [FW_BLACK FW_HEAVY]}
{*ast.GenDecl -> *ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [ANSI_CHARSET INT 0]}
{*ast.ValueSpec [DEFAULT_CHARSET INT 1]}
{*ast.ValueSpec [SYMBOL_CHARSET INT 2]}
{*ast.ValueSpec [SHIFTJIS_CHARSET INT 128]}
{*ast.ValueSpec [HANGEUL_CHARSET INT 129]}
{*ast.ValueSpec [HANGUL_CHARSET INT 129]}
{*ast.ValueSpec [GB2312_CHARSET INT 134]}
{*ast.ValueSpec [CHINESEBIG5_CHARSET INT 136]}
{*ast.ValueSpec [GREEK_CHARSET INT 161]}
{*ast.ValueSpec [TURKISH_CHARSET INT 162]}
{*ast.ValueSpec [HEBREW_CHARSET INT 177]}
{*ast.ValueSpec [ARABIC_CHARSET INT 178]}
{*ast.ValueSpec [BALTIC_CHARSET INT 186]}
{*ast.ValueSpec [RUSSIAN_CHARSET INT 204]}
{*ast.ValueSpec [THAI_CHARSET INT 222]}
{*ast.ValueSpec [EASTEUROPE_CHARSET INT 238]}
{*ast.ValueSpec [OEM_CHARSET INT 255]}
{*ast.ValueSpec [JOHAB_CHARSET INT 130]}
{*ast.ValueSpec [VIETNAMESE_CHARSET INT 163]}
{*ast.ValueSpec [MAC_CHARSET INT 77]}
{*ast.GenDecl -> *ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [OUT_DEFAULT_PRECIS INT 0]}
{*ast.ValueSpec [OUT_STRING_PRECIS INT 1]}
{*ast.ValueSpec [OUT_CHARACTER_PRECIS INT 2]}
{*ast.ValueSpec [OUT_STROKE_PRECIS INT 3]}
{*ast.ValueSpec [OUT_TT_PRECIS INT 4]}
{*ast.ValueSpec [OUT_DEVICE_PRECIS INT 5]}
{*ast.ValueSpec [OUT_RASTER_PRECIS INT 6]}
{*ast.ValueSpec [OUT_TT_ONLY_PRECIS INT 7]}
{*ast.ValueSpec [OUT_OUTLINE_PRECIS INT 8]}
{*ast.ValueSpec [OUT_PS_ONLY_PRECIS INT 10]}
{*ast.GenDecl -> *ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [CLIP_DEFAULT_PRECIS INT 0]}
{*ast.ValueSpec [CLIP_CHARACTER_PRECIS INT 1]}
{*ast.ValueSpec [CLIP_STROKE_PRECIS INT 2]}
{*ast.ValueSpec [CLIP_MASK INT 15]}
{*ast.ValueSpec [CLIP_LH_ANGLES INT 16]}
{*ast.ValueSpec [CLIP_TT_ALWAYS INT 32]}
{*ast.ValueSpec [CLIP_EMBEDDED INT 128]}
{*ast.GenDecl -> *ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DEFAULT_QUALITY INT 0]}
{*ast.ValueSpec [DRAFT_QUALITY INT 1]}
{*ast.ValueSpec [PROOF_QUALITY INT 2]}
{*ast.ValueSpec [NONANTIALIASED_QUALITY INT 3]}
{*ast.ValueSpec [ANTIALIASED_QUALITY INT 4]}
{*ast.ValueSpec [CLEARTYPE_QUALITY INT 5]}
{*ast.GenDecl -> *ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DEFAULT_PITCH INT 0]}
{*ast.ValueSpec [FIXED_PITCH INT 1]}
{*ast.ValueSpec [VARIABLE_PITCH INT 2]}
{*ast.GenDecl -> *ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [FF_DECORATIVE INT 80]}
{*ast.ValueSpec [FF_DONTCARE INT 0]}
{*ast.ValueSpec [FF_MODERN INT 48]}
{*ast.ValueSpec [FF_ROMAN INT 16]}
{*ast.ValueSpec [FF_SCRIPT INT 64]}
{*ast.ValueSpec [FF_SWISS INT 32]}
{*ast.GenDecl -> *ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DC_FIELDS INT 1]}
{*ast.ValueSpec [DC_PAPERS INT 2]}
{*ast.ValueSpec [DC_PAPERSIZE INT 3]}
{*ast.ValueSpec [DC_MINEXTENT INT 4]}
{*ast.ValueSpec [DC_MAXEXTENT INT 5]}
{*ast.ValueSpec [DC_BINS INT 6]}
{*ast.ValueSpec [DC_DUPLEX INT 7]}
{*ast.ValueSpec [DC_SIZE INT 8]}
{*ast.ValueSpec [DC_EXTRA INT 9]}
{*ast.ValueSpec [DC_VERSION INT 10]}
{*ast.ValueSpec [DC_DRIVER INT 11]}
{*ast.ValueSpec [DC_BINNAMES INT 12]}
{*ast.ValueSpec [DC_ENUMRESOLUTIONS INT 13]}
{*ast.ValueSpec [DC_FILEDEPENDENCIES INT 14]}
{*ast.ValueSpec [DC_TRUETYPE INT 15]}
{*ast.ValueSpec [DC_PAPERNAMES INT 16]}
{*ast.ValueSpec [DC_ORIENTATION INT 17]}
{*ast.ValueSpec [DC_COPIES INT 18]}
{*ast.ValueSpec [DC_BINADJUST INT 19]}
{*ast.ValueSpec [DC_EMF_COMPLIANT INT 20]}
{*ast.ValueSpec [DC_DATATYPE_PRODUCED INT 21]}
{*ast.ValueSpec [DC_COLLATE INT 22]}
{*ast.ValueSpec [DC_MANUFACTURER INT 23]}
{*ast.ValueSpec [DC_MODEL INT 24]}
{*ast.ValueSpec [DC_PERSONALITY INT 25]}
{*ast.ValueSpec [DC_PRINTRATE INT 26]}
{*ast.ValueSpec [DC_PRINTRATEUNIT INT 27]}
{*ast.ValueSpec [DC_PRINTERMEM INT 28]}
{*ast.ValueSpec [DC_MEDIAREADY INT 29]}
{*ast.ValueSpec [DC_STAPLE INT 30]}
{*ast.ValueSpec [DC_PRINTRATEPPM INT 31]}
{*ast.ValueSpec [DC_COLORDEVICE INT 32]}
{*ast.ValueSpec [DC_NUP INT 33]}
{*ast.ValueSpec [DC_MEDIATYPENAMES INT 34]}
{*ast.ValueSpec [DC_MEDIATYPES INT 35]}
{*ast.GenDecl -> *ast.ValueSpec [CCHDEVICENAME INT 32]}
{*ast.ValueSpec [CCHFORMNAME INT 32]}
{*ast.GenDecl -> *ast.ValueSpec [DM_UPDATE INT 1]}
{*ast.ValueSpec [DM_COPY INT 2]}
{*ast.ValueSpec [DM_PROMPT INT 4]}
{*ast.ValueSpec [DM_MODIFY INT 8]}
{*ast.ValueSpec [DM_IN_BUFFER DM_MODIFY]}
{*ast.ValueSpec [DM_IN_PROMPT DM_PROMPT]}
{*ast.ValueSpec [DM_OUT_BUFFER DM_COPY]}
{*ast.ValueSpec [DM_OUT_DEFAULT DM_UPDATE]}
{*ast.GenDecl -> *ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DM_ORIENTATION INT 0x00000001]}
{*ast.ValueSpec [DM_PAPERSIZE INT 0x00000002]}
{*ast.ValueSpec [DM_PAPERLENGTH INT 0x00000004]}
{*ast.ValueSpec [DM_PAPERWIDTH INT 0x00000008]}
{*ast.ValueSpec [DM_SCALE INT 0x00000010]}
{*ast.ValueSpec [DM_POSITION INT 0x00000020]}
{*ast.ValueSpec [DM_NUP INT 0x00000040]}
{*ast.ValueSpec [DM_DISPLAYORIENTATION INT 0x00000080]}
{*ast.ValueSpec [DM_COPIES INT 0x00000100]}
{*ast.ValueSpec [DM_DEFAULTSOURCE INT 0x00000200]}
{*ast.ValueSpec [DM_PRINTQUALITY INT 0x00000400]}
{*ast.ValueSpec [DM_COLOR INT 0x00000800]}
{*ast.ValueSpec [DM_DUPLEX INT 0x00001000]}
{*ast.ValueSpec [DM_YRESOLUTION INT 0x00002000]}
{*ast.ValueSpec [DM_TTOPTION INT 0x00004000]}
{*ast.ValueSpec [DM_COLLATE INT 0x00008000]}
{*ast.ValueSpec [DM_FORMNAME INT 0x00010000]}
{*ast.ValueSpec [DM_LOGPIXELS INT 0x00020000]}
{*ast.ValueSpec [DM_BITSPERPEL INT 0x00040000]}
{*ast.ValueSpec [DM_PELSWIDTH INT 0x00080000]}
{*ast.ValueSpec [DM_PELSHEIGHT INT 0x00100000]}
{*ast.ValueSpec [DM_DISPLAYFLAGS INT 0x00200000]}
{*ast.ValueSpec [DM_DISPLAYFREQUENCY INT 0x00400000]}
{*ast.ValueSpec [DM_ICMMETHOD INT 0x00800000]}
{*ast.ValueSpec [DM_ICMINTENT INT 0x01000000]}
{*ast.ValueSpec [DM_MEDIATYPE INT 0x02000000]}
{*ast.ValueSpec [DM_DITHERTYPE INT 0x04000000]}
{*ast.ValueSpec [DM_PANNINGWIDTH INT 0x08000000]}
{*ast.ValueSpec [DM_PANNINGHEIGHT INT 0x10000000]}
{*ast.ValueSpec [DM_DISPLAYFIXEDOUTPUT INT 0x20000000]}
{*ast.GenDecl -> *ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMORIENT_PORTRAIT INT 1]}
{*ast.ValueSpec [DMORIENT_LANDSCAPE INT 2]}
{*ast.GenDecl -> *ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_FIRST DMPAPER_LETTER]}
{*ast.ValueSpec [DMPAPER_LETTER INT 1]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_LETTERSMALL INT 2]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_TABLOID INT 3]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_LEDGER INT 4]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_LEGAL INT 5]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_STATEMENT INT 6]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_EXECUTIVE INT 7]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_A3 INT 8]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_A4 INT 9]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_A4SMALL INT 10]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_A5 INT 11]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_B4 INT 12]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_B5 INT 13]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_FOLIO INT 14]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_QUARTO INT 15]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_10X14 INT 16]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_11X17 INT 17]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_NOTE INT 18]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_ENV_9 INT 19]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_ENV_10 INT 20]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_ENV_11 INT 21]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_ENV_12 INT 22]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_ENV_14 INT 23]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_CSHEET INT 24]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_DSHEET INT 25]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_ESHEET INT 26]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_ENV_DL INT 27]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_ENV_C5 INT 28]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_ENV_C3 INT 29]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_ENV_C4 INT 30]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_ENV_C6 INT 31]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_ENV_C65 INT 32]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_ENV_B4 INT 33]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_ENV_B5 INT 34]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_ENV_B6 INT 35]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_ENV_ITALY INT 36]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_ENV_MONARCH INT 37]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_ENV_PERSONAL INT 38]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_FANFOLD_US INT 39]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_FANFOLD_STD_GERMAN INT 40]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_FANFOLD_LGL_GERMAN INT 41]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_ISO_B4 INT 42]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_JAPANESE_POSTCARD INT 43]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_9X11 INT 44]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_10X11 INT 45]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_15X11 INT 46]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_ENV_INVITE INT 47]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_RESERVED_48 INT 48]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_RESERVED_49 INT 49]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_LETTER_EXTRA INT 50]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_LEGAL_EXTRA INT 51]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_TABLOID_EXTRA INT 52]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_A4_EXTRA INT 53]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_LETTER_TRANSVERSE INT 54]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_A4_TRANSVERSE INT 55]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_LETTER_EXTRA_TRANSVERSE INT 56]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_A_PLUS INT 57]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_B_PLUS INT 58]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_LETTER_PLUS INT 59]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_A4_PLUS INT 60]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_A5_TRANSVERSE INT 61]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_B5_TRANSVERSE INT 62]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_A3_EXTRA INT 63]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_A5_EXTRA INT 64]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_B5_EXTRA INT 65]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_A2 INT 66]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_A3_TRANSVERSE INT 67]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_A3_EXTRA_TRANSVERSE INT 68]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_DBL_JAPANESE_POSTCARD INT 69]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_A6 INT 70]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_JENV_KAKU2 INT 71]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_JENV_KAKU3 INT 72]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_JENV_CHOU3 INT 73]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_JENV_CHOU4 INT 74]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_LETTER_ROTATED INT 75]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_A3_ROTATED INT 76]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_A4_ROTATED INT 77]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_A5_ROTATED INT 78]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_B4_JIS_ROTATED INT 79]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_B5_JIS_ROTATED INT 80]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_JAPANESE_POSTCARD_ROTATED INT 81]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_DBL_JAPANESE_POSTCARD_ROTATED INT 82]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_A6_ROTATED INT 83]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_JENV_KAKU2_ROTATED INT 84]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_JENV_KAKU3_ROTATED INT 85]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_JENV_CHOU3_ROTATED INT 86]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_JENV_CHOU4_ROTATED INT 87]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_B6_JIS INT 88]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_B6_JIS_ROTATED INT 89]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_12X11 INT 90]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_JENV_YOU4 INT 91]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_JENV_YOU4_ROTATED INT 92]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_P16K INT 93]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_P32K INT 94]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_P32KBIG INT 95]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_PENV_1 INT 96]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_PENV_2 INT 97]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_PENV_3 INT 98]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_PENV_4 INT 99]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_PENV_5 INT 100]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_PENV_6 INT 101]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_PENV_7 INT 102]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_PENV_8 INT 103]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_PENV_9 INT 104]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_PENV_10 INT 105]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_P16K_ROTATED INT 106]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_P32K_ROTATED INT 107]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_P32KBIG_ROTATED INT 108]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_PENV_1_ROTATED INT 109]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_PENV_2_ROTATED INT 110]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_PENV_3_ROTATED INT 111]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_PENV_4_ROTATED INT 112]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_PENV_5_ROTATED INT 113]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_PENV_6_ROTATED INT 114]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_PENV_7_ROTATED INT 115]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_PENV_8_ROTATED INT 116]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_PENV_9_ROTATED INT 117]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_PENV_10_ROTATED INT 118]}
{*ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMPAPER_LAST DMPAPER_PENV_10_ROTATED]}
{*ast.ValueSpec [DMPAPER_USER INT 256]}
{*ast.GenDecl -> *ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMBIN_FIRST DMBIN_UPPER]}
{*ast.ValueSpec [DMBIN_UPPER INT 1]}
{*ast.ValueSpec [DMBIN_ONLYONE INT 1]}
{*ast.ValueSpec [DMBIN_LOWER INT 2]}
{*ast.ValueSpec [DMBIN_MIDDLE INT 3]}
{*ast.ValueSpec [DMBIN_MANUAL INT 4]}
{*ast.ValueSpec [DMBIN_ENVELOPE INT 5]}
{*ast.ValueSpec [DMBIN_ENVMANUAL INT 6]}
{*ast.ValueSpec [DMBIN_AUTO INT 7]}
{*ast.ValueSpec [DMBIN_TRACTOR INT 8]}
{*ast.ValueSpec [DMBIN_SMALLFMT INT 9]}
{*ast.ValueSpec [DMBIN_LARGEFMT INT 10]}
{*ast.ValueSpec [DMBIN_LARGECAPACITY INT 11]}
{*ast.ValueSpec [DMBIN_CASSETTE INT 14]}
{*ast.ValueSpec [DMBIN_FORMSOURCE INT 15]}
{*ast.ValueSpec [DMBIN_LAST DMBIN_FORMSOURCE]}
{*ast.ValueSpec [DMBIN_USER INT 256]}
{*ast.GenDecl -> *ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMRES_DRAFT]}
{*ast.UnaryExpr [INT 1]}
{*ast.ValueSpec [DMRES_LOW]}
{*ast.UnaryExpr [INT 2]}
{*ast.ValueSpec [DMRES_MEDIUM]}
{*ast.UnaryExpr [INT 3]}
{*ast.ValueSpec [DMRES_HIGH]}
{*ast.UnaryExpr [INT 4]}
{*ast.GenDecl -> *ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMCOLOR_MONOCHROME INT 1]}
{*ast.ValueSpec [DMCOLOR_COLOR INT 2]}
{*ast.GenDecl -> *ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMDUP_SIMPLEX INT 1]}
{*ast.ValueSpec [DMDUP_VERTICAL INT 2]}
{*ast.ValueSpec [DMDUP_HORIZONTAL INT 3]}
{*ast.GenDecl -> *ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMTT_BITMAP INT 1]}
{*ast.ValueSpec [DMTT_DOWNLOAD INT 2]}
{*ast.ValueSpec [DMTT_SUBDEV INT 3]}
{*ast.ValueSpec [DMTT_DOWNLOAD_OUTLINE INT 4]}
{*ast.GenDecl -> *ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DMCOLLATE_FALSE INT 0]}
{*ast.ValueSpec [DMCOLLATE_TRUE INT 1]}
{*ast.GenDecl -> *ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [TRANSPARENT INT 1]}
{*ast.ValueSpec [OPAQUE INT 2]}
{*ast.GenDecl -> *ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [SRCCOPY INT 0x00CC0020]}
{*ast.ValueSpec [SRCPAINT INT 0x00EE0086]}
{*ast.ValueSpec [SRCAND INT 0x008800C6]}
{*ast.ValueSpec [SRCINVERT INT 0x00660046]}
{*ast.ValueSpec [SRCERASE INT 0x00440328]}
{*ast.ValueSpec [NOTSRCCOPY INT 0x00330008]}
{*ast.ValueSpec [NOTSRCERASE INT 0x001100A6]}
{*ast.ValueSpec [MERGECOPY INT 0x00C000CA]}
{*ast.ValueSpec [MERGEPAINT INT 0x00BB0226]}
{*ast.ValueSpec [PATCOPY INT 0x00F00021]}
{*ast.ValueSpec [PATPAINT INT 0x00FB0A09]}
{*ast.ValueSpec [PATINVERT INT 0x005A0049]}
{*ast.ValueSpec [DSTINVERT INT 0x00550009]}
{*ast.ValueSpec [BLACKNESS INT 0x00000042]}
{*ast.ValueSpec [WHITENESS INT 0x00FF0062]}
{*ast.ValueSpec [NOMIRRORBITMAP INT 0x80000000]}
{*ast.ValueSpec [CAPTUREBLT INT 0x40000000]}
{*ast.GenDecl -> *ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [BLACKONWHITE INT 1]}
{*ast.ValueSpec [WHITEONBLACK INT 2]}
{*ast.ValueSpec [COLORONCOLOR INT 3]}
{*ast.ValueSpec [HALFTONE INT 4]}
{*ast.ValueSpec [MAXSTRETCHBLTMODE INT 4]}
{*ast.ValueSpec [STRETCH_ANDSCANS BLACKONWHITE]}
{*ast.ValueSpec [STRETCH_ORSCANS WHITEONBLACK]}
{*ast.ValueSpec [STRETCH_DELETESCANS COLORONCOLOR]}
{*ast.ValueSpec [STRETCH_HALFTONE HALFTONE]}
{*ast.GenDecl -> *ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [BI_RGB INT 0]}
{*ast.ValueSpec [BI_RLE8 INT 1]}
{*ast.ValueSpec [BI_RLE4 INT 2]}
{*ast.ValueSpec [BI_BITFIELDS INT 3]}
{*ast.ValueSpec [BI_JPEG INT 4]}
{*ast.ValueSpec [BI_PNG INT 5]}
{*ast.GenDecl -> *ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [DIB_RGB_COLORS INT 0]}
{*ast.ValueSpec [DIB_PAL_COLORS INT 1]}
{*ast.GenDecl -> *ast.ValueSpec [CBM_INIT INT 4]}
{*ast.GenDecl -> *ast.ValueSpec [CLR_INVALID INT 0xFFFFFFFF]}
{*ast.ValueSpec [CLR_NONE CLR_INVALID]}
{*ast.ValueSpec [CLR_DEFAULT INT 0xFF000000]}
{*ast.GenDecl -> *ast.ValueSpec -> *ast.CommentGroup -> *ast.Comment [PFD_TYPE_RGBA INT 0]}
{*ast.ValueSpec [PFD_TYPE_COLORINDEX INT 1]}
{*ast.ValueSpec -> *ast.CommentGroup -> *ast.Comment [PFD_MAIN_PLANE INT 0]}
{*ast.ValueSpec [PFD_OVERLAY_PLANE INT 1]}
{*ast.ValueSpec [PFD_UNDERLAY_PLANE]}
{*ast.ParenExpr -> *ast.UnaryExpr [INT 1]}
{*ast.ValueSpec -> *ast.CommentGroup -> *ast.Comment [PFD_DOUBLEBUFFER INT 0x00000001]}
{*ast.ValueSpec [PFD_STEREO INT 0x00000002]}
{*ast.ValueSpec [PFD_DRAW_TO_WINDOW INT 0x00000004]}
{*ast.ValueSpec [PFD_DRAW_TO_BITMAP INT 0x00000008]}
{*ast.ValueSpec [PFD_SUPPORT_GDI INT 0x00000010]}
{*ast.ValueSpec [PFD_SUPPORT_OPENGL INT 0x00000020]}
{*ast.ValueSpec [PFD_GENERIC_FORMAT INT 0x00000040]}
{*ast.ValueSpec [PFD_NEED_PALETTE INT 0x00000080]}
{*ast.ValueSpec [PFD_NEED_SYSTEM_PALETTE INT 0x00000100]}
{*ast.ValueSpec [PFD_SWAP_EXCHANGE INT 0x00000200]}
{*ast.ValueSpec [PFD_SWAP_COPY INT 0x00000400]}
{*ast.ValueSpec [PFD_SWAP_LAYER_BUFFERS INT 0x00000800]}
{*ast.ValueSpec [PFD_GENERIC_ACCELERATED INT 0x00001000]}
{*ast.ValueSpec [PFD_SUPPORT_DIRECTDRAW INT 0x00002000]}
{*ast.ValueSpec -> *ast.CommentGroup -> *ast.Comment [PFD_DEPTH_DONTCARE INT 0x20000000]}
{*ast.ValueSpec [PFD_DOUBLEBUFFER_DONTCARE INT 0x40000000]}
{*ast.ValueSpec [PFD_STEREO_DONTCARE INT 0x80000000]}
{*ast.GenDecl -> *ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [GRADIENT_FILL_RECT_H INT 0x00]}
{*ast.ValueSpec [GRADIENT_FILL_RECT_V INT 0x01]}
{*ast.ValueSpec [GRADIENT_FILL_TRIANGLE INT 0x02]}
{*ast.GenDecl -> *ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [RGN_AND INT 1]}
{*ast.ValueSpec [RGN_OR INT 2]}
{*ast.ValueSpec [RGN_XOR INT 3]}
{*ast.ValueSpec [RGN_DIFF INT 4]}
{*ast.ValueSpec [RGN_COPY INT 5]}
{*ast.GenDecl -> *ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [REGIONERROR INT 0]}
{*ast.ValueSpec [NULLREGION INT 1]}
{*ast.ValueSpec [SIMPLEREGION INT 2]}
{*ast.ValueSpec [COMPLEXREGION INT 3]}
{*ast.GenDecl -> *ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [AC_SRC_ALPHA INT 0x1]}
{*ast.GenDecl -> *ast.CommentGroup -> *ast.Comment -> *ast.ValueSpec [FR_PRIVATE INT 0x10]}
{*ast.ValueSpec [FR_NOT_ENUM INT 0x20]}


function name is RGB 
	 { [RGB]}
	 {*ast.FuncType -> *ast.FieldList -> *ast.Field [r g b byte]}
	 {*ast.FieldList -> *ast.Field [COLORREF]}
	 {*ast.BlockStmt -> *ast.ReturnStmt -> *ast.BinaryExpr -> *ast.BinaryExpr -> *ast.CallExpr [COLORREF r]}
	 {*ast.ParenExpr -> *ast.BinaryExpr -> *ast.CallExpr [COLORREF g INT 8]}
	 {*ast.ParenExpr -> *ast.BinaryExpr -> *ast.CallExpr [COLORREF b INT 16]}
	 {*ast.GenDecl -> *ast.TypeSpec [COLORREF uint32]}
	 {*ast.TypeSpec [HBITMAP HGDIOBJ]}
	 {*ast.TypeSpec [HBRUSH HGDIOBJ]}
	 {*ast.TypeSpec [HDC HANDLE]}
	 {*ast.TypeSpec [HFONT HGDIOBJ]}
	 {*ast.TypeSpec [HGDIOBJ HANDLE]}
	 {*ast.TypeSpec [HENHMETAFILE HANDLE]}
	 {*ast.TypeSpec [HPALETTE HGDIOBJ]}
	 {*ast.TypeSpec [HPEN HGDIOBJ]}
	 {*ast.TypeSpec [HRGN HGDIOBJ]}
	 {*ast.TypeSpec [CLIPFORMAT uint16]}
	 {*ast.GenDecl -> *ast.TypeSpec [PIXELFORMATDESCRIPTOR]}
	 {*ast.StructType -> *ast.FieldList -> *ast.Field [NSize uint16]}
	 {*ast.Field [NVersion uint16]}
	 {*ast.Field [DwFlags uint32]}
	 {*ast.Field [IPixelType byte]}
	 {*ast.Field [CColorBits byte]}
	 {*ast.Field [CRedBits byte]}
	 {*ast.Field [CRedShift byte]}
	 {*ast.Field [CGreenBits byte]}
	 {*ast.Field [CGreenShift byte]}
	 {*ast.Field [CBlueBits byte]}
	 {*ast.Field [CBlueShift byte]}
	 {*ast.Field [CAlphaBits byte]}
	 {*ast.Field [CAlphaShift byte]}
	 {*ast.Field [CAccumBits byte]}
	 {*ast.Field [CAccumRedBits byte]}
	 {*ast.Field [CAccumGreenBits byte]}
	 {*ast.Field [CAccumBlueBits byte]}
	 {*ast.Field [CAccumAlphaBits byte]}
	 {*ast.Field [CDepthBits byte]}
	 {*ast.Field [CStencilBits byte]}
	 {*ast.Field [CAuxBuffers byte]}
	 {*ast.Field [ILayerType byte]}
	 {*ast.Field [BReserved byte]}
	 {*ast.Field [DwLayerMask uint32]}
	 {*ast.Field [DwVisibleMask uint32]}
	 {*ast.Field [DwDamageMask uint32]}
	 {*ast.GenDecl -> *ast.TypeSpec [LOGFONT]}
	 {*ast.StructType -> *ast.FieldList -> *ast.Field [LfHeight int32]}
	 {*ast.Field [LfWidth int32]}
	 {*ast.Field [LfEscapement int32]}
	 {*ast.Field [LfOrientation int32]}
	 {*ast.Field [LfWeight int32]}
	 {*ast.Field [LfItalic byte]}
	 {*ast.Field [LfUnderline byte]}
	 {*ast.Field [LfStrikeOut byte]}
	 {*ast.Field [LfCharSet byte]}
	 {*ast.Field [LfOutPrecision byte]}
	 {*ast.Field [LfClipPrecision byte]}
	 {*ast.Field [LfQuality byte]}
	 {*ast.Field [LfPitchAndFamily byte]}
	 {*ast.Field [LfFaceName]}
	 {*ast.ArrayType [LF_FACESIZE uint16]}
	 {*ast.GenDecl -> *ast.TypeSpec [TEXTMETRIC]}
	 {*ast.StructType -> *ast.FieldList -> *ast.Field [TmHeight int32]}
	 {*ast.Field [TmAscent int32]}
	 {*ast.Field [TmDescent int32]}
	 {*ast.Field [TmInternalLeading int32]}
	 {*ast.Field [TmExternalLeading int32]}
	 {*ast.Field [TmAveCharWidth int32]}
	 {*ast.Field [TmMaxCharWidth int32]}
	 {*ast.Field [TmWeight int32]}
	 {*ast.Field [TmOverhang int32]}
	 {*ast.Field [TmDigitizedAspectX int32]}
	 {*ast.Field [TmDigitizedAspectY int32]}
	 {*ast.Field [TmFirstChar uint16]}
	 {*ast.Field [TmLastChar uint16]}
	 {*ast.Field [TmDefaultChar uint16]}
	 {*ast.Field [TmBreakChar uint16]}
	 {*ast.Field [TmItalic byte]}
	 {*ast.Field [TmUnderlined byte]}
	 {*ast.Field [TmStruckOut byte]}
	 {*ast.Field [TmPitchAndFamily byte]}
	 {*ast.Field [TmCharSet byte]}
	 {*ast.GenDecl -> *ast.TypeSpec [DEVMODE]}
	 {*ast.StructType -> *ast.FieldList -> *ast.Field [DmDeviceName]}
	 {*ast.ArrayType [CCHDEVICENAME uint16]}
	 {*ast.Field [DmSpecVersion uint16]}
	 {*ast.Field [DmDriverVersion uint16]}
	 {*ast.Field [DmSize uint16]}
	 {*ast.Field [DmDriverExtra uint16]}
	 {*ast.Field [DmFields uint32]}
	 {*ast.Field [DmOrientation int16]}
	 {*ast.Field [DmPaperSize int16]}
	 {*ast.Field [DmPaperLength int16]}
	 {*ast.Field [DmPaperWidth int16]}
	 {*ast.Field [DmScale int16]}
	 {*ast.Field [DmCopies int16]}
	 {*ast.Field [DmDefaultSource int16]}
	 {*ast.Field [DmPrintQuality int16]}
	 {*ast.Field [DmColor int16]}
	 {*ast.Field [DmDuplex int16]}
	 {*ast.Field [DmYResolution int16]}
	 {*ast.Field [DmTTOption int16]}
	 {*ast.Field [DmCollate int16]}
	 {*ast.Field [DmFormName]}
	 {*ast.ArrayType [CCHFORMNAME uint16]}
	 {*ast.Field [DmLogPixels uint16]}
	 {*ast.Field [DmBitsPerPel uint32]}
	 {*ast.Field [DmPelsWidth uint32]}
	 {*ast.Field [DmPelsHeight uint32]}
	 {*ast.Field [DmDisplayFlags uint32]}
	 {*ast.Field [DmDisplayFrequency uint32]}
	 {*ast.Field [DmICMMethod uint32]}
	 {*ast.Field [DmICMIntent uint32]}
	 {*ast.Field [DmMediaType uint32]}
	 {*ast.Field [DmDitherType uint32]}
	 {*ast.Field [DmReserved1 uint32]}
	 {*ast.Field [DmReserved2 uint32]}
	 {*ast.Field [DmPanningWidth uint32]}
	 {*ast.Field [DmPanningHeight uint32]}
	 {*ast.GenDecl -> *ast.TypeSpec [POINT]}
	 {*ast.StructType -> *ast.FieldList -> *ast.Field [X Y int32]}
	 {*ast.GenDecl -> *ast.TypeSpec [RECT]}
	 {*ast.StructType -> *ast.FieldList -> *ast.Field [Left Top Right Bottom int32]}
	 {*ast.GenDecl -> *ast.TypeSpec [SIZE]}
	 {*ast.StructType -> *ast.FieldList -> *ast.Field [CX CY int32]}
	 {*ast.GenDecl -> *ast.TypeSpec [DOCINFO]}
	 {*ast.StructType -> *ast.FieldList -> *ast.Field [CbSize int32]}
	 {*ast.Field [LpszDocName]}
	 {*ast.StarExpr [uint16]}
	 {*ast.Field [LpszOutput]}
	 {*ast.StarExpr [uint16]}
	 {*ast.Field [LpszDatatype]}
	 {*ast.StarExpr [uint16]}
	 {*ast.Field [FwType uint32]}
	 {*ast.GenDecl -> *ast.TypeSpec [LOGBRUSH]}
	 {*ast.StructType -> *ast.FieldList -> *ast.Field [LbStyle uint32]}
	 {*ast.Field [LbColor COLORREF]}
	 {*ast.Field [LbHatch uintptr]}
	 {*ast.GenDecl -> *ast.TypeSpec [CIEXYZ]}
	 {*ast.StructType -> *ast.FieldList -> *ast.Field [CiexyzX CiexyzY CiexyzZ int32]}
	 {*ast.CommentGroup -> *ast.Comment -> *ast.GenDecl -> *ast.TypeSpec [CIEXYZTRIPLE]}
	 {*ast.StructType -> *ast.FieldList -> *ast.Field [CiexyzRed CiexyzGreen CiexyzBlue CIEXYZ]}
	 {*ast.GenDecl -> *ast.TypeSpec [BITMAPINFOHEADER]}
	 {*ast.StructType -> *ast.FieldList -> *ast.Field [BiSize uint32]}
	 {*ast.Field [BiWidth int32]}
	 {*ast.Field [BiHeight int32]}
	 {*ast.Field [BiPlanes uint16]}
	 {*ast.Field [BiBitCount uint16]}
	 {*ast.Field [BiCompression uint32]}
	 {*ast.Field [BiSizeImage uint32]}
	 {*ast.Field [BiXPelsPerMeter int32]}
	 {*ast.Field [BiYPelsPerMeter int32]}
	 {*ast.Field [BiClrUsed uint32]}
	 {*ast.Field [BiClrImportant uint32]}
	 {*ast.GenDecl -> *ast.TypeSpec [BITMAPV4HEADER]}
	 {*ast.StructType -> *ast.FieldList -> *ast.Field [BITMAPINFOHEADER]}
	 {*ast.Field [BV4RedMask uint32]}
	 {*ast.Field [BV4GreenMask uint32]}
	 {*ast.Field [BV4BlueMask uint32]}
	 {*ast.Field [BV4AlphaMask uint32]}
	 {*ast.Field [BV4CSType uint32]}
	 {*ast.Field [BV4Endpoints CIEXYZTRIPLE]}
	 {*ast.Field [BV4GammaRed uint32]}
	 {*ast.Field [BV4GammaGreen uint32]}
	 {*ast.Field [BV4GammaBlue uint32]}
	 {*ast.GenDecl -> *ast.TypeSpec [BITMAPV5HEADER]}
	 {*ast.StructType -> *ast.FieldList -> *ast.Field [BITMAPV4HEADER]}
	 {*ast.Field [BV5Intent uint32]}
	 {*ast.Field [BV5ProfileData uint32]}
	 {*ast.Field [BV5ProfileSize uint32]}
	 {*ast.Field [BV5Reserved uint32]}
	 {*ast.GenDecl -> *ast.TypeSpec [RGBQUAD]}
	 {*ast.StructType -> *ast.FieldList -> *ast.Field [RgbBlue byte]}
	 {*ast.Field [RgbGreen byte]}
	 {*ast.Field [RgbRed byte]}
	 {*ast.Field [RgbReserved byte]}
	 {*ast.GenDecl -> *ast.TypeSpec [BITMAPINFO]}
	 {*ast.StructType -> *ast.FieldList -> *ast.Field [BmiHeader BITMAPINFOHEADER]}
	 {*ast.Field [BmiColors]}
	 {*ast.StarExpr [RGBQUAD]}
	 {*ast.GenDecl -> *ast.TypeSpec [BITMAP]}
	 {*ast.StructType -> *ast.FieldList -> *ast.Field [BmType int32]}
	 {*ast.Field [BmWidth int32]}
	 {*ast.Field [BmHeight int32]}
	 {*ast.Field [BmWidthBytes int32]}
	 {*ast.Field [BmPlanes uint16]}
	 {*ast.Field [BmBitsPixel uint16]}
	 {*ast.Field -> *ast.SelectorExpr [BmBits unsafe Pointer]}
	 {*ast.GenDecl -> *ast.TypeSpec [DIBSECTION]}
	 {*ast.StructType -> *ast.FieldList -> *ast.Field [DsBm BITMAP]}
	 {*ast.Field [DsBmih BITMAPINFOHEADER]}
	 {*ast.Field [DsBitfields]}
	 {*ast.ArrayType [INT 3 uint32]}
	 {*ast.Field [DshSection HANDLE]}
	 {*ast.Field [DsOffset uint32]}
	 {*ast.GenDecl -> *ast.TypeSpec [ENHMETAHEADER]}
	 {*ast.StructType -> *ast.FieldList -> *ast.Field [IType uint32]}
	 {*ast.Field [NSize uint32]}
	 {*ast.Field [RclBounds RECT]}
	 {*ast.Field [RclFrame RECT]}
	 {*ast.Field [DSignature uint32]}
	 {*ast.Field [NVersion uint32]}
	 {*ast.Field [NBytes uint32]}
	 {*ast.Field [NRecords uint32]}
	 {*ast.Field [NHandles uint16]}
	 {*ast.Field [SReserved uint16]}
	 {*ast.Field [NDescription uint32]}
	 {*ast.Field [OffDescription uint32]}
	 {*ast.Field [NPalEntries uint32]}
	 {*ast.Field [SzlDevice SIZE]}
	 {*ast.Field [SzlMillimeters SIZE]}
	 {*ast.Field [CbPixelFormat uint32]}
	 {*ast.Field [OffPixelFormat uint32]}
	 {*ast.Field [BOpenGL uint32]}
	 {*ast.Field [SzlMicrometers SIZE]}
	 {*ast.GenDecl -> *ast.TypeSpec [TRIVERTEX]}
	 {*ast.StructType -> *ast.FieldList -> *ast.Field [X int32]}
	 {*ast.Field [Y int32]}
	 {*ast.Field [Red uint16]}
	 {*ast.Field [Green uint16]}
	 {*ast.Field [Blue uint16]}
	 {*ast.Field [Alpha uint16]}
	 {*ast.GenDecl -> *ast.TypeSpec [GRADIENT_RECT]}
	 {*ast.StructType -> *ast.FieldList -> *ast.Field [UpperLeft uint32]}
	 {*ast.Field [LowerRight uint32]}
	 {*ast.GenDecl -> *ast.TypeSpec [GRADIENT_TRIANGLE]}
	 {*ast.StructType -> *ast.FieldList -> *ast.Field [Vertex1 uint32]}
	 {*ast.Field [Vertex2 uint32]}
	 {*ast.Field [Vertex3 uint32]}
	 {*ast.GenDecl -> *ast.TypeSpec [BLENDFUNCTION]}
	 {*ast.StructType -> *ast.FieldList -> *ast.Field [BlendOp byte]}
	 {*ast.Field [BlendFlags byte]}
	 {*ast.Field [SourceConstantAlpha byte]}
	 {*ast.Field [AlphaFormat byte]}
	 {*ast.GenDecl -> *ast.ValueSpec -> *ast.CommentGroup -> *ast.Comment [libgdi32]}
	 {*ast.StarExpr -> *ast.SelectorExpr [windows LazyDLL]}
	 {*ast.ValueSpec [libmsimg32]}
	 {*ast.StarExpr -> *ast.SelectorExpr [windows LazyDLL]}
	 {*ast.ValueSpec -> *ast.CommentGroup -> *ast.Comment [abortDoc]}
	 {*ast.StarExpr -> *ast.SelectorExpr [windows LazyProc]}
	 {*ast.ValueSpec [addFontResourceEx]}
	 {*ast.StarExpr -> *ast.SelectorExpr [windows LazyProc]}
	 {*ast.ValueSpec [addFontMemResourceEx]}
	 {*ast.StarExpr -> *ast.SelectorExpr [windows LazyProc]}
	 {*ast.ValueSpec [alphaBlend]}
	 {*ast.StarExpr -> *ast.SelectorExpr [windows LazyProc]}
	 {*ast.ValueSpec [bitBlt]}
	 {*ast.StarExpr -> *ast.SelectorExpr [windows LazyProc]}
	 {*ast.ValueSpec [choosePixelFormat]}
	 {*ast.StarExpr -> *ast.SelectorExpr [windows LazyProc]}
	 {*ast.ValueSpec [closeEnhMetaFile]}
	 {*ast.StarExpr -> *ast.SelectorExpr [windows LazyProc]}
	 {*ast.ValueSpec [combineRgn]}
	 {*ast.StarExpr -> *ast.SelectorExpr [windows LazyProc]}
	 {*ast.ValueSpec [copyEnhMetaFile]}
	 {*ast.StarExpr -> *ast.SelectorExpr [windows LazyProc]}
	 {*ast.ValueSpec [createBitmap]}
	 {*ast.StarExpr -> *ast.SelectorExpr [windows LazyProc]}
	 {*ast.ValueSpec [createCompatibleBitmap]}
	 {*ast.StarExpr -> *ast.SelectorExpr [windows LazyProc]}
	 {*ast.ValueSpec [createBrushIndirect]}
	 {*ast.StarExpr -> *ast.SelectorExpr [windows LazyProc]}
	 {*ast.ValueSpec [createCompatibleDC]}
	 {*ast.StarExpr -> *ast.SelectorExpr [windows LazyProc]}
	 {*ast.ValueSpec [createDC]}
	 {*ast.StarExpr -> *ast.SelectorExpr [windows LazyProc]}
	 {*ast.ValueSpec [createDIBSection]}
	 {*ast.StarExpr -> *ast.SelectorExpr [windows LazyProc]}
	 {*ast.ValueSpec [createFontIndirect]}
	 {*ast.StarExpr -> *ast.SelectorExpr [windows LazyProc]}
	 {*ast.ValueSpec [createEnhMetaFile]}
	 {*ast.StarExpr -> *ast.SelectorExpr [windows LazyProc]}
	 {*ast.ValueSpec [createIC]}
	 {*ast.StarExpr -> *ast.SelectorExpr [windows LazyProc]}
	 {*ast.ValueSpec [createPatternBrush]}
	 {*ast.StarExpr -> *ast.SelectorExpr [windows LazyProc]}
	 {*ast.ValueSpec [createRectRgn]}
	 {*ast.StarExpr -> *ast.SelectorExpr [windows LazyProc]}
	 {*ast.ValueSpec [deleteDC]}
	 {*ast.StarExpr -> *ast.SelectorExpr [windows LazyProc]}
	 {*ast.ValueSpec [deleteEnhMetaFile]}
	 {*ast.StarExpr -> *ast.SelectorExpr [windows LazyProc]}
	 {*ast.ValueSpec [deleteObject]}
	 {*ast.StarExpr -> *ast.SelectorExpr [windows LazyProc]}
	 {*ast.ValueSpec [ellipse]}
	 {*ast.StarExpr -> *ast.SelectorExpr [windows LazyProc]}
	 {*ast.ValueSpec [endDoc]}
	 {*ast.StarExpr -> *ast.SelectorExpr [windows LazyProc]}
	 {*ast.ValueSpec [endPage]}
	 {*ast.StarExpr -> *ast.SelectorExpr [windows LazyProc]}
	 {*ast.ValueSpec [excludeClipRect]}
	 {*ast.StarExpr -> *ast.SelectorExpr [windows LazyProc]}
	 {*ast.ValueSpec [extCreatePen]}
	 {*ast.StarExpr -> *ast.SelectorExpr [windows LazyProc]}
	 {*ast.ValueSpec [fillRgn]}
	 {*ast.StarExpr -> *ast.SelectorExpr [windows LazyProc]}
	 {*ast.ValueSpec [gdiFlush]}
	 {*ast.StarExpr -> *ast.SelectorExpr [windows LazyProc]}
	 {*ast.ValueSpec [getBkColor]}
	 {*ast.StarExpr -> *ast.SelectorExpr [windows LazyProc]}
	 {*ast.ValueSpec [getDeviceCaps]}
	 {*ast.StarExpr -> *ast.SelectorExpr [windows LazyProc]}
	 {*ast.ValueSpec [getDIBits]}
	 {*ast.StarExpr -> *ast.SelectorExpr [windows LazyProc]}
	 {*ast.ValueSpec [getEnhMetaFile]}
	 {*ast.StarExpr -> *ast.SelectorExpr [windows LazyProc]}
	 {*ast.ValueSpec [getEnhMetaFileHeader]}
	 {*ast.StarExpr -> *ast.SelectorExpr [windows LazyProc]}
	 {*ast.ValueSpec [getObject]}
	 {*ast.StarExpr -> *ast.SelectorExpr [windows LazyProc]}
	 {*ast.ValueSpec [getPixel]}
	 {*ast.StarExpr -> *ast.SelectorExpr [windows LazyProc]}
	 {*ast.ValueSpec [getRgnBox]}
	 {*ast.StarExpr -> *ast.SelectorExpr [windows LazyProc]}
	 {*ast.ValueSpec [getStockObject]}
	 {*ast.StarExpr -> *ast.SelectorExpr [windows LazyProc]}
	 {*ast.ValueSpec [getTextColor]}
	 {*ast.StarExpr -> *ast.SelectorExpr [windows LazyProc]}
	 {*ast.ValueSpec [getTextExtentExPoint]}
	 {*ast.StarExpr -> *ast.SelectorExpr [windows LazyProc]}
	 {*ast.ValueSpec [getTextExtentPoint32]}
	 {*ast.StarExpr -> *ast.SelectorExpr [windows LazyProc]}
	 {*ast.ValueSpec [getTextMetrics]}
	 {*ast.StarExpr -> *ast.SelectorExpr [windows LazyProc]}
	 {*ast.ValueSpec [getViewportOrgEx]}
	 {*ast.StarExpr -> *ast.SelectorExpr [windows LazyProc]}
	 {*ast.ValueSpec [gradientFill]}
	 {*ast.StarExpr -> *ast.SelectorExpr [windows LazyProc]}
	 {*ast.ValueSpec [intersectClipRect]}
	 {*ast.StarExpr -> *ast.SelectorExpr [windows LazyProc]}
	 {*ast.ValueSpec [lineTo]}
	 {*ast.StarExpr -> *ast.SelectorExpr [windows LazyProc]}
	 {*ast.ValueSpec [moveToEx]}
	 {*ast.StarExpr -> *ast.SelectorExpr [windows LazyProc]}
	 {*ast.ValueSpec [playEnhMetaFile]}
	 {*ast.StarExpr -> *ast.SelectorExpr [windows LazyProc]}
	 {*ast.ValueSpec [polyline]}
	 {*ast.StarExpr -> *ast.SelectorExpr [windows LazyProc]}
	 {*ast.ValueSpec [rectangle]}
	 {*ast.StarExpr -> *ast.SelectorExpr [windows LazyProc]}
	 {*ast.ValueSpec [removeFontResourceEx]}
	 {*ast.StarExpr -> *ast.SelectorExpr [windows LazyProc]}
	 {*ast.ValueSpec [removeFontMemResourceEx]}
	 {*ast.StarExpr -> *ast.SelectorExpr [windows LazyProc]}
	 {*ast.ValueSpec [resetDC]}
	 {*ast.StarExpr -> *ast.SelectorExpr [windows LazyProc]}
	 {*ast.ValueSpec [restoreDC]}
	 {*ast.StarExpr -> *ast.SelectorExpr [windows LazyProc]}
	 {*ast.ValueSpec [roundRect]}
	 {*ast.StarExpr -> *ast.SelectorExpr [windows LazyProc]}
	 {*ast.ValueSpec [selectObject]}
	 {*ast.StarExpr -> *ast.SelectorExpr [windows LazyProc]}
	 {*ast.ValueSpec [setBkColor]}
	 {*ast.StarExpr -> *ast.SelectorExpr [windows LazyProc]}
	 {*ast.ValueSpec [setBkMode]}
	 {*ast.StarExpr -> *ast.SelectorExpr [windows LazyProc]}
	 {*ast.ValueSpec [setBrushOrgEx]}
	 {*ast.StarExpr -> *ast.SelectorExpr [windows LazyProc]}
	 {*ast.ValueSpec [setDIBits]}
	 {*ast.StarExpr -> *ast.SelectorExpr [windows LazyProc]}
	 {*ast.ValueSpec [setPixel]}
	 {*ast.StarExpr -> *ast.SelectorExpr [windows LazyProc]}
	 {*ast.ValueSpec [setPixelFormat]}
	 {*ast.StarExpr -> *ast.SelectorExpr [windows LazyProc]}
	 {*ast.ValueSpec [setStretchBltMode]}
	 {*ast.StarExpr -> *ast.SelectorExpr [windows LazyProc]}
	 {*ast.ValueSpec [setTextColor]}
	 {*ast.StarExpr -> *ast.SelectorExpr [windows LazyProc]}
	 {*ast.ValueSpec [setViewportOrgEx]}
	 {*ast.StarExpr -> *ast.SelectorExpr [windows LazyProc]}
	 {*ast.ValueSpec [saveDC]}
	 {*ast.StarExpr -> *ast.SelectorExpr [windows LazyProc]}
	 {*ast.ValueSpec [startDoc]}
	 {*ast.StarExpr -> *ast.SelectorExpr [windows LazyProc]}
	 {*ast.ValueSpec [startPage]}
	 {*ast.StarExpr -> *ast.SelectorExpr [windows LazyProc]}
	 {*ast.ValueSpec [stretchBlt]}
	 {*ast.StarExpr -> *ast.SelectorExpr [windows LazyProc]}
	 {*ast.ValueSpec [swapBuffers]}
	 {*ast.StarExpr -> *ast.SelectorExpr [windows LazyProc]}
	 {*ast.ValueSpec [textOut]}
	 {*ast.StarExpr -> *ast.SelectorExpr [windows LazyProc]}
	 {*ast.ValueSpec [transparentBlt]}
	 {*ast.StarExpr -> *ast.SelectorExpr [windows LazyProc]}


function name is init 
	 { [init]}
	 {*ast.FuncType -> *ast.FieldList -> *ast.BlockStmt -> *ast.AssignStmt [libgdi32]}
	 {*ast.CallExpr -> *ast.SelectorExpr [windows NewLazySystemDLL STRING "gdi32.dll"]}
	 {*ast.AssignStmt [libmsimg32]}
	 {*ast.CallExpr -> *ast.SelectorExpr [windows NewLazySystemDLL STRING "msimg32.dll"]}
	 {*ast.AssignStmt [abortDoc]}
	 {*ast.CallExpr -> *ast.SelectorExpr [libgdi32 NewProc STRING "AbortDoc"]}
	 {*ast.AssignStmt [addFontResourceEx]}
	 {*ast.CallExpr -> *ast.SelectorExpr [libgdi32 NewProc STRING "AddFontResourceExW"]}
	 {*ast.AssignStmt [addFontMemResourceEx]}
	 {*ast.CallExpr -> *ast.SelectorExpr [libgdi32 NewProc STRING "AddFontMemResourceEx"]}
	 {*ast.AssignStmt [bitBlt]}
	 {*ast.CallExpr -> *ast.SelectorExpr [libgdi32 NewProc STRING "BitBlt"]}
	 {*ast.AssignStmt [choosePixelFormat]}
	 {*ast.CallExpr -> *ast.SelectorExpr [libgdi32 NewProc STRING "ChoosePixelFormat"]}
	 {*ast.AssignStmt [closeEnhMetaFile]}
	 {*ast.CallExpr -> *ast.SelectorExpr [libgdi32 NewProc STRING "CloseEnhMetaFile"]}
	 {*ast.AssignStmt [combineRgn]}
	 {*ast.CallExpr -> *ast.SelectorExpr [libgdi32 NewProc STRING "CombineRgn"]}
	 {*ast.AssignStmt [copyEnhMetaFile]}
	 {*ast.CallExpr -> *ast.SelectorExpr [libgdi32 NewProc STRING "CopyEnhMetaFileW"]}
	 {*ast.AssignStmt [createBitmap]}
	 {*ast.CallExpr -> *ast.SelectorExpr [libgdi32 NewProc STRING "CreateBitmap"]}
	 {*ast.AssignStmt [createCompatibleBitmap]}
	 {*ast.CallExpr -> *ast.SelectorExpr [libgdi32 NewProc STRING "CreateCompatibleBitmap"]}
	 {*ast.AssignStmt [createBrushIndirect]}
	 {*ast.CallExpr -> *ast.SelectorExpr [libgdi32 NewProc STRING "CreateBrushIndirect"]}
	 {*ast.AssignStmt [createCompatibleDC]}
	 {*ast.CallExpr -> *ast.SelectorExpr [libgdi32 NewProc STRING "CreateCompatibleDC"]}
	 {*ast.AssignStmt [createDC]}
	 {*ast.CallExpr -> *ast.SelectorExpr [libgdi32 NewProc STRING "CreateDCW"]}
	 {*ast.AssignStmt [createDIBSection]}
	 {*ast.CallExpr -> *ast.SelectorExpr [libgdi32 NewProc STRING "CreateDIBSection"]}
	 {*ast.AssignStmt [createEnhMetaFile]}
	 {*ast.CallExpr -> *ast.SelectorExpr [libgdi32 NewProc STRING "CreateEnhMetaFileW"]}
	 {*ast.AssignStmt [createFontIndirect]}
	 {*ast.CallExpr -> *ast.SelectorExpr [libgdi32 NewProc STRING "CreateFontIndirectW"]}
	 {*ast.AssignStmt [createIC]}
	 {*ast.CallExpr -> *ast.SelectorExpr [libgdi32 NewProc STRING "CreateICW"]}
	 {*ast.AssignStmt [createPatternBrush]}
	 {*ast.CallExpr -> *ast.SelectorExpr [libgdi32 NewProc STRING "CreatePatternBrush"]}
	 {*ast.AssignStmt [createRectRgn]}
	 {*ast.CallExpr -> *ast.SelectorExpr [libgdi32 NewProc STRING "CreateRectRgn"]}
	 {*ast.AssignStmt [deleteDC]}
	 {*ast.CallExpr -> *ast.SelectorExpr [libgdi32 NewProc STRING "DeleteDC"]}
	 {*ast.AssignStmt [deleteEnhMetaFile]}
	 {*ast.CallExpr -> *ast.SelectorExpr [libgdi32 NewProc STRING "DeleteEnhMetaFile"]}
	 {*ast.AssignStmt [deleteObject]}
	 {*ast.CallExpr -> *ast.SelectorExpr [libgdi32 NewProc STRING "DeleteObject"]}
	 {*ast.AssignStmt [ellipse]}
	 {*ast.CallExpr -> *ast.SelectorExpr [libgdi32 NewProc STRING "Ellipse"]}
	 {*ast.AssignStmt [endDoc]}
	 {*ast.CallExpr -> *ast.SelectorExpr [libgdi32 NewProc STRING "EndDoc"]}
	 {*ast.AssignStmt [endPage]}
	 {*ast.CallExpr -> *ast.SelectorExpr [libgdi32 NewProc STRING "EndPage"]}
	 {*ast.AssignStmt [excludeClipRect]}
	 {*ast.CallExpr -> *ast.SelectorExpr [libgdi32 NewProc STRING "ExcludeClipRect"]}
	 {*ast.AssignStmt [extCreatePen]}
	 {*ast.CallExpr -> *ast.SelectorExpr [libgdi32 NewProc STRING "ExtCreatePen"]}
	 {*ast.AssignStmt [fillRgn]}
	 {*ast.CallExpr -> *ast.SelectorExpr [libgdi32 NewProc STRING "FillRgn"]}
	 {*ast.AssignStmt [gdiFlush]}
	 {*ast.CallExpr -> *ast.SelectorExpr [libgdi32 NewProc STRING "GdiFlush"]}
	 {*ast.AssignStmt [getBkColor]}
	 {*ast.CallExpr -> *ast.SelectorExpr [libgdi32 NewProc STRING "GetBkColor"]}
	 {*ast.AssignStmt [getDeviceCaps]}
	 {*ast.CallExpr -> *ast.SelectorExpr [libgdi32 NewProc STRING "GetDeviceCaps"]}
	 {*ast.AssignStmt [getDIBits]}
	 {*ast.CallExpr -> *ast.SelectorExpr [libgdi32 NewProc STRING "GetDIBits"]}
	 {*ast.AssignStmt [getEnhMetaFile]}
	 {*ast.CallExpr -> *ast.SelectorExpr [libgdi32 NewProc STRING "GetEnhMetaFileW"]}
	 {*ast.AssignStmt [getEnhMetaFileHeader]}
	 {*ast.CallExpr -> *ast.SelectorExpr [libgdi32 NewProc STRING "GetEnhMetaFileHeader"]}
	 {*ast.AssignStmt [getObject]}
	 {*ast.CallExpr -> *ast.SelectorExpr [libgdi32 NewProc STRING "GetObjectW"]}
	 {*ast.AssignStmt [getPixel]}
	 {*ast.CallExpr -> *ast.SelectorExpr [libgdi32 NewProc STRING "GetPixel"]}
	 {*ast.AssignStmt [getRgnBox]}
	 {*ast.CallExpr -> *ast.SelectorExpr [libgdi32 NewProc STRING "GetRgnBox"]}
	 {*ast.AssignStmt [getStockObject]}
	 {*ast.CallExpr -> *ast.SelectorExpr [libgdi32 NewProc STRING "GetStockObject"]}
	 {*ast.AssignStmt [getTextColor]}
	 {*ast.CallExpr -> *ast.SelectorExpr [libgdi32 NewProc STRING "GetTextColor"]}
	 {*ast.AssignStmt [getTextExtentExPoint]}
	 {*ast.CallExpr -> *ast.SelectorExpr [libgdi32 NewProc STRING "GetTextExtentExPointW"]}
	 {*ast.AssignStmt [getTextExtentPoint32]}
	 {*ast.CallExpr -> *ast.SelectorExpr [libgdi32 NewProc STRING "GetTextExtentPoint32W"]}
	 {*ast.AssignStmt [getTextMetrics]}
	 {*ast.CallExpr -> *ast.SelectorExpr [libgdi32 NewProc STRING "GetTextMetricsW"]}
	 {*ast.AssignStmt [getViewportOrgEx]}
	 {*ast.CallExpr -> *ast.SelectorExpr [libgdi32 NewProc STRING "GetViewportOrgEx"]}
	 {*ast.AssignStmt [intersectClipRect]}
	 {*ast.CallExpr -> *ast.SelectorExpr [libgdi32 NewProc STRING "IntersectClipRect"]}
	 {*ast.AssignStmt [lineTo]}
	 {*ast.CallExpr -> *ast.SelectorExpr [libgdi32 NewProc STRING "LineTo"]}
	 {*ast.AssignStmt [moveToEx]}
	 {*ast.CallExpr -> *ast.SelectorExpr [libgdi32 NewProc STRING "MoveToEx"]}
	 {*ast.AssignStmt [playEnhMetaFile]}
	 {*ast.CallExpr -> *ast.SelectorExpr [libgdi32 NewProc STRING "PlayEnhMetaFile"]}
	 {*ast.AssignStmt [polyline]}
	 {*ast.CallExpr -> *ast.SelectorExpr [libgdi32 NewProc STRING "Polyline"]}
	 {*ast.AssignStmt [rectangle]}
	 {*ast.CallExpr -> *ast.SelectorExpr [libgdi32 NewProc STRING "Rectangle"]}
	 {*ast.AssignStmt [removeFontResourceEx]}
	 {*ast.CallExpr -> *ast.SelectorExpr [libgdi32 NewProc STRING "RemoveFontResourceExW"]}
	 {*ast.AssignStmt [removeFontMemResourceEx]}
	 {*ast.CallExpr -> *ast.SelectorExpr [libgdi32 NewProc STRING "RemoveFontMemResourceEx"]}
	 {*ast.AssignStmt [resetDC]}
	 {*ast.CallExpr -> *ast.SelectorExpr [libgdi32 NewProc STRING "ResetDCW"]}
	 {*ast.AssignStmt [restoreDC]}
	 {*ast.CallExpr -> *ast.SelectorExpr [libgdi32 NewProc STRING "RestoreDC"]}
	 {*ast.AssignStmt [roundRect]}
	 {*ast.CallExpr -> *ast.SelectorExpr [libgdi32 NewProc STRING "RoundRect"]}
	 {*ast.AssignStmt [saveDC]}
	 {*ast.CallExpr -> *ast.SelectorExpr [libgdi32 NewProc STRING "SaveDC"]}
	 {*ast.AssignStmt [selectObject]}
	 {*ast.CallExpr -> *ast.SelectorExpr [libgdi32 NewProc STRING "SelectObject"]}
	 {*ast.AssignStmt [setBkColor]}
	 {*ast.CallExpr -> *ast.SelectorExpr [libgdi32 NewProc STRING "SetBkColor"]}
	 {*ast.AssignStmt [setBkMode]}
	 {*ast.CallExpr -> *ast.SelectorExpr [libgdi32 NewProc STRING "SetBkMode"]}
	 {*ast.AssignStmt [setBrushOrgEx]}
	 {*ast.CallExpr -> *ast.SelectorExpr [libgdi32 NewProc STRING "SetBrushOrgEx"]}
	 {*ast.AssignStmt [setDIBits]}
	 {*ast.CallExpr -> *ast.SelectorExpr [libgdi32 NewProc STRING "SetDIBits"]}
	 {*ast.AssignStmt [setPixel]}
	 {*ast.CallExpr -> *ast.SelectorExpr [libgdi32 NewProc STRING "SetPixel"]}
	 {*ast.AssignStmt [setPixelFormat]}
	 {*ast.CallExpr -> *ast.SelectorExpr [libgdi32 NewProc STRING "SetPixelFormat"]}
	 {*ast.AssignStmt [setStretchBltMode]}
	 {*ast.CallExpr -> *ast.SelectorExpr [libgdi32 NewProc STRING "SetStretchBltMode"]}
	 {*ast.AssignStmt [setTextColor]}
	 {*ast.CallExpr -> *ast.SelectorExpr [libgdi32 NewProc STRING "SetTextColor"]}
	 {*ast.AssignStmt [setViewportOrgEx]}
	 {*ast.CallExpr -> *ast.SelectorExpr [libgdi32 NewProc STRING "SetViewportOrgEx"]}
	 {*ast.AssignStmt [startDoc]}
	 {*ast.CallExpr -> *ast.SelectorExpr [libgdi32 NewProc STRING "StartDocW"]}
	 {*ast.AssignStmt [startPage]}
	 {*ast.CallExpr -> *ast.SelectorExpr [libgdi32 NewProc STRING "StartPage"]}
	 {*ast.AssignStmt [stretchBlt]}
	 {*ast.CallExpr -> *ast.SelectorExpr [libgdi32 NewProc STRING "StretchBlt"]}
	 {*ast.AssignStmt [swapBuffers]}
	 {*ast.CallExpr -> *ast.SelectorExpr [libgdi32 NewProc STRING "SwapBuffers"]}
	 {*ast.AssignStmt [textOut]}
	 {*ast.CallExpr -> *ast.SelectorExpr [libgdi32 NewProc STRING "TextOutW"]}
	 {*ast.AssignStmt [alphaBlend]}
	 {*ast.CallExpr -> *ast.SelectorExpr [libmsimg32 NewProc STRING "AlphaBlend"]}
	 {*ast.AssignStmt [gradientFill]}
	 {*ast.CallExpr -> *ast.SelectorExpr [libmsimg32 NewProc STRING "GradientFill"]}
	 {*ast.AssignStmt [transparentBlt]}
	 {*ast.CallExpr -> *ast.SelectorExpr [libmsimg32 NewProc STRING "TransparentBlt"]}


function name is AbortDoc 
	 { [AbortDoc]}
	 {*ast.FuncType -> *ast.FieldList -> *ast.Field [hdc HDC]}
	 {*ast.FieldList -> *ast.Field [int32]}
	 {*ast.BlockStmt -> *ast.AssignStmt [ret _ _]}
	 {*ast.CallExpr -> *ast.SelectorExpr [syscall Syscall]}
	 {*ast.CallExpr -> *ast.SelectorExpr [abortDoc Addr INT 1]}
	 {*ast.CallExpr [uintptr hdc INT 0 INT 0]}
	 {*ast.ReturnStmt -> *ast.CallExpr [int32 ret]}


function name is AddFontResourceEx 
	 { [AddFontResourceEx]}
	 {*ast.FuncType -> *ast.FieldList -> *ast.Field [lpszFilename]}
	 {*ast.StarExpr [uint16]}
	 {*ast.Field [fl uint32]}
	 {*ast.Field -> *ast.SelectorExpr [pdv unsafe Pointer]}
	 {*ast.FieldList -> *ast.Field [int32]}
	 {*ast.BlockStmt -> *ast.AssignStmt [ret _ _]}
	 {*ast.CallExpr -> *ast.SelectorExpr [syscall Syscall]}
	 {*ast.CallExpr -> *ast.SelectorExpr [addFontResourceEx Addr INT 3]}
	 {*ast.CallExpr [uintptr]}
	 {*ast.CallExpr -> *ast.SelectorExpr [unsafe Pointer lpszFilename]}
	 {*ast.CallExpr [uintptr fl]}
	 {*ast.CallExpr [uintptr pdv]}
	 {*ast.ReturnStmt -> *ast.CallExpr [int32 ret]}


function name is AddFontMemResourceEx 
	 { [AddFontMemResourceEx]}
	 {*ast.FuncType -> *ast.FieldList -> *ast.Field [pFileView uintptr]}
	 {*ast.Field [cjSize uint32]}
	 {*ast.Field -> *ast.SelectorExpr [pvReserved unsafe Pointer]}
	 {*ast.Field [pNumFonts]}
	 {*ast.StarExpr [uint32]}
	 {*ast.FieldList -> *ast.Field [HANDLE]}
	 {*ast.BlockStmt -> *ast.AssignStmt [ret _ _]}
	 {*ast.CallExpr -> *ast.SelectorExpr [syscall Syscall6]}
	 {*ast.CallExpr -> *ast.SelectorExpr [addFontMemResourceEx Addr INT 4 pFileView]}
	 {*ast.CallExpr [uintptr cjSize]}
	 {*ast.CallExpr [uintptr pvReserved]}
	 {*ast.CallExpr [uintptr]}
	 {*ast.CallExpr -> *ast.SelectorExpr [unsafe Pointer pNumFonts INT 0 INT 0]}
	 {*ast.ReturnStmt -> *ast.CallExpr [HANDLE ret]}


function name is AlphaBlend 
	 { [AlphaBlend]}
	 {*ast.FuncType -> *ast.FieldList -> *ast.Field [hdcDest HDC]}
	 {*ast.Field [nXOriginDest nYOriginDest nWidthDest nHeightDest int32]}
	 {*ast.Field [hdcSrc HDC]}
	 {*ast.Field [nXOriginSrc nYOriginSrc nWidthSrc nHeightSrc int32]}
	 {*ast.Field [ftn BLENDFUNCTION]}
	 {*ast.FieldList -> *ast.Field [bool]}
	 {*ast.BlockStmt -> *ast.AssignStmt [ret _ _]}
	 {*ast.CallExpr -> *ast.SelectorExpr [syscall Syscall12]}
	 {*ast.CallExpr -> *ast.SelectorExpr [alphaBlend Addr INT 11]}
	 {*ast.CallExpr [uintptr hdcDest]}
	 {*ast.CallExpr [uintptr nXOriginDest]}
	 {*ast.CallExpr [uintptr nYOriginDest]}
	 {*ast.CallExpr [uintptr nWidthDest]}
	 {*ast.CallExpr [uintptr nHeightDest]}
	 {*ast.CallExpr [uintptr hdcSrc]}
	 {*ast.CallExpr [uintptr nXOriginSrc]}
	 {*ast.CallExpr [uintptr nYOriginSrc]}
	 {*ast.CallExpr [uintptr nWidthSrc]}
	 {*ast.CallExpr [uintptr nHeightSrc]}
	 {*ast.CallExpr [uintptr]}
	 {*ast.StarExpr -> *ast.CallExpr -> *ast.ParenExpr -> *ast.StarExpr [uint32]}
	 {*ast.CallExpr -> *ast.SelectorExpr [unsafe Pointer]}
	 {*ast.CallExpr [uintptr]}
	 {*ast.CallExpr -> *ast.SelectorExpr [unsafe Pointer]}
	 {*ast.UnaryExpr [ftn INT 0]}
	 {*ast.ReturnStmt -> *ast.BinaryExpr [ret INT 0]}


function name is BitBlt 
	 { [BitBlt]}
	 {*ast.FuncType -> *ast.FieldList -> *ast.Field [hdcDest HDC]}
	 {*ast.Field [nXDest nYDest nWidth nHeight int32]}
	 {*ast.Field [hdcSrc HDC]}
	 {*ast.Field [nXSrc nYSrc int32]}
	 {*ast.Field [dwRop uint32]}
	 {*ast.FieldList -> *ast.Field [bool]}
	 {*ast.BlockStmt -> *ast.AssignStmt [ret _ _]}
	 {*ast.CallExpr -> *ast.SelectorExpr [syscall Syscall9]}
	 {*ast.CallExpr -> *ast.SelectorExpr [bitBlt Addr INT 9]}
	 {*ast.CallExpr [uintptr hdcDest]}
	 {*ast.CallExpr [uintptr nXDest]}
	 {*ast.CallExpr [uintptr nYDest]}
	 {*ast.CallExpr [uintptr nWidth]}
	 {*ast.CallExpr [uintptr nHeight]}
	 {*ast.CallExpr [uintptr hdcSrc]}
	 {*ast.CallExpr [uintptr nXSrc]}
	 {*ast.CallExpr [uintptr nYSrc]}
	 {*ast.CallExpr [uintptr dwRop]}
	 {*ast.ReturnStmt -> *ast.BinaryExpr [ret INT 0]}


function name is ChoosePixelFormat 
	 { [ChoosePixelFormat]}
	 {*ast.FuncType -> *ast.FieldList -> *ast.Field [hdc HDC]}
	 {*ast.Field [ppfd]}
	 {*ast.StarExpr [PIXELFORMATDESCRIPTOR]}
	 {*ast.FieldList -> *ast.Field [int32]}
	 {*ast.BlockStmt -> *ast.AssignStmt [ret _ _]}
	 {*ast.CallExpr -> *ast.SelectorExpr [syscall Syscall]}
	 {*ast.CallExpr -> *ast.SelectorExpr [choosePixelFormat Addr INT 2]}
	 {*ast.CallExpr [uintptr hdc]}
	 {*ast.CallExpr [uintptr]}
	 {*ast.CallExpr -> *ast.SelectorExpr [unsafe Pointer ppfd INT 0]}
	 {*ast.ReturnStmt -> *ast.CallExpr [int32 ret]}


function name is CloseEnhMetaFile 
	 { [CloseEnhMetaFile]}
	 {*ast.FuncType -> *ast.FieldList -> *ast.Field [hdc HDC]}
	 {*ast.FieldList -> *ast.Field [HENHMETAFILE]}
	 {*ast.BlockStmt -> *ast.AssignStmt [ret _ _]}
	 {*ast.CallExpr -> *ast.SelectorExpr [syscall Syscall]}
	 {*ast.CallExpr -> *ast.SelectorExpr [closeEnhMetaFile Addr INT 1]}
	 {*ast.CallExpr [uintptr hdc INT 0 INT 0]}
	 {*ast.ReturnStmt -> *ast.CallExpr [HENHMETAFILE ret]}


function name is CombineRgn 
	 { [CombineRgn]}
	 {*ast.FuncType -> *ast.FieldList -> *ast.Field [hrgnDest hrgnSrc1 hrgnSrc2 HRGN]}
	 {*ast.Field [fnCombineMode int32]}
	 {*ast.FieldList -> *ast.Field [int32]}
	 {*ast.BlockStmt -> *ast.AssignStmt [ret _ _]}
	 {*ast.CallExpr -> *ast.SelectorExpr [syscall Syscall6]}
	 {*ast.CallExpr -> *ast.SelectorExpr [combineRgn Addr INT 4]}
	 {*ast.CallExpr [uintptr hrgnDest]}
	 {*ast.CallExpr [uintptr hrgnSrc1]}
	 {*ast.CallExpr [uintptr hrgnSrc2]}
	 {*ast.CallExpr [uintptr fnCombineMode INT 0 INT 0]}
	 {*ast.ReturnStmt -> *ast.CallExpr [int32 ret]}


function name is CopyEnhMetaFile 
	 { [CopyEnhMetaFile]}
	 {*ast.FuncType -> *ast.FieldList -> *ast.Field [hemfSrc HENHMETAFILE]}
	 {*ast.Field [lpszFile]}
	 {*ast.StarExpr [uint16]}
	 {*ast.FieldList -> *ast.Field [HENHMETAFILE]}
	 {*ast.BlockStmt -> *ast.AssignStmt [ret _ _]}
	 {*ast.CallExpr -> *ast.SelectorExpr [syscall Syscall]}
	 {*ast.CallExpr -> *ast.SelectorExpr [copyEnhMetaFile Addr INT 2]}
	 {*ast.CallExpr [uintptr hemfSrc]}
	 {*ast.CallExpr [uintptr]}
	 {*ast.CallExpr -> *ast.SelectorExpr [unsafe Pointer lpszFile INT 0]}
	 {*ast.ReturnStmt -> *ast.CallExpr [HENHMETAFILE ret]}


function name is CreateBitmap 
	 { [CreateBitmap]}
	 {*ast.FuncType -> *ast.FieldList -> *ast.Field [nWidth nHeight int32]}
	 {*ast.Field [cPlanes cBitsPerPel uint32]}
	 {*ast.Field -> *ast.SelectorExpr [lpvBits unsafe Pointer]}
	 {*ast.FieldList -> *ast.Field [HBITMAP]}
	 {*ast.BlockStmt -> *ast.AssignStmt [ret _ _]}
	 {*ast.CallExpr -> *ast.SelectorExpr [syscall Syscall6]}
	 {*ast.CallExpr -> *ast.SelectorExpr [createBitmap Addr INT 5]}
	 {*ast.CallExpr [uintptr nWidth]}
	 {*ast.CallExpr [uintptr nHeight]}
	 {*ast.CallExpr [uintptr cPlanes]}
	 {*ast.CallExpr [uintptr cBitsPerPel]}
	 {*ast.CallExpr [uintptr lpvBits INT 0]}
	 {*ast.ReturnStmt -> *ast.CallExpr [HBITMAP ret]}


function name is CreateCompatibleBitmap 
	 { [CreateCompatibleBitmap]}
	 {*ast.FuncType -> *ast.FieldList -> *ast.Field [hdc HDC]}
	 {*ast.Field [nWidth nHeight int32]}
	 {*ast.FieldList -> *ast.Field [HBITMAP]}
	 {*ast.BlockStmt -> *ast.AssignStmt [ret _ _]}
	 {*ast.CallExpr -> *ast.SelectorExpr [syscall Syscall]}
	 {*ast.CallExpr -> *ast.SelectorExpr [createCompatibleBitmap Addr INT 3]}
	 {*ast.CallExpr [uintptr hdc]}
	 {*ast.CallExpr [uintptr nWidth]}
	 {*ast.CallExpr [uintptr nHeight]}
	 {*ast.ReturnStmt -> *ast.CallExpr [HBITMAP ret]}


function name is CreateBrushIndirect 
	 { [CreateBrushIndirect]}
	 {*ast.FuncType -> *ast.FieldList -> *ast.Field [lplb]}
	 {*ast.StarExpr [LOGBRUSH]}
	 {*ast.FieldList -> *ast.Field [HBRUSH]}
	 {*ast.BlockStmt -> *ast.AssignStmt [ret _ _]}
	 {*ast.CallExpr -> *ast.SelectorExpr [syscall Syscall]}
	 {*ast.CallExpr -> *ast.SelectorExpr [createBrushIndirect Addr INT 1]}
	 {*ast.CallExpr [uintptr]}
	 {*ast.CallExpr -> *ast.SelectorExpr [unsafe Pointer lplb INT 0 INT 0]}
	 {*ast.ReturnStmt -> *ast.CallExpr [HBRUSH ret]}


function name is CreateCompatibleDC 
	 { [CreateCompatibleDC]}
	 {*ast.FuncType -> *ast.FieldList -> *ast.Field [hdc HDC]}
	 {*ast.FieldList -> *ast.Field [HDC]}
	 {*ast.BlockStmt -> *ast.AssignStmt [ret _ _]}
	 {*ast.CallExpr -> *ast.SelectorExpr [syscall Syscall]}
	 {*ast.CallExpr -> *ast.SelectorExpr [createCompatibleDC Addr INT 1]}
	 {*ast.CallExpr [uintptr hdc INT 0 INT 0]}
	 {*ast.ReturnStmt -> *ast.CallExpr [HDC ret]}


function name is CreateDC 
	 { [CreateDC]}
	 {*ast.FuncType -> *ast.FieldList -> *ast.Field [lpszDriver lpszDevice lpszOutput]}
	 {*ast.StarExpr [uint16]}
	 {*ast.Field [lpInitData]}
	 {*ast.StarExpr [DEVMODE]}
	 {*ast.FieldList -> *ast.Field [HDC]}
	 {*ast.BlockStmt -> *ast.AssignStmt [ret _ _]}
	 {*ast.CallExpr -> *ast.SelectorExpr [syscall Syscall6]}
	 {*ast.CallExpr -> *ast.SelectorExpr [createDC Addr INT 4]}
	 {*ast.CallExpr [uintptr]}
	 {*ast.CallExpr -> *ast.SelectorExpr [unsafe Pointer lpszDriver]}
	 {*ast.CallExpr [uintptr]}
	 {*ast.CallExpr -> *ast.SelectorExpr [unsafe Pointer lpszDevice]}
	 {*ast.CallExpr [uintptr]}
	 {*ast.CallExpr -> *ast.SelectorExpr [unsafe Pointer lpszOutput]}
	 {*ast.CallExpr [uintptr]}
	 {*ast.CallExpr -> *ast.SelectorExpr [unsafe Pointer lpInitData INT 0 INT 0]}
	 {*ast.ReturnStmt -> *ast.CallExpr [HDC ret]}


function name is CreateDIBSection 
	 { [CreateDIBSection]}
	 {*ast.FuncType -> *ast.FieldList -> *ast.Field [hdc HDC]}
	 {*ast.Field [pbmih]}
	 {*ast.StarExpr [BITMAPINFOHEADER]}
	 {*ast.Field [iUsage uint32]}
	 {*ast.Field [ppvBits]}
	 {*ast.StarExpr -> *ast.SelectorExpr [unsafe Pointer]}
	 {*ast.Field [hSection HANDLE]}
	 {*ast.Field [dwOffset uint32]}
	 {*ast.FieldList -> *ast.Field [HBITMAP]}
	 {*ast.BlockStmt -> *ast.AssignStmt [ret _ _]}
	 {*ast.CallExpr -> *ast.SelectorExpr [syscall Syscall6]}
	 {*ast.CallExpr -> *ast.SelectorExpr [createDIBSection Addr INT 6]}
	 {*ast.CallExpr [uintptr hdc]}
	 {*ast.CallExpr [uintptr]}
	 {*ast.CallExpr -> *ast.SelectorExpr [unsafe Pointer pbmih]}
	 {*ast.CallExpr [uintptr iUsage]}
	 {*ast.CallExpr [uintptr]}
	 {*ast.CallExpr -> *ast.SelectorExpr [unsafe Pointer ppvBits]}
	 {*ast.CallExpr [uintptr hSection]}
	 {*ast.CallExpr [uintptr dwOffset]}
	 {*ast.ReturnStmt -> *ast.CallExpr [HBITMAP ret]}


function name is CreateEnhMetaFile 
	 { [CreateEnhMetaFile]}
	 {*ast.FuncType -> *ast.FieldList -> *ast.Field [hdcRef HDC]}
	 {*ast.Field [lpFilename]}
	 {*ast.StarExpr [uint16]}
	 {*ast.Field [lpRect]}
	 {*ast.StarExpr [RECT]}
	 {*ast.Field [lpDescription]}
	 {*ast.StarExpr [uint16]}
	 {*ast.FieldList -> *ast.Field [HDC]}
	 {*ast.BlockStmt -> *ast.AssignStmt [ret _ _]}
	 {*ast.CallExpr -> *ast.SelectorExpr [syscall Syscall6]}
	 {*ast.CallExpr -> *ast.SelectorExpr [createEnhMetaFile Addr INT 4]}
	 {*ast.CallExpr [uintptr hdcRef]}
	 {*ast.CallExpr [uintptr]}
	 {*ast.CallExpr -> *ast.SelectorExpr [unsafe Pointer lpFilename]}
	 {*ast.CallExpr [uintptr]}
	 {*ast.CallExpr -> *ast.SelectorExpr [unsafe Pointer lpRect]}
	 {*ast.CallExpr [uintptr]}
	 {*ast.CallExpr -> *ast.SelectorExpr [unsafe Pointer lpDescription INT 0 INT 0]}
	 {*ast.ReturnStmt -> *ast.CallExpr [HDC ret]}


function name is CreateFontIndirect 
	 { [CreateFontIndirect]}
	 {*ast.FuncType -> *ast.FieldList -> *ast.Field [lplf]}
	 {*ast.StarExpr [LOGFONT]}
	 {*ast.FieldList -> *ast.Field [HFONT]}
	 {*ast.BlockStmt -> *ast.AssignStmt [ret _ _]}
	 {*ast.CallExpr -> *ast.SelectorExpr [syscall Syscall]}
	 {*ast.CallExpr -> *ast.SelectorExpr [createFontIndirect Addr INT 1]}
	 {*ast.CallExpr [uintptr]}
	 {*ast.CallExpr -> *ast.SelectorExpr [unsafe Pointer lplf INT 0 INT 0]}
	 {*ast.ReturnStmt -> *ast.CallExpr [HFONT ret]}


function name is CreateIC 
	 { [CreateIC]}
	 {*ast.FuncType -> *ast.FieldList -> *ast.Field [lpszDriver lpszDevice lpszOutput]}
	 {*ast.StarExpr [uint16]}
	 {*ast.Field [lpdvmInit]}
	 {*ast.StarExpr [DEVMODE]}
	 {*ast.FieldList -> *ast.Field [HDC]}
	 {*ast.BlockStmt -> *ast.AssignStmt [ret _ _]}
	 {*ast.CallExpr -> *ast.SelectorExpr [syscall Syscall6]}
	 {*ast.CallExpr -> *ast.SelectorExpr [createIC Addr INT 4]}
	 {*ast.CallExpr [uintptr]}
	 {*ast.CallExpr -> *ast.SelectorExpr [unsafe Pointer lpszDriver]}
	 {*ast.CallExpr [uintptr]}
	 {*ast.CallExpr -> *ast.SelectorExpr [unsafe Pointer lpszDevice]}
	 {*ast.CallExpr [uintptr]}
	 {*ast.CallExpr -> *ast.SelectorExpr [unsafe Pointer lpszOutput]}
	 {*ast.CallExpr [uintptr]}
	 {*ast.CallExpr -> *ast.SelectorExpr [unsafe Pointer lpdvmInit INT 0 INT 0]}
	 {*ast.ReturnStmt -> *ast.CallExpr [HDC ret]}


function name is CreatePatternBrush 
	 { [CreatePatternBrush]}
	 {*ast.FuncType -> *ast.FieldList -> *ast.Field [hbmp HBITMAP]}
	 {*ast.FieldList -> *ast.Field [HBRUSH]}
	 {*ast.BlockStmt -> *ast.AssignStmt [ret _ _]}
	 {*ast.CallExpr -> *ast.SelectorExpr [syscall Syscall]}
	 {*ast.CallExpr -> *ast.SelectorExpr [createPatternBrush Addr INT 1]}
	 {*ast.CallExpr [uintptr hbmp INT 0 INT 0]}
	 {*ast.ReturnStmt -> *ast.CallExpr [HBRUSH ret]}


function name is CreateRectRgn 
	 { [CreateRectRgn]}
	 {*ast.FuncType -> *ast.FieldList -> *ast.Field [nLeftRect nTopRect nRightRect nBottomRect int32]}
	 {*ast.FieldList -> *ast.Field [HRGN]}
	 {*ast.BlockStmt -> *ast.AssignStmt [ret _ _]}
	 {*ast.CallExpr -> *ast.SelectorExpr [syscall Syscall6]}
	 {*ast.CallExpr -> *ast.SelectorExpr [createRectRgn Addr INT 4]}
	 {*ast.CallExpr [uintptr nLeftRect]}
	 {*ast.CallExpr [uintptr nTopRect]}
	 {*ast.CallExpr [uintptr nRightRect]}
	 {*ast.CallExpr [uintptr nBottomRect INT 0 INT 0]}
	 {*ast.ReturnStmt -> *ast.CallExpr [HRGN ret]}


function name is DeleteDC 
	 { [DeleteDC]}
	 {*ast.FuncType -> *ast.FieldList -> *ast.Field [hdc HDC]}
	 {*ast.FieldList -> *ast.Field [bool]}
	 {*ast.BlockStmt -> *ast.AssignStmt [ret _ _]}
	 {*ast.CallExpr -> *ast.SelectorExpr [syscall Syscall]}
	 {*ast.CallExpr -> *ast.SelectorExpr [deleteDC Addr INT 1]}
	 {*ast.CallExpr [uintptr hdc INT 0 INT 0]}
	 {*ast.ReturnStmt -> *ast.BinaryExpr [ret INT 0]}


function name is DeleteEnhMetaFile 
	 { [DeleteEnhMetaFile]}
	 {*ast.FuncType -> *ast.FieldList -> *ast.Field [hemf HENHMETAFILE]}
	 {*ast.FieldList -> *ast.Field [bool]}
	 {*ast.BlockStmt -> *ast.AssignStmt [ret _ _]}
	 {*ast.CallExpr -> *ast.SelectorExpr [syscall Syscall]}
	 {*ast.CallExpr -> *ast.SelectorExpr [deleteEnhMetaFile Addr INT 1]}
	 {*ast.CallExpr [uintptr hemf INT 0 INT 0]}
	 {*ast.ReturnStmt -> *ast.BinaryExpr [ret INT 0]}


function name is DeleteObject 
	 { [DeleteObject]}
	 {*ast.FuncType -> *ast.FieldList -> *ast.Field [hObject HGDIOBJ]}
	 {*ast.FieldList -> *ast.Field [bool]}
	 {*ast.BlockStmt -> *ast.AssignStmt [ret _ _]}
	 {*ast.CallExpr -> *ast.SelectorExpr [syscall Syscall]}
	 {*ast.CallExpr -> *ast.SelectorExpr [deleteObject Addr INT 1]}
	 {*ast.CallExpr [uintptr hObject INT 0 INT 0]}
	 {*ast.ReturnStmt -> *ast.BinaryExpr [ret INT 0]}


function name is Ellipse 
	 { [Ellipse]}
	 {*ast.FuncType -> *ast.FieldList -> *ast.Field [hdc HDC]}
	 {*ast.Field [nLeftRect nTopRect nRightRect nBottomRect int32]}
	 {*ast.FieldList -> *ast.Field [bool]}
	 {*ast.BlockStmt -> *ast.AssignStmt [ret _ _]}
	 {*ast.CallExpr -> *ast.SelectorExpr [syscall Syscall6]}
	 {*ast.CallExpr -> *ast.SelectorExpr [ellipse Addr INT 5]}
	 {*ast.CallExpr [uintptr hdc]}
	 {*ast.CallExpr [uintptr nLeftRect]}
	 {*ast.CallExpr [uintptr nTopRect]}
	 {*ast.CallExpr [uintptr nRightRect]}
	 {*ast.CallExpr [uintptr nBottomRect INT 0]}
	 {*ast.ReturnStmt -> *ast.BinaryExpr [ret INT 0]}


function name is EndDoc 
	 { [EndDoc]}
	 {*ast.FuncType -> *ast.FieldList -> *ast.Field [hdc HDC]}
	 {*ast.FieldList -> *ast.Field [int32]}
	 {*ast.BlockStmt -> *ast.AssignStmt [ret _ _]}
	 {*ast.CallExpr -> *ast.SelectorExpr [syscall Syscall]}
	 {*ast.CallExpr -> *ast.SelectorExpr [endDoc Addr INT 1]}
	 {*ast.CallExpr [uintptr hdc INT 0 INT 0]}
	 {*ast.ReturnStmt -> *ast.CallExpr [int32 ret]}


function name is EndPage 
	 { [EndPage]}
	 {*ast.FuncType -> *ast.FieldList -> *ast.Field [hdc HDC]}
	 {*ast.FieldList -> *ast.Field [int32]}
	 {*ast.BlockStmt -> *ast.AssignStmt [ret _ _]}
	 {*ast.CallExpr -> *ast.SelectorExpr [syscall Syscall]}
	 {*ast.CallExpr -> *ast.SelectorExpr [endPage Addr INT 1]}
	 {*ast.CallExpr [uintptr hdc INT 0 INT 0]}
	 {*ast.ReturnStmt -> *ast.CallExpr [int32 ret]}


function name is ExcludeClipRect 
	 { [ExcludeClipRect]}
	 {*ast.FuncType -> *ast.FieldList -> *ast.Field [hdc HDC]}
	 {*ast.Field [nLeftRect nTopRect nRightRect nBottomRect int32]}
	 {*ast.FieldList -> *ast.Field [int32]}
	 {*ast.BlockStmt -> *ast.AssignStmt [ret _ _]}
	 {*ast.CallExpr -> *ast.SelectorExpr [syscall Syscall6]}
	 {*ast.CallExpr -> *ast.SelectorExpr [excludeClipRect Addr INT 5]}
	 {*ast.CallExpr [uintptr hdc]}
	 {*ast.CallExpr [uintptr nLeftRect]}
	 {*ast.CallExpr [uintptr nTopRect]}
	 {*ast.CallExpr [uintptr nRightRect]}
	 {*ast.CallExpr [uintptr nBottomRect INT 0]}
	 {*ast.ReturnStmt -> *ast.CallExpr [int32 ret]}


function name is ExtCreatePen 
	 { [ExtCreatePen]}
	 {*ast.FuncType -> *ast.FieldList -> *ast.Field [dwPenStyle dwWidth uint32]}
	 {*ast.Field [lplb]}
	 {*ast.StarExpr [LOGBRUSH]}
	 {*ast.Field [dwStyleCount uint32]}
	 {*ast.Field [lpStyle]}
	 {*ast.StarExpr [uint32]}
	 {*ast.FieldList -> *ast.Field [HPEN]}
	 {*ast.BlockStmt -> *ast.AssignStmt [ret _ _]}
	 {*ast.CallExpr -> *ast.SelectorExpr [syscall Syscall6]}
	 {*ast.CallExpr -> *ast.SelectorExpr [extCreatePen Addr INT 5]}
	 {*ast.CallExpr [uintptr dwPenStyle]}
	 {*ast.CallExpr [uintptr dwWidth]}
	 {*ast.CallExpr [uintptr]}
	 {*ast.CallExpr -> *ast.SelectorExpr [unsafe Pointer lplb]}
	 {*ast.CallExpr [uintptr dwStyleCount]}
	 {*ast.CallExpr [uintptr]}
	 {*ast.CallExpr -> *ast.SelectorExpr [unsafe Pointer lpStyle INT 0]}
	 {*ast.ReturnStmt -> *ast.CallExpr [HPEN ret]}


function name is FillRgn 
	 { [FillRgn]}
	 {*ast.FuncType -> *ast.FieldList -> *ast.Field [hdc HDC]}
	 {*ast.Field [hrgn HRGN]}
	 {*ast.Field [hbr HBRUSH]}
	 {*ast.FieldList -> *ast.Field [bool]}
	 {*ast.BlockStmt -> *ast.AssignStmt [ret _ _]}
	 {*ast.CallExpr -> *ast.SelectorExpr [syscall Syscall]}
	 {*ast.CallExpr -> *ast.SelectorExpr [fillRgn Addr INT 3]}
	 {*ast.CallExpr [uintptr hdc]}
	 {*ast.CallExpr [uintptr hrgn]}
	 {*ast.CallExpr [uintptr hbr]}
	 {*ast.ReturnStmt -> *ast.BinaryExpr [ret INT 0]}


function name is GdiFlush 
	 { [GdiFlush]}
	 {*ast.FuncType -> *ast.FieldList -> *ast.FieldList -> *ast.Field [bool]}
	 {*ast.BlockStmt -> *ast.AssignStmt [ret _ _]}
	 {*ast.CallExpr -> *ast.SelectorExpr [syscall Syscall]}
	 {*ast.CallExpr -> *ast.SelectorExpr [gdiFlush Addr INT 0 INT 0 INT 0 INT 0]}
	 {*ast.ReturnStmt -> *ast.BinaryExpr [ret INT 0]}


function name is GetBkColor 
	 { [GetBkColor]}
	 {*ast.FuncType -> *ast.FieldList -> *ast.Field [hdc HDC]}
	 {*ast.FieldList -> *ast.Field [COLORREF]}
	 {*ast.BlockStmt -> *ast.AssignStmt [ret _ _]}
	 {*ast.CallExpr -> *ast.SelectorExpr [syscall Syscall]}
	 {*ast.CallExpr -> *ast.SelectorExpr [getBkColor Addr INT 1]}
	 {*ast.CallExpr [uintptr hdc INT 0 INT 0]}
	 {*ast.ReturnStmt -> *ast.CallExpr [COLORREF ret]}


function name is GetDeviceCaps 
	 { [GetDeviceCaps]}
	 {*ast.FuncType -> *ast.FieldList -> *ast.Field [hdc HDC]}
	 {*ast.Field [nIndex int32]}
	 {*ast.FieldList -> *ast.Field [int32]}
	 {*ast.BlockStmt -> *ast.AssignStmt [ret _ _]}
	 {*ast.CallExpr -> *ast.SelectorExpr [syscall Syscall]}
	 {*ast.CallExpr -> *ast.SelectorExpr [getDeviceCaps Addr INT 2]}
	 {*ast.CallExpr [uintptr hdc]}
	 {*ast.CallExpr [uintptr nIndex INT 0]}
	 {*ast.ReturnStmt -> *ast.CallExpr [int32 ret]}


function name is GetDIBits 
	 { [GetDIBits]}
	 {*ast.FuncType -> *ast.FieldList -> *ast.Field [hdc HDC]}
	 {*ast.Field [hbmp HBITMAP]}
	 {*ast.Field [uStartScan uint32]}
	 {*ast.Field [cScanLines uint32]}
	 {*ast.Field [lpvBits]}
	 {*ast.StarExpr [byte]}
	 {*ast.Field [lpbi]}
	 {*ast.StarExpr [BITMAPINFO]}
	 {*ast.Field [uUsage uint32]}
	 {*ast.FieldList -> *ast.Field [int32]}
	 {*ast.BlockStmt -> *ast.AssignStmt [ret _ _]}
	 {*ast.CallExpr -> *ast.SelectorExpr [syscall Syscall9]}
	 {*ast.CallExpr -> *ast.SelectorExpr [getDIBits Addr INT 7]}
	 {*ast.CallExpr [uintptr hdc]}
	 {*ast.CallExpr [uintptr hbmp]}
	 {*ast.CallExpr [uintptr uStartScan]}
	 {*ast.CallExpr [uintptr cScanLines]}
	 {*ast.CallExpr [uintptr]}
	 {*ast.CallExpr -> *ast.SelectorExpr [unsafe Pointer lpvBits]}
	 {*ast.CallExpr [uintptr]}
	 {*ast.CallExpr -> *ast.SelectorExpr [unsafe Pointer lpbi]}
	 {*ast.CallExpr [uintptr uUsage INT 0 INT 0]}
	 {*ast.ReturnStmt -> *ast.CallExpr [int32 ret]}


function name is GetEnhMetaFile 
	 { [GetEnhMetaFile]}
	 {*ast.FuncType -> *ast.FieldList -> *ast.Field [lpszMetaFile]}
	 {*ast.StarExpr [uint16]}
	 {*ast.FieldList -> *ast.Field [HENHMETAFILE]}
	 {*ast.BlockStmt -> *ast.AssignStmt [ret _ _]}
	 {*ast.CallExpr -> *ast.SelectorExpr [syscall Syscall]}
	 {*ast.CallExpr -> *ast.SelectorExpr [getEnhMetaFile Addr INT 1]}
	 {*ast.CallExpr [uintptr]}
	 {*ast.CallExpr -> *ast.SelectorExpr [unsafe Pointer lpszMetaFile INT 0 INT 0]}
	 {*ast.ReturnStmt -> *ast.CallExpr [HENHMETAFILE ret]}


function name is GetEnhMetaFileHeader 
	 { [GetEnhMetaFileHeader]}
	 {*ast.FuncType -> *ast.FieldList -> *ast.Field [hemf HENHMETAFILE]}
	 {*ast.Field [cbBuffer uint32]}
	 {*ast.Field [lpemh]}
	 {*ast.StarExpr [ENHMETAHEADER]}
	 {*ast.FieldList -> *ast.Field [uint32]}
	 {*ast.BlockStmt -> *ast.AssignStmt [ret _ _]}
	 {*ast.CallExpr -> *ast.SelectorExpr [syscall Syscall]}
	 {*ast.CallExpr -> *ast.SelectorExpr [getEnhMetaFileHeader Addr INT 3]}
	 {*ast.CallExpr [uintptr hemf]}
	 {*ast.CallExpr [uintptr cbBuffer]}
	 {*ast.CallExpr [uintptr]}
	 {*ast.CallExpr -> *ast.SelectorExpr [unsafe Pointer lpemh]}
	 {*ast.ReturnStmt -> *ast.CallExpr [uint32 ret]}


function name is GetObject 
	 { [GetObject]}
	 {*ast.FuncType -> *ast.FieldList -> *ast.Field [hgdiobj HGDIOBJ]}
	 {*ast.Field [cbBuffer uintptr]}
	 {*ast.Field -> *ast.SelectorExpr [lpvObject unsafe Pointer]}
	 {*ast.FieldList -> *ast.Field [int32]}
	 {*ast.BlockStmt -> *ast.AssignStmt [ret _ _]}
	 {*ast.CallExpr -> *ast.SelectorExpr [syscall Syscall]}
	 {*ast.CallExpr -> *ast.SelectorExpr [getObject Addr INT 3]}
	 {*ast.CallExpr [uintptr hgdiobj]}
	 {*ast.CallExpr [uintptr cbBuffer]}
	 {*ast.CallExpr [uintptr lpvObject]}
	 {*ast.ReturnStmt -> *ast.CallExpr [int32 ret]}


function name is GetPixel 
	 { [GetPixel]}
	 {*ast.FuncType -> *ast.FieldList -> *ast.Field [hdc HDC]}
	 {*ast.Field [nXPos nYPos int32]}
	 {*ast.FieldList -> *ast.Field [COLORREF]}
	 {*ast.BlockStmt -> *ast.AssignStmt [ret _ _]}
	 {*ast.CallExpr -> *ast.SelectorExpr [syscall Syscall]}
	 {*ast.CallExpr -> *ast.SelectorExpr [getPixel Addr INT 3]}
	 {*ast.CallExpr [uintptr hdc]}
	 {*ast.CallExpr [uintptr nXPos]}
	 {*ast.CallExpr [uintptr nYPos]}
	 {*ast.ReturnStmt -> *ast.CallExpr [COLORREF ret]}


function name is GetRgnBox 
	 { [GetRgnBox]}
	 {*ast.FuncType -> *ast.FieldList -> *ast.Field [hrgn HRGN]}
	 {*ast.Field [lprc]}
	 {*ast.StarExpr [RECT]}
	 {*ast.FieldList -> *ast.Field [int32]}
	 {*ast.BlockStmt -> *ast.AssignStmt [ret _ _]}
	 {*ast.CallExpr -> *ast.SelectorExpr [syscall Syscall]}
	 {*ast.CallExpr -> *ast.SelectorExpr [getRgnBox Addr INT 2]}
	 {*ast.CallExpr [uintptr hrgn]}
	 {*ast.CallExpr [uintptr]}
	 {*ast.CallExpr -> *ast.SelectorExpr [unsafe Pointer lprc INT 0]}
	 {*ast.ReturnStmt -> *ast.CallExpr [int32 ret]}


function name is GetStockObject 
	 { [GetStockObject]}
	 {*ast.FuncType -> *ast.FieldList -> *ast.Field [fnObject int32]}
	 {*ast.FieldList -> *ast.Field [HGDIOBJ]}
	 {*ast.BlockStmt -> *ast.AssignStmt [ret _ _]}
	 {*ast.CallExpr -> *ast.SelectorExpr [syscall Syscall]}
	 {*ast.CallExpr -> *ast.SelectorExpr [getStockObject Addr INT 1]}
	 {*ast.CallExpr [uintptr fnObject INT 0 INT 0]}
	 {*ast.ReturnStmt -> *ast.CallExpr [HGDIOBJ ret]}


function name is GetTextColor 
	 { [GetTextColor]}
	 {*ast.FuncType -> *ast.FieldList -> *ast.Field [hdc HDC]}
	 {*ast.FieldList -> *ast.Field [COLORREF]}
	 {*ast.BlockStmt -> *ast.AssignStmt [ret _ _]}
	 {*ast.CallExpr -> *ast.SelectorExpr [syscall Syscall]}
	 {*ast.CallExpr -> *ast.SelectorExpr [getTextColor Addr INT 1]}
	 {*ast.CallExpr [uintptr hdc INT 0 INT 0]}
	 {*ast.ReturnStmt -> *ast.CallExpr [COLORREF ret]}


function name is GetTextExtentExPoint 
	 { [GetTextExtentExPoint]}
	 {*ast.FuncType -> *ast.FieldList -> *ast.Field [hdc HDC]}
	 {*ast.Field [lpszStr]}
	 {*ast.StarExpr [uint16]}
	 {*ast.Field [cchString nMaxExtent int32]}
	 {*ast.Field [lpnFit alpDx]}
	 {*ast.StarExpr [int32]}
	 {*ast.Field [lpSize]}
	 {*ast.StarExpr [SIZE]}
	 {*ast.FieldList -> *ast.Field [bool]}
	 {*ast.BlockStmt -> *ast.AssignStmt [ret _ _]}
	 {*ast.CallExpr -> *ast.SelectorExpr [syscall Syscall9]}
	 {*ast.CallExpr -> *ast.SelectorExpr [getTextExtentExPoint Addr INT 7]}
	 {*ast.CallExpr [uintptr hdc]}
	 {*ast.CallExpr [uintptr]}
	 {*ast.CallExpr -> *ast.SelectorExpr [unsafe Pointer lpszStr]}
	 {*ast.CallExpr [uintptr cchString]}
	 {*ast.CallExpr [uintptr nMaxExtent]}
	 {*ast.CallExpr [uintptr]}
	 {*ast.CallExpr -> *ast.SelectorExpr [unsafe Pointer lpnFit]}
	 {*ast.CallExpr [uintptr]}
	 {*ast.CallExpr -> *ast.SelectorExpr [unsafe Pointer alpDx]}
	 {*ast.CallExpr [uintptr]}
	 {*ast.CallExpr -> *ast.SelectorExpr [unsafe Pointer lpSize INT 0 INT 0]}
	 {*ast.ReturnStmt -> *ast.BinaryExpr [ret INT 0]}


function name is GetTextExtentPoint32 
	 { [GetTextExtentPoint32]}
	 {*ast.FuncType -> *ast.FieldList -> *ast.Field [hdc HDC]}
	 {*ast.Field [lpString]}
	 {*ast.StarExpr [uint16]}
	 {*ast.Field [c int32]}
	 {*ast.Field [lpSize]}
	 {*ast.StarExpr [SIZE]}
	 {*ast.FieldList -> *ast.Field [bool]}
	 {*ast.BlockStmt -> *ast.AssignStmt [ret _ _]}
	 {*ast.CallExpr -> *ast.SelectorExpr [syscall Syscall6]}
	 {*ast.CallExpr -> *ast.SelectorExpr [getTextExtentPoint32 Addr INT 4]}
	 {*ast.CallExpr [uintptr hdc]}
	 {*ast.CallExpr [uintptr]}
	 {*ast.CallExpr -> *ast.SelectorExpr [unsafe Pointer lpString]}
	 {*ast.CallExpr [uintptr c]}
	 {*ast.CallExpr [uintptr]}
	 {*ast.CallExpr -> *ast.SelectorExpr [unsafe Pointer lpSize INT 0 INT 0]}
	 {*ast.ReturnStmt -> *ast.BinaryExpr [ret INT 0]}


function name is GetTextMetrics 
	 { [GetTextMetrics]}
	 {*ast.FuncType -> *ast.FieldList -> *ast.Field [hdc HDC]}
	 {*ast.Field [lptm]}
	 {*ast.StarExpr [TEXTMETRIC]}
	 {*ast.FieldList -> *ast.Field [bool]}
	 {*ast.BlockStmt -> *ast.AssignStmt [ret _ _]}
	 {*ast.CallExpr -> *ast.SelectorExpr [syscall Syscall]}
	 {*ast.CallExpr -> *ast.SelectorExpr [getTextMetrics Addr INT 2]}
	 {*ast.CallExpr [uintptr hdc]}
	 {*ast.CallExpr [uintptr]}
	 {*ast.CallExpr -> *ast.SelectorExpr [unsafe Pointer lptm INT 0]}
	 {*ast.ReturnStmt -> *ast.BinaryExpr [ret INT 0]}


function name is GetViewportOrgEx 
	 { [GetViewportOrgEx]}
	 {*ast.FuncType -> *ast.FieldList -> *ast.Field [hdc HDC]}
	 {*ast.Field [lpPoint]}
	 {*ast.StarExpr [POINT]}
	 {*ast.FieldList -> *ast.Field [bool]}
	 {*ast.BlockStmt -> *ast.AssignStmt [ret _ _]}
	 {*ast.CallExpr -> *ast.SelectorExpr [syscall Syscall]}
	 {*ast.CallExpr -> *ast.SelectorExpr [getViewportOrgEx Addr INT 2]}
	 {*ast.CallExpr [uintptr hdc]}
	 {*ast.CallExpr [uintptr]}
	 {*ast.CallExpr -> *ast.SelectorExpr [unsafe Pointer lpPoint INT 0]}
	 {*ast.ReturnStmt -> *ast.BinaryExpr [ret INT 0]}


function name is GradientFill 
	 { [GradientFill]}
	 {*ast.FuncType -> *ast.FieldList -> *ast.Field [hdc HDC]}
	 {*ast.Field [pVertex]}
	 {*ast.StarExpr [TRIVERTEX]}
	 {*ast.Field [nVertex uint32]}
	 {*ast.Field -> *ast.SelectorExpr [pMesh unsafe Pointer]}
	 {*ast.Field [nMesh ulMode uint32]}
	 {*ast.FieldList -> *ast.Field [bool]}
	 {*ast.BlockStmt -> *ast.AssignStmt [ret _ _]}
	 {*ast.CallExpr -> *ast.SelectorExpr [syscall Syscall6]}
	 {*ast.CallExpr -> *ast.SelectorExpr [gradientFill Addr INT 6]}
	 {*ast.CallExpr [uintptr hdc]}
	 {*ast.CallExpr [uintptr]}
	 {*ast.CallExpr -> *ast.SelectorExpr [unsafe Pointer pVertex]}
	 {*ast.CallExpr [uintptr nVertex]}
	 {*ast.CallExpr [uintptr pMesh]}
	 {*ast.CallExpr [uintptr nMesh]}
	 {*ast.CallExpr [uintptr ulMode]}
	 {*ast.ReturnStmt -> *ast.BinaryExpr [ret INT 0]}


function name is IntersectClipRect 
	 { [IntersectClipRect]}
	 {*ast.FuncType -> *ast.FieldList -> *ast.Field [hdc HDC]}
	 {*ast.Field [nLeftRect nTopRect nRightRect nBottomRect int32]}
	 {*ast.FieldList -> *ast.Field [int32]}
	 {*ast.BlockStmt -> *ast.AssignStmt [ret _ _]}
	 {*ast.CallExpr -> *ast.SelectorExpr [syscall Syscall6]}
	 {*ast.CallExpr -> *ast.SelectorExpr [intersectClipRect Addr INT 5]}
	 {*ast.CallExpr [uintptr hdc]}
	 {*ast.CallExpr [uintptr nLeftRect]}
	 {*ast.CallExpr [uintptr nTopRect]}
	 {*ast.CallExpr [uintptr nRightRect]}
	 {*ast.CallExpr [uintptr nBottomRect INT 0]}
	 {*ast.ReturnStmt -> *ast.CallExpr [int32 ret]}


function name is LineTo 
	 { [LineTo]}
	 {*ast.FuncType -> *ast.FieldList -> *ast.Field [hdc HDC]}
	 {*ast.Field [nXEnd nYEnd int32]}
	 {*ast.FieldList -> *ast.Field [bool]}
	 {*ast.BlockStmt -> *ast.AssignStmt [ret _ _]}
	 {*ast.CallExpr -> *ast.SelectorExpr [syscall Syscall]}
	 {*ast.CallExpr -> *ast.SelectorExpr [lineTo Addr INT 3]}
	 {*ast.CallExpr [uintptr hdc]}
	 {*ast.CallExpr [uintptr nXEnd]}
	 {*ast.CallExpr [uintptr nYEnd]}
	 {*ast.ReturnStmt -> *ast.BinaryExpr [ret INT 0]}


function name is MoveToEx 
	 { [MoveToEx]}
	 {*ast.FuncType -> *ast.FieldList -> *ast.Field [hdc HDC]}
	 {*ast.Field [x y int]}
	 {*ast.Field [lpPoint]}
	 {*ast.StarExpr [POINT]}
	 {*ast.FieldList -> *ast.Field [bool]}
	 {*ast.BlockStmt -> *ast.AssignStmt [ret _ _]}
	 {*ast.CallExpr -> *ast.SelectorExpr [syscall Syscall6]}
	 {*ast.CallExpr -> *ast.SelectorExpr [moveToEx Addr INT 4]}
	 {*ast.CallExpr [uintptr hdc]}
	 {*ast.CallExpr [uintptr x]}
	 {*ast.CallExpr [uintptr y]}
	 {*ast.CallExpr [uintptr]}
	 {*ast.CallExpr -> *ast.SelectorExpr [unsafe Pointer lpPoint INT 0 INT 0]}
	 {*ast.ReturnStmt -> *ast.BinaryExpr [ret INT 0]}


function name is PlayEnhMetaFile 
	 { [PlayEnhMetaFile]}
	 {*ast.FuncType -> *ast.FieldList -> *ast.Field [hdc HDC]}
	 {*ast.Field [hemf HENHMETAFILE]}
	 {*ast.Field [lpRect]}
	 {*ast.StarExpr [RECT]}
	 {*ast.FieldList -> *ast.Field [bool]}
	 {*ast.BlockStmt -> *ast.AssignStmt [ret _ _]}
	 {*ast.CallExpr -> *ast.SelectorExpr [syscall Syscall]}
	 {*ast.CallExpr -> *ast.SelectorExpr [playEnhMetaFile Addr INT 3]}
	 {*ast.CallExpr [uintptr hdc]}
	 {*ast.CallExpr [uintptr hemf]}
	 {*ast.CallExpr [uintptr]}
	 {*ast.CallExpr -> *ast.SelectorExpr [unsafe Pointer lpRect]}
	 {*ast.ReturnStmt -> *ast.BinaryExpr [ret INT 0]}


function name is Polyline 
	 { [Polyline]}
	 {*ast.FuncType -> *ast.FieldList -> *ast.Field [hdc HDC]}
	 {*ast.Field -> *ast.SelectorExpr [lppt unsafe Pointer]}
	 {*ast.Field [cPoints int32]}
	 {*ast.FieldList -> *ast.Field [bool]}
	 {*ast.BlockStmt -> *ast.AssignStmt [ret _ _]}
	 {*ast.CallExpr -> *ast.SelectorExpr [syscall Syscall]}
	 {*ast.CallExpr -> *ast.SelectorExpr [polyline Addr INT 3]}
	 {*ast.CallExpr [uintptr hdc]}
	 {*ast.CallExpr [uintptr lppt]}
	 {*ast.CallExpr [uintptr cPoints]}
	 {*ast.ReturnStmt -> *ast.BinaryExpr [ret INT 0]}


function name is Rectangle_ 
	 { [Rectangle_]}
	 {*ast.FuncType -> *ast.FieldList -> *ast.Field [hdc HDC]}
	 {*ast.Field [nLeftRect nTopRect nRightRect nBottomRect int32]}
	 {*ast.FieldList -> *ast.Field [bool]}
	 {*ast.BlockStmt -> *ast.AssignStmt [ret _ _]}
	 {*ast.CallExpr -> *ast.SelectorExpr [syscall Syscall6]}
	 {*ast.CallExpr -> *ast.SelectorExpr [rectangle Addr INT 5]}
	 {*ast.CallExpr [uintptr hdc]}
	 {*ast.CallExpr [uintptr nLeftRect]}
	 {*ast.CallExpr [uintptr nTopRect]}
	 {*ast.CallExpr [uintptr nRightRect]}
	 {*ast.CallExpr [uintptr nBottomRect INT 0]}
	 {*ast.ReturnStmt -> *ast.BinaryExpr [ret INT 0]}


function name is RemoveFontResourceEx 
	 { [RemoveFontResourceEx]}
	 {*ast.FuncType -> *ast.FieldList -> *ast.Field [lpszFilename]}
	 {*ast.StarExpr [uint16]}
	 {*ast.Field [fl uint32]}
	 {*ast.Field -> *ast.SelectorExpr [pdv unsafe Pointer]}
	 {*ast.FieldList -> *ast.Field [bool]}
	 {*ast.BlockStmt -> *ast.AssignStmt [ret _ _]}
	 {*ast.CallExpr -> *ast.SelectorExpr [syscall Syscall]}
	 {*ast.CallExpr -> *ast.SelectorExpr [removeFontResourceEx Addr INT 3]}
	 {*ast.CallExpr [uintptr]}
	 {*ast.CallExpr -> *ast.SelectorExpr [unsafe Pointer lpszFilename]}
	 {*ast.CallExpr [uintptr fl]}
	 {*ast.CallExpr [uintptr pdv]}
	 {*ast.ReturnStmt -> *ast.BinaryExpr [ret INT 0]}


function name is RemoveFontMemResourceEx 
	 { [RemoveFontMemResourceEx]}
	 {*ast.FuncType -> *ast.FieldList -> *ast.Field [h HANDLE]}
	 {*ast.FieldList -> *ast.Field [bool]}
	 {*ast.BlockStmt -> *ast.AssignStmt [ret _ _]}
	 {*ast.CallExpr -> *ast.SelectorExpr [syscall Syscall]}
	 {*ast.CallExpr -> *ast.SelectorExpr [removeFontMemResourceEx Addr INT 1]}
	 {*ast.CallExpr [uintptr h INT 0 INT 0]}
	 {*ast.ReturnStmt -> *ast.BinaryExpr [ret INT 0]}


function name is ResetDC 
	 { [ResetDC]}
	 {*ast.FuncType -> *ast.FieldList -> *ast.Field [hdc HDC]}
	 {*ast.Field [lpInitData]}
	 {*ast.StarExpr [DEVMODE]}
	 {*ast.FieldList -> *ast.Field [HDC]}
	 {*ast.BlockStmt -> *ast.AssignStmt [ret _ _]}
	 {*ast.CallExpr -> *ast.SelectorExpr [syscall Syscall]}
	 {*ast.CallExpr -> *ast.SelectorExpr [resetDC Addr INT 2]}
	 {*ast.CallExpr [uintptr hdc]}
	 {*ast.CallExpr [uintptr]}
	 {*ast.CallExpr -> *ast.SelectorExpr [unsafe Pointer lpInitData INT 0]}
	 {*ast.ReturnStmt -> *ast.CallExpr [HDC ret]}


function name is RestoreDC 
	 { [RestoreDC]}
	 {*ast.FuncType -> *ast.FieldList -> *ast.Field [hdc HDC]}
	 {*ast.Field [nSaveDC int32]}
	 {*ast.FieldList -> *ast.Field [bool]}
	 {*ast.BlockStmt -> *ast.AssignStmt [ret _ _]}
	 {*ast.CallExpr -> *ast.SelectorExpr [syscall Syscall]}
	 {*ast.CallExpr -> *ast.SelectorExpr [restoreDC Addr INT 2]}
	 {*ast.CallExpr [uintptr hdc]}
	 {*ast.CallExpr [uintptr nSaveDC INT 0]}
	 {*ast.ReturnStmt -> *ast.BinaryExpr [ret INT 0]}


function name is RoundRect 
	 { [RoundRect]}
	 {*ast.FuncType -> *ast.FieldList -> *ast.Field [hdc HDC]}
	 {*ast.Field [nLeftRect nTopRect nRightRect nBottomRect nWidth nHeight int32]}
	 {*ast.FieldList -> *ast.Field [bool]}
	 {*ast.BlockStmt -> *ast.AssignStmt [ret _ _]}
	 {*ast.CallExpr -> *ast.SelectorExpr [syscall Syscall9]}
	 {*ast.CallExpr -> *ast.SelectorExpr [roundRect Addr INT 7]}
	 {*ast.CallExpr [uintptr hdc]}
	 {*ast.CallExpr [uintptr nLeftRect]}
	 {*ast.CallExpr [uintptr nTopRect]}
	 {*ast.CallExpr [uintptr nRightRect]}
	 {*ast.CallExpr [uintptr nBottomRect]}
	 {*ast.CallExpr [uintptr nWidth]}
	 {*ast.CallExpr [uintptr nHeight INT 0 INT 0]}
	 {*ast.ReturnStmt -> *ast.BinaryExpr [ret INT 0]}


function name is SaveDC 
	 { [SaveDC]}
	 {*ast.FuncType -> *ast.FieldList -> *ast.Field [hdc HDC]}
	 {*ast.FieldList -> *ast.Field [int32]}
	 {*ast.BlockStmt -> *ast.AssignStmt [ret _ _]}
	 {*ast.CallExpr -> *ast.SelectorExpr [syscall Syscall]}
	 {*ast.CallExpr -> *ast.SelectorExpr [saveDC Addr INT 1]}
	 {*ast.CallExpr [uintptr hdc INT 0 INT 0]}
	 {*ast.ReturnStmt -> *ast.CallExpr [int32 ret]}


function name is SelectObject 
	 { [SelectObject]}
	 {*ast.FuncType -> *ast.FieldList -> *ast.Field [hdc HDC]}
	 {*ast.Field [hgdiobj HGDIOBJ]}
	 {*ast.FieldList -> *ast.Field [HGDIOBJ]}
	 {*ast.BlockStmt -> *ast.AssignStmt [ret _ _]}
	 {*ast.CallExpr -> *ast.SelectorExpr [syscall Syscall]}
	 {*ast.CallExpr -> *ast.SelectorExpr [selectObject Addr INT 2]}
	 {*ast.CallExpr [uintptr hdc]}
	 {*ast.CallExpr [uintptr hgdiobj INT 0]}
	 {*ast.ReturnStmt -> *ast.CallExpr [HGDIOBJ ret]}


function name is SetBkColor 
	 { [SetBkColor]}
	 {*ast.FuncType -> *ast.FieldList -> *ast.Field [hdc HDC]}
	 {*ast.Field [crColor COLORREF]}
	 {*ast.FieldList -> *ast.Field [COLORREF]}
	 {*ast.BlockStmt -> *ast.AssignStmt [ret _ _]}
	 {*ast.CallExpr -> *ast.SelectorExpr [syscall Syscall]}
	 {*ast.CallExpr -> *ast.SelectorExpr [setBkColor Addr INT 2]}
	 {*ast.CallExpr [uintptr hdc]}
	 {*ast.CallExpr [uintptr crColor INT 0]}
	 {*ast.ReturnStmt -> *ast.CallExpr [COLORREF ret]}


function name is SetBkMode 
	 { [SetBkMode]}
	 {*ast.FuncType -> *ast.FieldList -> *ast.Field [hdc HDC]}
	 {*ast.Field [iBkMode int32]}
	 {*ast.FieldList -> *ast.Field [int32]}
	 {*ast.BlockStmt -> *ast.AssignStmt [ret _ _]}
	 {*ast.CallExpr -> *ast.SelectorExpr [syscall Syscall]}
	 {*ast.CallExpr -> *ast.SelectorExpr [setBkMode Addr INT 2]}
	 {*ast.CallExpr [uintptr hdc]}
	 {*ast.CallExpr [uintptr iBkMode INT 0]}
	 {*ast.ReturnStmt -> *ast.CallExpr [int32 ret]}


function name is SetBrushOrgEx 
	 { [SetBrushOrgEx]}
	 {*ast.FuncType -> *ast.FieldList -> *ast.Field [hdc HDC]}
	 {*ast.Field [nXOrg nYOrg int32]}
	 {*ast.Field [lppt]}
	 {*ast.StarExpr [POINT]}
	 {*ast.FieldList -> *ast.Field [bool]}
	 {*ast.BlockStmt -> *ast.AssignStmt [ret _ _]}
	 {*ast.CallExpr -> *ast.SelectorExpr [syscall Syscall6]}
	 {*ast.CallExpr -> *ast.SelectorExpr [setBrushOrgEx Addr INT 4]}
	 {*ast.CallExpr [uintptr hdc]}
	 {*ast.CallExpr [uintptr nXOrg]}
	 {*ast.CallExpr [uintptr nYOrg]}
	 {*ast.CallExpr [uintptr]}
	 {*ast.CallExpr -> *ast.SelectorExpr [unsafe Pointer lppt INT 0 INT 0]}
	 {*ast.ReturnStmt -> *ast.BinaryExpr [ret INT 0]}


function name is SetDIBits 
	 { [SetDIBits]}
	 {*ast.FuncType -> *ast.FieldList -> *ast.Field [hdc HDC]}
	 {*ast.Field [hbmp HBITMAP]}
	 {*ast.Field [uStartScan cScanLines uint32]}
	 {*ast.Field [lpvBits]}
	 {*ast.StarExpr [byte]}
	 {*ast.Field [lpbmi]}
	 {*ast.StarExpr [BITMAPINFO]}
	 {*ast.Field [fuColorUse uint32]}
	 {*ast.FieldList -> *ast.Field [int32]}
	 {*ast.BlockStmt -> *ast.AssignStmt [ret _ _]}
	 {*ast.CallExpr -> *ast.SelectorExpr [syscall Syscall9]}
	 {*ast.CallExpr -> *ast.SelectorExpr [setDIBits Addr INT 7]}
	 {*ast.CallExpr [uintptr hdc]}
	 {*ast.CallExpr [uintptr hbmp]}
	 {*ast.CallExpr [uintptr uStartScan]}
	 {*ast.CallExpr [uintptr cScanLines]}
	 {*ast.CallExpr [uintptr]}
	 {*ast.CallExpr -> *ast.SelectorExpr [unsafe Pointer lpvBits]}
	 {*ast.CallExpr [uintptr]}
	 {*ast.CallExpr -> *ast.SelectorExpr [unsafe Pointer lpbmi]}
	 {*ast.CallExpr [uintptr fuColorUse INT 0 INT 0]}
	 {*ast.ReturnStmt -> *ast.CallExpr [int32 ret]}


function name is SetPixel 
	 { [SetPixel]}
	 {*ast.FuncType -> *ast.FieldList -> *ast.Field [hdc HDC]}
	 {*ast.Field [X Y int32]}
	 {*ast.Field [crColor COLORREF]}
	 {*ast.FieldList -> *ast.Field [COLORREF]}
	 {*ast.BlockStmt -> *ast.AssignStmt [ret _ _]}
	 {*ast.CallExpr -> *ast.SelectorExpr [syscall Syscall6]}
	 {*ast.CallExpr -> *ast.SelectorExpr [setPixel Addr INT 4]}
	 {*ast.CallExpr [uintptr hdc]}
	 {*ast.CallExpr [uintptr X]}
	 {*ast.CallExpr [uintptr Y]}
	 {*ast.CallExpr [uintptr crColor INT 0 INT 0]}
	 {*ast.ReturnStmt -> *ast.CallExpr [COLORREF ret]}


function name is SetPixelFormat 
	 { [SetPixelFormat]}
	 {*ast.FuncType -> *ast.FieldList -> *ast.Field [hdc HDC]}
	 {*ast.Field [iPixelFormat int32]}
	 {*ast.Field [ppfd]}
	 {*ast.StarExpr [PIXELFORMATDESCRIPTOR]}
	 {*ast.FieldList -> *ast.Field [bool]}
	 {*ast.BlockStmt -> *ast.AssignStmt [ret _ _]}
	 {*ast.CallExpr -> *ast.SelectorExpr [syscall Syscall]}
	 {*ast.CallExpr -> *ast.SelectorExpr [setPixelFormat Addr INT 3]}
	 {*ast.CallExpr [uintptr hdc]}
	 {*ast.CallExpr [uintptr iPixelFormat]}
	 {*ast.CallExpr [uintptr]}
	 {*ast.CallExpr -> *ast.SelectorExpr [unsafe Pointer ppfd]}
	 {*ast.ReturnStmt -> *ast.BinaryExpr [ret INT 0]}


function name is SetStretchBltMode 
	 { [SetStretchBltMode]}
	 {*ast.FuncType -> *ast.FieldList -> *ast.Field [hdc HDC]}
	 {*ast.Field [iStretchMode int32]}
	 {*ast.FieldList -> *ast.Field [int32]}
	 {*ast.BlockStmt -> *ast.AssignStmt [ret _ _]}
	 {*ast.CallExpr -> *ast.SelectorExpr [syscall Syscall]}
	 {*ast.CallExpr -> *ast.SelectorExpr [setStretchBltMode Addr INT 2]}
	 {*ast.CallExpr [uintptr hdc]}
	 {*ast.CallExpr [uintptr iStretchMode INT 0]}
	 {*ast.ReturnStmt -> *ast.CallExpr [int32 ret]}


function name is SetTextColor 
	 { [SetTextColor]}
	 {*ast.FuncType -> *ast.FieldList -> *ast.Field [hdc HDC]}
	 {*ast.Field [crColor COLORREF]}
	 {*ast.FieldList -> *ast.Field [COLORREF]}
	 {*ast.BlockStmt -> *ast.AssignStmt [ret _ _]}
	 {*ast.CallExpr -> *ast.SelectorExpr [syscall Syscall]}
	 {*ast.CallExpr -> *ast.SelectorExpr [setTextColor Addr INT 2]}
	 {*ast.CallExpr [uintptr hdc]}
	 {*ast.CallExpr [uintptr crColor INT 0]}
	 {*ast.ReturnStmt -> *ast.CallExpr [COLORREF ret]}


function name is SetViewportOrgEx 
	 { [SetViewportOrgEx]}
	 {*ast.FuncType -> *ast.FieldList -> *ast.Field [hdc HDC]}
	 {*ast.Field [x y int32]}
	 {*ast.Field [lpPoint]}
	 {*ast.StarExpr [POINT]}
	 {*ast.FieldList -> *ast.Field [COLORREF]}
	 {*ast.BlockStmt -> *ast.AssignStmt [ret _ _]}
	 {*ast.CallExpr -> *ast.SelectorExpr [syscall Syscall6]}
	 {*ast.CallExpr -> *ast.SelectorExpr [setViewportOrgEx Addr INT 4]}
	 {*ast.CallExpr [uintptr hdc]}
	 {*ast.CallExpr [uintptr x]}
	 {*ast.CallExpr [uintptr y]}
	 {*ast.CallExpr [uintptr]}
	 {*ast.CallExpr -> *ast.SelectorExpr [unsafe Pointer lpPoint INT 0 INT 0]}
	 {*ast.ReturnStmt -> *ast.CallExpr [COLORREF ret]}


function name is StartDoc 
	 { [StartDoc]}
	 {*ast.FuncType -> *ast.FieldList -> *ast.Field [hdc HDC]}
	 {*ast.Field [lpdi]}
	 {*ast.StarExpr [DOCINFO]}
	 {*ast.FieldList -> *ast.Field [int32]}
	 {*ast.BlockStmt -> *ast.AssignStmt [ret _ _]}
	 {*ast.CallExpr -> *ast.SelectorExpr [syscall Syscall]}
	 {*ast.CallExpr -> *ast.SelectorExpr [startDoc Addr INT 2]}
	 {*ast.CallExpr [uintptr hdc]}
	 {*ast.CallExpr [uintptr]}
	 {*ast.CallExpr -> *ast.SelectorExpr [unsafe Pointer lpdi INT 0]}
	 {*ast.ReturnStmt -> *ast.CallExpr [int32 ret]}


function name is StartPage 
	 { [StartPage]}
	 {*ast.FuncType -> *ast.FieldList -> *ast.Field [hdc HDC]}
	 {*ast.FieldList -> *ast.Field [int32]}
	 {*ast.BlockStmt -> *ast.AssignStmt [ret _ _]}
	 {*ast.CallExpr -> *ast.SelectorExpr [syscall Syscall]}
	 {*ast.CallExpr -> *ast.SelectorExpr [startPage Addr INT 1]}
	 {*ast.CallExpr [uintptr hdc INT 0 INT 0]}
	 {*ast.ReturnStmt -> *ast.CallExpr [int32 ret]}


function name is StretchBlt 
	 { [StretchBlt]}
	 {*ast.FuncType -> *ast.FieldList -> *ast.Field [hdcDest HDC]}
	 {*ast.Field [nXOriginDest nYOriginDest nWidthDest nHeightDest int32]}
	 {*ast.Field [hdcSrc HDC]}
	 {*ast.Field [nXOriginSrc nYOriginSrc nWidthSrc nHeightSrc int32]}
	 {*ast.Field [dwRop uint32]}
	 {*ast.FieldList -> *ast.Field [bool]}
	 {*ast.BlockStmt -> *ast.AssignStmt [ret _ _]}
	 {*ast.CallExpr -> *ast.SelectorExpr [syscall Syscall12]}
	 {*ast.CallExpr -> *ast.SelectorExpr [stretchBlt Addr INT 11]}
	 {*ast.CallExpr [uintptr hdcDest]}
	 {*ast.CallExpr [uintptr nXOriginDest]}
	 {*ast.CallExpr [uintptr nYOriginDest]}
	 {*ast.CallExpr [uintptr nWidthDest]}
	 {*ast.CallExpr [uintptr nHeightDest]}
	 {*ast.CallExpr [uintptr hdcSrc]}
	 {*ast.CallExpr [uintptr nXOriginSrc]}
	 {*ast.CallExpr [uintptr nYOriginSrc]}
	 {*ast.CallExpr [uintptr nWidthSrc]}
	 {*ast.CallExpr [uintptr nHeightSrc]}
	 {*ast.CallExpr [uintptr dwRop INT 0]}
	 {*ast.ReturnStmt -> *ast.BinaryExpr [ret INT 0]}


function name is SwapBuffers 
	 { [SwapBuffers]}
	 {*ast.FuncType -> *ast.FieldList -> *ast.Field [hdc HDC]}
	 {*ast.FieldList -> *ast.Field [bool]}
	 {*ast.BlockStmt -> *ast.AssignStmt [ret _ _]}
	 {*ast.CallExpr -> *ast.SelectorExpr [syscall Syscall]}
	 {*ast.CallExpr -> *ast.SelectorExpr [swapBuffers Addr INT 1]}
	 {*ast.CallExpr [uintptr hdc INT 0 INT 0]}
	 {*ast.ReturnStmt -> *ast.BinaryExpr [ret INT 0]}


function name is TextOut 
	 { [TextOut]}
	 {*ast.FuncType -> *ast.FieldList -> *ast.Field [hdc HDC]}
	 {*ast.Field [nXStart nYStart int32]}
	 {*ast.Field [lpString]}
	 {*ast.StarExpr [uint16]}
	 {*ast.Field [cchString int32]}
	 {*ast.FieldList -> *ast.Field [bool]}
	 {*ast.BlockStmt -> *ast.AssignStmt [ret _ _]}
	 {*ast.CallExpr -> *ast.SelectorExpr [syscall Syscall6]}
	 {*ast.CallExpr -> *ast.SelectorExpr [textOut Addr INT 5]}
	 {*ast.CallExpr [uintptr hdc]}
	 {*ast.CallExpr [uintptr nXStart]}
	 {*ast.CallExpr [uintptr nYStart]}
	 {*ast.CallExpr [uintptr]}
	 {*ast.CallExpr -> *ast.SelectorExpr [unsafe Pointer lpString]}
	 {*ast.CallExpr [uintptr cchString INT 0]}
	 {*ast.ReturnStmt -> *ast.BinaryExpr [ret INT 0]}


function name is TransparentBlt 
	 { [TransparentBlt]}
	 {*ast.FuncType -> *ast.FieldList -> *ast.Field [hdcDest HDC]}
	 {*ast.Field [xoriginDest yoriginDest wDest hDest int32]}
	 {*ast.Field [hdcSrc HDC]}
	 {*ast.Field [xoriginSrc yoriginSrc wSrc hSrc int32]}
	 {*ast.Field [crTransparent uint32]}
	 {*ast.FieldList -> *ast.Field [bool]}
	 {*ast.BlockStmt -> *ast.AssignStmt [ret _ _]}
	 {*ast.CallExpr -> *ast.SelectorExpr [syscall Syscall12]}
	 {*ast.CallExpr -> *ast.SelectorExpr [transparentBlt Addr INT 11]}
	 {*ast.CallExpr [uintptr hdcDest]}
	 {*ast.CallExpr [uintptr xoriginDest]}
	 {*ast.CallExpr [uintptr yoriginDest]}
	 {*ast.CallExpr [uintptr wDest]}
	 {*ast.CallExpr [uintptr hDest]}
	 {*ast.CallExpr [uintptr hdcSrc]}
	 {*ast.CallExpr [uintptr xoriginSrc]}
	 {*ast.CallExpr [uintptr yoriginSrc]}
	 {*ast.CallExpr [uintptr wSrc]}
	 {*ast.CallExpr [uintptr hSrc]}
	 {*ast.CallExpr [uintptr crTransparent INT 0]}
	 {*ast.ReturnStmt -> *ast.BinaryExpr [ret INT 0]}


